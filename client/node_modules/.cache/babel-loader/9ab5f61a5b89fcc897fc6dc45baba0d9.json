{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/Posts.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { axiosWithAuth } from '../helpers/index';\nimport IndividualPost from './IndividualPost';\nimport { connect } from 'react-redux';\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\";\nimport { changeOrderPosts } from \"../store/actions/postActions\"; // import { fetchPosts } from \"../store/actions/postActions\";\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Search from \"./Search\"; // import { Dropdown } from 'react-bootstrap';\n\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/Select';\nimport OrderPosts from './OrderPosts';\n\nfunction Posts(props) {\n  const [searchPosts, setsearchPosts] = useState([]); //  const [orderBy,setOrderBy] = useState({\n  //    order:props.orderPosts\n  //   })\n\n  async function searchPostsHandler(term) {\n    axiosWithAuth().post('/post/search', {\n      searchTerm: term\n    }).then(res => {\n      setsearchPosts(res.data);\n      props.toggleSearchToTrue();\n    }).catch(err => {});\n  }\n\n  ;\n  useEffect(() => {\n    onFirstLoad(); // if(props.orderPosts !== orderBy.order){\n    //   props.changeOrderPosts(orderBy.order)\n    // }\n  }, [props.orderPosts]);\n\n  function onFirstLoad() {\n    // props.fetchFilteredPosts(\"AllPosts\",`${orderBy.order}`)\n    props.fetchFilteredPosts(\"AllPosts\", `${props.orderPosts}`);\n  }\n\n  const handleChange = name => event => {\n    setOrderBy({ ...orderBy,\n      [name]: event.target.value\n    });\n  }; // console.log(props.orderPosts,'coming corm redux orderf')\n  //   console.log(props.filteredPosts,\"Postss coming from reducer\")\n\n\n  if (props.searchToggle === true) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Search, {\n      searchPostsHandler: searchPostsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(OrderPosts, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, searchPosts.map(p => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IndividualPost, {\n        post: p,\n        key: caches.uid,\n        fetchPosts: props.fetchFilteredPosts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }\n      }));\n    })));\n  } else if (props.filteredPosts.length > 0) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Search, {\n      searchPostsHandler: searchPostsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(OrderPosts, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, props.filteredPosts.map(p => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IndividualPost, {\n        post: p,\n        key: caches.uid,\n        fetchPosts: props.fetchFilteredPosts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }\n      }));\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    }, \"ayyyyy\"));\n  }\n}\n\n;\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts,\n  orderPosts: state.post.order\n});\n\nexport default connect(mapStateToProps, {\n  toggleSearchToTrue,\n  fetchFilteredPosts,\n  changeOrderPosts\n})(Posts);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/Posts.js"],"names":["React","useState","useEffect","axiosWithAuth","IndividualPost","connect","fetchFilteredPosts","toggleSearchToTrue","changeOrderPosts","ExpandMoreIcon","Search","Select","InputLabel","OrderPosts","Posts","props","searchPosts","setsearchPosts","searchPostsHandler","term","post","searchTerm","then","res","data","catch","err","onFirstLoad","orderPosts","handleChange","name","event","setOrderBy","orderBy","target","value","searchToggle","display","flexDirection","alignItems","map","p","caches","uid","filteredPosts","length","mapStateToProps","state","myposts","posts","order"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,gBAAT,QAAiC,8BAAjC,C,CACA;;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAKA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAEpB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C,CAFoB,CAItB;AAEA;AAEA;;AAEE,iBAAeiB,kBAAf,CAAkCC,IAAlC,EAAwC;AAEtChB,IAAAA,aAAa,GACViB,IADH,CACQ,cADR,EACwB;AAAEC,MAAAA,UAAU,EAAEF;AAAd,KADxB,EAEGG,IAFH,CAEQC,GAAG,IAAI;AACXN,MAAAA,cAAc,CAACM,GAAG,CAACC,IAAL,CAAd;AACAT,MAAAA,KAAK,CAACR,kBAAN;AACD,KALH,EAMGkB,KANH,CAMSC,GAAG,IAAI,CACb,CAPH;AAQD;;AAAA;AAGAxB,EAAAA,SAAS,CAAC,MAAM;AACfyB,IAAAA,WAAW,GADI,CAGf;AAEA;AAEA;AAED,GATS,EASP,CAACZ,KAAK,CAACa,UAAP,CATO,CAAT;;AAWD,WAASD,WAAT,GAAsB;AAEpB;AACAZ,IAAAA,KAAK,CAACT,kBAAN,CAAyB,UAAzB,EAAqC,GAAES,KAAK,CAACa,UAAW,EAAxD;AAGD;;AAEH,QAAMC,YAAY,GAAGC,IAAI,IAAIC,KAAK,IAAI;AACpCC,IAAAA,UAAU,CAAC,EACT,GAAGC,OADM;AAET,OAACH,IAAD,GAAQC,KAAK,CAACG,MAAN,CAAaC;AAFZ,KAAD,CAAV;AAKD,GAND,CA1CsB,CAmDtB;AACA;;;AAEE,MAAIpB,KAAK,CAACqB,YAAN,KAAuB,IAA3B,EAAiC;AAE/B,wBAEE,uDAEE,oBAAC,MAAD;AAAQ,MAAA,kBAAkB,EAAElB,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAkBE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,eAqBE;AAAK,MAAA,KAAK,EAAE;AAAEmB,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,aAAa,EAAE,QAAlC;AAA4CC,QAAAA,UAAU,EAAE;AAAxD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIIvB,WAAW,CAACwB,GAAZ,CAAgBC,CAAC,IAAI;AACnB,0BACE,uDACE,oBAAC,cAAD;AAAgB,QAAA,IAAI,EAAEA,CAAtB;AAAyB,QAAA,GAAG,EAAEC,MAAM,CAACC,GAArC;AAA0C,QAAA,UAAU,EAAE5B,KAAK,CAACT,kBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD,KAND,CAJJ,CArBF,CAFF;AA4CD,GA9CD,MA+CK,IAAGS,KAAK,CAAC6B,aAAN,CAAoBC,MAApB,GAA2B,CAA9B,EAAiC;AACpC,wBACE,uDAEE,oBAAC,MAAD;AAAQ,MAAA,kBAAkB,EAAE3B,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAmBE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,eAqBE;AAAK,MAAA,KAAK,EAAE;AAAEmB,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,aAAa,EAAE,QAAlC;AAA4CC,QAAAA,UAAU,EAAE;AAAxD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGOxB,KAAK,CAAC6B,aAAN,CAAoBJ,GAApB,CAAwBC,CAAC,IAAI;AAC5B,0BACE,uDACE,oBAAC,cAAD;AAAgB,QAAA,IAAI,EAAEA,CAAtB;AAAyB,QAAA,GAAG,EAAEC,MAAM,CAACC,GAArC;AAA0C,QAAA,UAAU,EAAE5B,KAAK,CAACT,kBAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD,KANA,CAHP,CArBF,CADF;AAsCD,GAvCI,MAuCA;AAEH,wBAGE,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,CAHF;AAOD;AAGF;;AAAA;;AAGD,MAAMwC,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,YAAY,EAAEW,KAAK,CAAC3B,IAAN,CAAWgB,YADO;AAEhCY,EAAAA,OAAO,EAAED,KAAK,CAAC3B,IAAN,CAAW6B,KAFY;AAGhCL,EAAAA,aAAa,EAAEG,KAAK,CAAC3B,IAAN,CAAWwB,aAHM;AAIhChB,EAAAA,UAAU,EAAEmB,KAAK,CAAC3B,IAAN,CAAW8B;AAJS,CAAL,CAA7B;;AAMA,eAAe7C,OAAO,CACpByC,eADoB,EAEpB;AAAEvC,EAAAA,kBAAF;AAAsBD,EAAAA,kBAAtB;AAA0CE,EAAAA;AAA1C,CAFoB,CAAP,CAGbM,KAHa,CAAf","sourcesContent":["\n\nimport React, { useState, useEffect } from \"react\";\nimport { axiosWithAuth } from '../helpers/index';\nimport IndividualPost from './IndividualPost'\nimport { connect } from 'react-redux';\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\";\nimport { changeOrderPosts } from \"../store/actions/postActions\";\n// import { fetchPosts } from \"../store/actions/postActions\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Search from \"./Search\";\n// import { Dropdown } from 'react-bootstrap';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/Select';\nimport OrderPosts from './OrderPosts'\n \n\n\n\nfunction Posts(props) {\n\n  const [searchPosts, setsearchPosts] = useState([])\n  \n//  const [orderBy,setOrderBy] = useState({\n\n//    order:props.orderPosts\n\n//   })\n  \n  async function searchPostsHandler(term) {\n\n    axiosWithAuth()\n      .post('/post/search', { searchTerm: term })\n      .then(res => {\n        setsearchPosts(res.data)\n        props.toggleSearchToTrue()\n      })\n      .catch(err => {\n      });\n  };\n\n\n   useEffect(() => {\n    onFirstLoad()\n   \n    // if(props.orderPosts !== orderBy.order){\n\n    //   props.changeOrderPosts(orderBy.order)\n      \n    // }\n    \n  }, [props.orderPosts]);\n\n  function onFirstLoad(){\n\n    // props.fetchFilteredPosts(\"AllPosts\",`${orderBy.order}`)\n    props.fetchFilteredPosts(\"AllPosts\",`${props.orderPosts}`)\n\n\n  }\n\nconst handleChange = name => event => {\n  setOrderBy({\n    ...orderBy,\n    [name]: event.target.value,\n  });\n\n};\n\n\n// console.log(props.orderPosts,'coming corm redux orderf')\n//   console.log(props.filteredPosts,\"Postss coming from reducer\")\n\n  if (props.searchToggle === true) {\n\n    return (\n\n      <>\n\n        <Search searchPostsHandler={searchPostsHandler} />\n        {/* <Select\n          native\n          name=\"order\"\n          value={orderBy.order}\n          onChange={handleChange('order')}\n          inputProps={{\n            name: 'type',\n            id: 'outlined-type-native-simple',\n          }}\n        >\n          <option value={\"date\"}>date</option>\n          <option value={\"likes\"}>likes</option>\n        \n        </Select> */}\n\n        <OrderPosts/>\n\n\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n\n          {\n\n            searchPosts.map(p => {\n              return (\n                <>\n                  <IndividualPost post={p} key={caches.uid} fetchPosts={props.fetchFilteredPosts} />\n                </>\n              );\n            })\n\n\n          }\n\n\n\n        </div>\n      </>\n\n    )\n  }\n  else if(props.filteredPosts.length>0) {\n    return (\n      <>\n\n        <Search searchPostsHandler={searchPostsHandler} />\n\n        \n        {/* <Select\n          native\n          name=\"order\"\n          value={orderBy.order}\n          onChange={handleChange('order')}\n          inputProps={{\n            name: 'type',\n            id: 'outlined-type-native-simple',\n          }}\n        >\n          <option value={\"date\"}>date</option>\n          <option value={\"likes\"}>likes</option>\n        \n        </Select> */}\n        <OrderPosts/>\n\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n\n       \n              {props.filteredPosts.map(p => {\n                return (\n                  <>\n                    <IndividualPost post={p} key={caches.uid} fetchPosts={props.fetchFilteredPosts} />\n                  </>\n                );\n              })}\n          \n  \n\n        </div>\n      </>\n    );\n  }else{\n\n    return (\n\n\n      <>\n      <h1>ayyyyy</h1>\n      </>\n    )\n  }\n\n\n};\n\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts,\n  orderPosts: state.post.order\n});\nexport default connect(\n  mapStateToProps,\n  { toggleSearchToTrue, fetchFilteredPosts, changeOrderPosts }\n)(Posts);\n"]},"metadata":{},"sourceType":"module"}