{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/PostImageFormModal.js\";\nimport React, { useState } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport PostImageUpload from './PostImageUpload';\nimport '../styles/fullscreenmodal.scss';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: 270,\n    height: 600\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction PostImageFormModal(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [errorOpen, setErrorOpen] = useState(false);\n\n  function handleOpen() {\n    setOpen(true);\n  }\n\n  function handleErrorOpen() {\n    setErrorOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleErrorClose() {\n    setErrorOpen(false);\n  }\n\n  function handleBothClosesForCars() {\n    props.onclose();\n    props.handleClose();\n  }\n\n  function handleBothClosesForMaintence() {\n    props.onclose();\n    props.handleClose();\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dialog, {\n    open: props.open,\n    onClose: props.handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Upload Images\"), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PostImageUpload, {\n    post: props.post,\n    isCarousel: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(PostImageUpload, {\n    post: props.post,\n    isForm: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    onClick: handleBothClosesForMaintence,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 8\n    }\n  }, \"Skip\"))));\n}\n\nexport default PostImageFormModal;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/PostImageFormModal.js"],"names":["React","useState","Dialog","makeStyles","FormControl","Button","CloudUploadIcon","PostImageUpload","useStyles","theme","formControl","margin","spacing","width","height","selectEmpty","marginTop","container","display","flexWrap","textField","marginLeft","marginRight","button","PostImageFormModal","props","classes","open","setOpen","errorOpen","setErrorOpen","handleOpen","handleErrorOpen","handleClose","handleErrorClose","handleBothClosesForCars","onclose","handleBothClosesForMaintence","flexDirection","justifyContent","alignItems","post"],"mappings":"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","sourcesContent":["\nimport React, { useState } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport PostImageUpload from './PostImageUpload'\n\n\nimport '../styles/fullscreenmodal.scss'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        margin: theme.spacing(1),\n        width: 270,\n        height:600\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(2),\n      },\n      container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n      },\n      textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200,\n      },\n      button: {\n        margin: theme.spacing(1),\n      },\n\n}));\n\n\n\n\nfunction PostImageFormModal(props) {\n  const classes = useStyles();\n\n  \n  const [open, setOpen] = useState(false);\n  const [errorOpen, setErrorOpen] = useState(false);\n\n\n  function handleOpen() {\n    setOpen(true);\n  }\n  function handleErrorOpen() {\n    setErrorOpen(true);\n  }\n  function handleClose() {\n    setOpen(false);\n  }\n  function handleErrorClose() {\n    setErrorOpen(false);\n  }\n\n  function handleBothClosesForCars(){\n    props.onclose()\n    props.handleClose()\n  }\n\n  function handleBothClosesForMaintence(){\n    props.onclose()\n    props.handleClose()\n  }\n\n  return (\n    <>\n      <Dialog   open={props.open} onClose={props.handleClose}  >\n      <h2>Upload Images</h2>\n\n      <FormControl className={classes.formControl} style={{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\"}}>\n    \n     \n    \n\n       <PostImageUpload post={props.post} isCarousel={true}/>\n       <PostImageUpload post={props.post} isForm={true}/>\n       <Button\n      className={classes.button} \n      variant=\"contained\"\n      color=\"primary\"\n      size=\"large\"\n      onClick={handleBothClosesForMaintence}>\n        \n            Skip\n     </Button>\n    \n      \n\n\n      \n           \n\n        </FormControl>\n        </Dialog>\n    </>\n  )\n}\n\n\nexport default PostImageFormModal;"]},"metadata":{},"sourceType":"module"}