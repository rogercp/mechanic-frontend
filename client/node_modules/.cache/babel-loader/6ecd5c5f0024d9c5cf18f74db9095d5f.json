{"ast":null,"code":"import _slicedToArray from \"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/Posts.js\";\nimport React, { useState, useEffect } from \"react\";\nimport DashSideNav from './DashSideNav';\nimport { axiosWithAuth } from '../helpers/index';\nimport IndividualPost from './IndividualPost';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from \"../store/actions/postActions\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport search from './Search';\nimport Search from \"./Search\";\n\nfunction Posts(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchPosts = _useState2[0],\n        setsearchPosts = _useState2[1];\n\n  async function searchPostsHandler(term) {\n    axiosWithAuth().post('/post/search', {\n      searchTerm: term\n    }).then(res => {\n      console.log(searchPosts);\n      setsearchPosts(res.data);\n    }).catch(err => {});\n  }\n\n  ;\n  useEffect(() => {\n    props.fetchPosts();\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Search, {\n    searchPostsHandler: searchPostsHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, searchPosts.length > 0 ? searchPosts.map(p => {\n    return React.createElement(React.Fragment, null, React.createElement(IndividualPost, {\n      post: p,\n      key: caches.uid,\n      fetchPosts: props.fetchPosts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }) : props.myposts.map(p => {\n    return React.createElement(React.Fragment, null, React.createElement(IndividualPost, {\n      post: p,\n      key: caches.uid,\n      fetchPosts: props.fetchPosts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }));\n  }), React.createElement(ExpandMoreIcon, {\n    style: {\n      fontSize: \"100px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })));\n}\n\n;\n\nconst mapStateToProps = state => ({\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts\n});\n\nexport default connect(mapStateToProps, {\n  fetchPosts\n})(Posts);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/Posts.js"],"names":["React","useState","useEffect","DashSideNav","axiosWithAuth","IndividualPost","connect","fetchPosts","ExpandMoreIcon","search","Search","Posts","props","searchPosts","setsearchPosts","searchPostsHandler","term","post","searchTerm","then","res","console","log","data","catch","err","display","flexDirection","alignItems","length","map","p","caches","uid","myposts","fontSize","mapStateToProps","state","posts","filteredPosts"],"mappings":";;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAKA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA,oBAEeX,QAAQ,CAAC,EAAD,CAFvB;AAAA;AAAA,QAEfY,WAFe;AAAA,QAEHC,cAFG;;AAKpB,iBAAeC,kBAAf,CAAmCC,IAAnC,EAAyC;AAGvCZ,IAAAA,aAAa,GACRa,IADL,CACU,cADV,EAC0B;AAACC,MAAAA,UAAU,EAACF;AAAZ,KAD1B,EAEKG,IAFL,CAEUC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ;AACAC,MAAAA,cAAc,CAACM,GAAG,CAACG,IAAL,CAAd;AACD,KALL,EAMKC,KANL,CAMWC,GAAG,IAAI,CACb,CAPL;AAQD;;AAAA;AAGCvB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAACL,UAAN;AAED,GAHQ,EAGN,EAHM,CAAT;AAOA,SACE,0CAEE,oBAAC,MAAD;AAAS,IAAA,kBAAkB,EAAEQ,kBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAKA;AAAK,IAAA,KAAK,EAAE;AAACW,MAAAA,OAAO,EAAC,MAAT;AAAiBC,MAAAA,aAAa,EAAC,QAA/B;AAAwCC,MAAAA,UAAU,EAAC;AAAnD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIEf,WAAW,CAACgB,MAAZ,GAAmB,CAAnB,GAEEhB,WAAW,CAACiB,GAAZ,CAAgBC,CAAC,IAAI;AACrB,WACI,0CACA,oBAAC,cAAD;AAAkB,MAAA,IAAI,EAAEA,CAAxB;AAA4B,MAAA,GAAG,EAAEC,MAAM,CAACC,GAAxC;AAA6C,MAAA,UAAU,EAAErB,KAAK,CAACL,UAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ;AAKH,GANG,CAFF,GAYAK,KAAK,CAACsB,OAAN,CAAcJ,GAAd,CAAkBC,CAAC,IAAI;AACnB,WACI,0CACA,oBAAC,cAAD;AAAkB,MAAA,IAAI,EAAEA,CAAxB;AAA4B,MAAA,GAAG,EAAEC,MAAM,CAACC,GAAxC;AAA6C,MAAA,UAAU,EAAErB,KAAK,CAACL,UAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ;AAKH,GAND,CAhBF,EA2BG,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAE;AAAC4B,MAAAA,QAAQ,EAAC;AAAV,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BH,CALA,CADF;AAsCH;;AAAA;;AAGD,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCH,EAAAA,OAAO,EAAEG,KAAK,CAACpB,IAAN,CAAWqB,KADY;AAEhCC,EAAAA,aAAa,EAACF,KAAK,CAACpB,IAAN,CAAWsB;AAFO,CAAL,CAA7B;;AAIA,eAAejC,OAAO,CACpB8B,eADoB,EAEpB;AAAC7B,EAAAA;AAAD,CAFoB,CAAP,CAGbI,KAHa,CAAf","sourcesContent":["\n\nimport React, { useState, useEffect} from \"react\";\nimport DashSideNav from './DashSideNav';\nimport { axiosWithAuth } from '../helpers/index';\nimport IndividualPost from './IndividualPost'\nimport { connect } from 'react-redux';\nimport { fetchPosts } from \"../store/actions/postActions\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport search from './Search';\nimport Search from \"./Search\";\n\n\n\n\nfunction Posts(props) {\n  \nconst [searchPosts,setsearchPosts] = useState([])\n\n\n  async function searchPostsHandler (term) {\n    \n  \n    axiosWithAuth()\n        .post('/post/search', {searchTerm:term})\n        .then(res => {  \n          console.log(searchPosts)\n          setsearchPosts(res.data)\n        })\n        .catch(err => {      \n        });\n  };\n  \n\n    useEffect(() => {\n      props.fetchPosts()\n      \n    }, []);\n\n\n\n    return (\n      <>\n\n        <Search  searchPostsHandler={searchPostsHandler} />\n\n      \n      <div style={{display:\"flex\", flexDirection:\"column\",alignItems:\"center\"}}>\n        \n        {\n        \n        searchPosts.length>0 ?\n\n          searchPosts.map(p => {\n          return (\n              <>\n              <IndividualPost   post={p}  key={caches.uid} fetchPosts={props.fetchPosts} />\n              </>\n          );\n      })\n        \n        :\n        \n        props.myposts.map(p => {\n            return (\n                <>\n                <IndividualPost   post={p}  key={caches.uid} fetchPosts={props.fetchPosts} />\n                </>\n            );\n        })\n  \n        }\n        \n        \n         <ExpandMoreIcon style={{fontSize:\"100px\"}} />\n\n        </div> \n      </>\n    );\n};\n\n\nconst mapStateToProps = state => ({\n  myposts: state.post.posts,\n  filteredPosts:state.post.filteredPosts\n});\nexport default connect(\n  mapStateToProps,\n  {fetchPosts}\n)(Posts);\n"]},"metadata":{},"sourceType":"module"}