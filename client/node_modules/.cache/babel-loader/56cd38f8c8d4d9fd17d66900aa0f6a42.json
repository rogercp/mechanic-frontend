{"ast":null,"code":"import _defineProperty from\"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React from'react';import{makeStyles}from'@material-ui/core/styles';import TextField from'@material-ui/core/TextField';import InputLabel from'@material-ui/core/InputLabel';import FormControl from'@material-ui/core/FormControl';import Select from'@material-ui/core/Select';import Button from'@material-ui/core/Button';import{connect}from'react-redux';import{addPost}from\"../store/actions/postActions\";import moment from'moment';import'../styles/navbar.scss';var useStyles=makeStyles(function(theme){return{formControl:{margin:theme.spacing(1),Width:200},selectEmpty:{marginTop:theme.spacing(2)},container:{display:'flex',flexWrap:'wrap'},textField:{marginLeft:theme.spacing(1),marginRight:theme.spacing(1),width:200},button:{margin:theme.spacing(1)}};});function PostForm(props){var time=moment().format(\"MMMM Do YYYY, h:mma\");var classes=useStyles();var _React$useState=React.useState({category:'',post_text:'',post_date:time}),_React$useState2=_slicedToArray(_React$useState,2),state=_React$useState2[0],setState=_React$useState2[1];var handleChange=function handleChange(name){return function(event){setState(_objectSpread({},state,_defineProperty({},name,event.target.value)));};};var onSubmitHandler=function onSubmitHandler(e){e.preventDefault();props.addPost(state);};return React.createElement(React.Fragment,null,React.createElement(FormControl,{className:classes.formControl,noValidate:true,autoComplete:\"off\",onSubmit:onSubmitHandler},React.createElement(InputLabel,{id:\"demo-simple-select-label\"},\"Category\"),React.createElement(Select,{native:true,name:\"category\",className:classes.textField,value:state.category,onChange:handleChange('category'),inputProps:{name:'type',id:'outlined-type-native-simple'}},React.createElement(\"option\",{value:\"\"}),React.createElement(\"option\",{value:\"Sedan\"},\"category\"),React.createElement(\"option\",{value:\"Coupe\"},\"category\"),React.createElement(\"option\",{value:\"Van\"},\"category\"),React.createElement(\"option\",{value:\"SUV\"},\"category\"),React.createElement(\"option\",{value:\"Truck\"},\"category\"),React.createElement(\"option\",{value:\"Wagon\"},\"category\"),React.createElement(\"option\",{value:\"Convertible\"},\"category\")),React.createElement(TextField,{id:\"outlined-multiline-static\",multiline:true,name:\"post_text\",value:state.post_text,onChange:handleChange('post_text')//   rows=\"4\"\n,placeholder:\"Description\",className:classes.textField,margin:\"normal\",variant:\"outlined\"}),React.createElement(Button,{variant:\"contained\",color:\"primary\",size:\"large\",className:classes.button,onClick:onSubmitHandler},\"Enter\")));};var mapStateToProps=function mapStateToProps(_ref){var state=_ref.state;return{};};export default connect(mapStateToProps,{addPost:addPost})(PostForm);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/PostForm.js"],"names":["React","makeStyles","TextField","InputLabel","FormControl","Select","Button","connect","addPost","moment","useStyles","theme","formControl","margin","spacing","Width","selectEmpty","marginTop","container","display","flexWrap","textField","marginLeft","marginRight","width","button","PostForm","props","time","format","classes","useState","category","post_text","post_date","state","setState","handleChange","name","event","target","value","onSubmitHandler","e","preventDefault","id","mapStateToProps"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { addPost } from \"../store/actions/postActions\";\nimport moment from 'moment'\n\nimport  '../styles/navbar.scss';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    Width: 200,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction PostForm(props) {\n\n  const time = moment().format(\"MMMM Do YYYY, h:mma\")\n\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    category : '',\n    post_text:'',\n    post_date: time,\n  });\n\n  \n  const handleChange = name => event => {\n    setState({\n      ...state,\n      [name]: event.target.value,\n    });\n  };\n\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    props.addPost(state)\n};\n     \n    \n\n\n\n    return (\n      <>\n\n      <FormControl className={classes.formControl} noValidate autoComplete=\"off\" onSubmit={onSubmitHandler}>\n\n        <InputLabel id=\"demo-simple-select-label\">Category</InputLabel>\n        <Select\n          native\n          name=\"category\"\n          className={classes.textField}\n          value={state.category}\n          onChange={handleChange('category')}\n          inputProps={{\n            name: 'type',\n            id: 'outlined-type-native-simple',\n          }}\n        >\n          <option value=\"\" />\n          <option value={\"Sedan\"}>category</option>\n          <option value={\"Coupe\"}>category</option>\n          <option value={\"Van\"}>category</option>\n          <option value={\"SUV\"}>category</option>\n          <option value={\"Truck\"}>category</option>\n          <option value={\"Wagon\"}>category</option>\n          <option value={\"Convertible\"}>category</option>\n        </Select>\n     \n        <TextField\n          id=\"outlined-multiline-static\"\n          multiline\n          name=\"post_text\"\n          value={state.post_text}\n          onChange={handleChange('post_text')}\n        //   rows=\"4\"\n          placeholder=\"Description\"\n          className={classes.textField}\n          margin=\"normal\"\n          variant=\"outlined\"\n        />\n       \n\n        \n        <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n        className={classes.button}\n        onClick={onSubmitHandler}\n        >\n        Enter\n        </Button>\n\n </FormControl>\n\n      </>\n    );\n};\n\n\nconst mapStateToProps = ({ state }) => ({\n  \n});\n\nexport default connect(\n  mapStateToProps,\n  { addPost }\n)(PostForm);\n\n"]},"metadata":{},"sourceType":"module"}