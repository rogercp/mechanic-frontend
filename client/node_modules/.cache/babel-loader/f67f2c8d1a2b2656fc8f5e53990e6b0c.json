{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/OrderPosts.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\"; // import { changeOrderPosts } from \"../store/actions/postActions\";\n\nimport Select from '@material-ui/core/Select';\nimport { Dropdown, Button, ButtonGroup } from 'react-bootstrap';\n\nfunction OrderPosts(props) {\n  // const [orderBy,setOrderBy] = useState({\n  //   order:props.orderPosts\n  //  })\n  // useEffect(() => {\n  // props.changeOrderPosts(orderBy.order)\n  // props.fetchFilteredPosts(\"AllPosts\",`${orderBy.order}`)\n  // }, [orderBy.order]);\n  //  const handleChange = name => event => {\n  //   setOrderBy({\n  //     ...orderBy,\n  //     [name]: event.target.value,\n  //   });\n  // };\n  // const changeOrder = (term) =>{\n  //   props.fetchFilteredPosts(\"AllPosts\",`${term}`)\n  // }\n  console.log(props.orderPosts, 'coming corm redux orderf');\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dropdown, {\n    as: ButtonGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"Dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }\n  }, \"Order By\"), /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    split: true,\n    variant: \"Dark\",\n    id: \"dropdown-split-basic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n    onClick: e => props.fetchFilteredPosts(\"AllPosts\", 'date'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }\n  }, \"date\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    onClick: e => props.fetchFilteredPosts(\"AllPosts\", 'likes'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, \"likes\"))));\n}\n\n;\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts,\n  orderPosts: state.post.order\n});\n\nexport default connect(mapStateToProps, {\n  toggleSearchToTrue,\n  fetchFilteredPosts\n})(OrderPosts);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/OrderPosts.js"],"names":["React","useState","useEffect","connect","fetchFilteredPosts","toggleSearchToTrue","Select","Dropdown","Button","ButtonGroup","OrderPosts","props","console","log","orderPosts","e","mapStateToProps","state","searchToggle","post","myposts","posts","filteredPosts","order"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,kBAAT,QAAmC,8BAAnC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,QAAT,EAAkBC,MAAlB,EAAyBC,WAAzB,QAA4C,iBAA5C;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAGzB;AAEA;AAEA;AAGA;AAGA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,UAAlB,EAA6B,0BAA7B;AAEA,sBAEE,uDAGH,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAEL,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,oBAAC,QAAD,CAAU,MAAV;AAAiB,IAAA,KAAK,MAAtB;AAAuB,IAAA,OAAO,EAAC,MAA/B;AAAsC,IAAA,EAAE,EAAC,sBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAKE,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,OAAO,EAAGM,CAAD,IAAMJ,KAAK,CAACP,kBAAN,CAAyB,UAAzB,EAAoC,MAApC,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEC,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,OAAO,EAAGW,CAAD,IAAMJ,KAAK,CAACP,kBAAN,CAAyB,UAAzB,EAAoC,OAApC,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFD,CALF,CAHG,CAFF;AAqBD;;AAAA;;AAID,MAAMY,eAAe,GAAGC,KAAK,KAAK;AAChCC,EAAAA,YAAY,EAAED,KAAK,CAACE,IAAN,CAAWD,YADO;AAEhCE,EAAAA,OAAO,EAAEH,KAAK,CAACE,IAAN,CAAWE,KAFY;AAGhCC,EAAAA,aAAa,EAAEL,KAAK,CAACE,IAAN,CAAWG,aAHM;AAIhCR,EAAAA,UAAU,EAAEG,KAAK,CAACE,IAAN,CAAWI;AAJS,CAAL,CAA7B;;AAMA,eAAepB,OAAO,CACpBa,eADoB,EAEpB;AAAEX,EAAAA,kBAAF;AAAsBD,EAAAA;AAAtB,CAFoB,CAAP,CAGbM,UAHa,CAAf","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\";\n// import { changeOrderPosts } from \"../store/actions/postActions\";\nimport Select from '@material-ui/core/Select';\nimport { Dropdown,Button,ButtonGroup } from 'react-bootstrap';\n\n\nfunction OrderPosts(props) {\n\n  \n  // const [orderBy,setOrderBy] = useState({\n\n  //   order:props.orderPosts\n \n  //  })\n\n\n  // useEffect(() => {\n   \n   \n  // props.changeOrderPosts(orderBy.order)\n  // props.fetchFilteredPosts(\"AllPosts\",`${orderBy.order}`)\n  // }, [orderBy.order]);\n\n\n\n  //  const handleChange = name => event => {\n  //   setOrderBy({\n  //     ...orderBy,\n  //     [name]: event.target.value,\n  //   });\n  \n  // };\n\n  // const changeOrder = (term) =>{\n\n  //   props.fetchFilteredPosts(\"AllPosts\",`${term}`)\n\n  // }\n\n  \n\n\n  console.log(props.orderPosts,'coming corm redux orderf')\n\n  return (\n\n    <>\n    \n\n <Dropdown as={ButtonGroup}>\n   <Button variant=\"Dark\">Order By</Button>\n\n   <Dropdown.Toggle split variant=\"Dark\" id=\"dropdown-split-basic\" />\n\n   <Dropdown.Menu>\n     <Dropdown.Item onClick={(e)=> props.fetchFilteredPosts(\"AllPosts\",'date') }>date</Dropdown.Item>\n    <Dropdown.Item onClick={(e)=> props.fetchFilteredPosts(\"AllPosts\",'likes') }>likes</Dropdown.Item>\n   </Dropdown.Menu>\n </Dropdown>\n    </>\n\n  );\n\n\n\n};\n\n\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts,\n  orderPosts: state.post.order\n});\nexport default connect(\n  mapStateToProps,\n  { toggleSearchToTrue, fetchFilteredPosts }\n)(OrderPosts);\n\n"]},"metadata":{},"sourceType":"module"}