{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/ImageCarousel.js\";\nimport React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { Carousel, Image } from 'react-bootstrap';\nimport CarImageFixShow from './CarImageFixShow';\nimport PostImageShow from './PostImageShow';\nimport CarImageShow from './CarImgShow';\n\nfunction ImageCarousel(props) {\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  if (props.isImageDelShow) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, props.postImages.map((image, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          overflow: \"auto\",\n          width: \"75px\",\n          margin: \"1px\",\n          overflow: \"hidden\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(PostImageShow, {\n        style: {\n          backgroundColor: \"black\"\n        },\n        key: index,\n        post: props.currentForPost,\n        isDeleteableOnClick: true,\n        postImages: props.postImages,\n        fetchPostImages: props.fetchPostImages,\n        image: image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }));\n    })));\n  } else if (props.isImageDelShowForFixes) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, props.carFixImages.map((image, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          overflow: \"auto\",\n          width: \"75px\",\n          margin: \"1px\",\n          overflow: \"hidden\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CarImageFixShow, {\n        style: {\n          backgroundColor: \"black\"\n        },\n        carFix: props.carFix,\n        key: index,\n        image: image,\n        isDeleteableOnClick: true,\n        fetchFixDocuments: props.fetchFixDocuments,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }));\n    })));\n  } else if (props.isImageDelShowForCars) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, props.carImages.map((image, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          overflow: \"auto\",\n          width: \"75px\",\n          margin: \"1px\",\n          overflow: \"hidden\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CarImageShow, {\n        style: {\n          backgroundColor: \"black\"\n        },\n        carFix: props.carFix,\n        key: index,\n        image: image,\n        isDeleteableOnClick: true,\n        car: props.car,\n        fetchCarImages: props.fetchCarImages,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }));\n    })));\n  } else if (props.isPostImageCarousel) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"300px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Carousel, {\n      interval: 50000000000000000,\n      style: {\n        backgroundColor: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, props.postImages.map((image, index) => {\n      return /*#__PURE__*/React.createElement(Carousel.Item, {\n        style: {\n          overflow: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(PostImageShow, {\n        style: {\n          backgroundColor: \"black\"\n        },\n        onClick: props.open,\n        key: index,\n        postImages: props.postImages,\n        post: props.post,\n        image: image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }));\n    })));\n  } else if (props.isCarFixImages) {\n    return /*#__PURE__*/React.createElement(Dialog, {\n      style: {\n        backgroundColor: \"black\"\n      },\n      open: props.open,\n      onClose: props.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Carousel, {\n      style: {\n        backgroundColor: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, props.carFixImages.map((image, index) => {\n      return /*#__PURE__*/React.createElement(Carousel.Item, {\n        style: {\n          overflow: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CarImageFixShow, {\n        style: {\n          backgroundColor: \"black\"\n        },\n        carFix: props.carFix,\n        key: index,\n        image: image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Carousel.Caption, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }));\n    })));\n  } else if (props.isCarImage) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"300px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Carousel, {\n      interval: 50000000000000000,\n      style: {\n        backgroundColor: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, props.carImages.map((image, index) => {\n      return /*#__PURE__*/React.createElement(Carousel.Item, {\n        style: {\n          overflow: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CarImageShow, {\n        style: {\n          backgroundColor: \"black\"\n        },\n        car: props.car,\n        key: index,\n        image: image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Carousel.Caption, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }\n      }));\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(Dialog, {\n      style: {\n        backgroundColor: \"black\"\n      },\n      open: props.open,\n      onClose: props.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Carousel, {\n      style: {\n        backgroundColor: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, props.postImages.map((image, index) => {\n      return /*#__PURE__*/React.createElement(Carousel.Item, {\n        style: {\n          overflow: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(PostImageShow, {\n        style: {\n          backgroundColor: \"black\"\n        },\n        key: index,\n        post: props.post,\n        postImages: props.postImages,\n        image: image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Carousel.Caption, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }\n      }));\n    })));\n  }\n}\n\nexport default ImageCarousel;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/ImageCarousel.js"],"names":["React","useTheme","Dialog","Carousel","Image","CarImageFixShow","PostImageShow","CarImageShow","ImageCarousel","props","theme","activeStep","setActiveStep","useState","handleNext","prevActiveStep","handleBack","isImageDelShow","postImages","map","image","index","overflow","width","margin","backgroundColor","currentForPost","fetchPostImages","isImageDelShowForFixes","carFixImages","carFix","fetchFixDocuments","isImageDelShowForCars","carImages","car","fetchCarImages","isPostImageCarousel","open","post","isCarFixImages","handleClose","isCarImage"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { Carousel, Image } from 'react-bootstrap';\nimport CarImageFixShow from './CarImageFixShow';\nimport PostImageShow from './PostImageShow';\nimport CarImageShow from './CarImgShow'\n\n\nfunction ImageCarousel(props) {\n\n  const theme = useTheme();\n\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n\n  if (props.isImageDelShow) {\n    return (\n      <>\n        <div>\n          {props.postImages.map((image, index) => {\n\n            return (\n\n              <div style={{ overflow: \"auto\", width: \"75px\", margin: \"1px\", overflow: \"hidden\" }} >\n                <PostImageShow style={{ backgroundColor: \"black\" }} key={index} post={props.currentForPost} isDeleteableOnClick={true}  postImages={props.postImages}    fetchPostImages={props.fetchPostImages} image={image} />\n\n              </div>\n\n            )\n\n          })}\n        </div>\n      </>\n\n    );\n  } \n  else if(props.isImageDelShowForFixes){\n\n    return (\n      <>\n        <div>\n          {props.carFixImages.map((image, index) => {\n\n            return (\n\n              <div style={{ overflow: \"auto\", width: \"75px\", margin: \"1px\", overflow: \"hidden\" }} >\n                <CarImageFixShow style={{ backgroundColor: \"black\" }} carFix={props.carFix} key={index} image={image} isDeleteableOnClick={true} fetchFixDocuments={props.fetchFixDocuments}/>\n\n              </div>\n\n            )\n\n          })}\n        </div>\n      </>\n\n    );\n  }\n  else if(props.isImageDelShowForCars){\n\n    return (\n      <>\n        <div>\n          {props.carImages.map((image, index) => {\n\n            return (\n\n              <div style={{ overflow: \"auto\", width: \"75px\", margin: \"1px\", overflow: \"hidden\" }} >\n                <CarImageShow style={{ backgroundColor: \"black\" }} carFix={props.carFix} key={index} image={image} isDeleteableOnClick={true} car={props.car} fetchCarImages={props.fetchCarImages}/>\n\n              </div>\n\n            )\n\n          })}\n        </div>\n      </>\n\n    );\n  }\n\n  else if (props.isPostImageCarousel) {\n    return (\n      <div style={{ width: \"300px\" }}  >\n        <Carousel interval={50000000000000000} style={{ backgroundColor: \"black\" }}>\n          {props.postImages.map((image, index) => {\n            return (\n\n              <Carousel.Item style={{ overflow: \"auto\" }} >\n                <PostImageShow style={{ backgroundColor: \"black\" }} onClick={props.open} key={index} postImages={props.postImages}  post={props.post} image={image} />\n              </Carousel.Item>\n\n            )\n          })}\n        </Carousel>\n      </div>\n\n    )\n  } else if (props.isCarFixImages) {\n    return (\n      <Dialog style={{ backgroundColor: \"black\" }} open={props.open} onClose={props.handleClose} >\n        <Carousel style={{ backgroundColor: \"black\" }}>\n          {props.carFixImages.map((image, index) => {\n            return (\n              <Carousel.Item style={{ overflow: \"auto\" }} >\n                <CarImageFixShow style={{ backgroundColor: \"black\" }} carFix={props.carFix} key={index} image={image} />\n                <Carousel.Caption>\n                  {/* <h3>First slide label</h3> */}\n                </Carousel.Caption>\n              </Carousel.Item>\n            )\n\n          })}\n        </Carousel>\n\n      </Dialog>\n    );\n\n  }\n\n\n  else if (props.isCarImage) {\n    return (\n      <div style={{ width: \"300px\" }}  >\n      <Carousel interval={50000000000000000} style={{ backgroundColor: \"black\" }}>\n          {props.carImages.map((image, index) => {\n            return (\n              <Carousel.Item style={{ overflow: \"auto\" }} >\n                <CarImageShow style={{ backgroundColor: \"black\" }} car={props.car} key={index} image={image} />\n                <Carousel.Caption>\n                  {/* <h3>First slide label</h3> */}\n                </Carousel.Caption>\n              </Carousel.Item>\n            )\n\n          })}\n        </Carousel>\n      </div>\n    );\n\n  }\n\n\n  else {\n    return (\n      <Dialog style={{ backgroundColor: \"black\" }} open={props.open} onClose={props.handleClose} >\n        <Carousel style={{ backgroundColor: \"black\" }}>\n          {props.postImages.map((image, index) => {\n            return (\n              <Carousel.Item style={{ overflow: \"auto\" }} >\n                <PostImageShow style={{ backgroundColor: \"black\" }} key={index} post={props.post}  postImages={props.postImages}  image={image} />\n                <Carousel.Caption>\n                  {/* <h3>First slide label</h3> */}\n                </Carousel.Caption>\n              </Carousel.Item>\n            )\n\n          })}\n        </Carousel>\n\n      </Dialog>\n    );\n  }\n\n}\n\nexport default ImageCarousel;\n"]},"metadata":{},"sourceType":"module"}