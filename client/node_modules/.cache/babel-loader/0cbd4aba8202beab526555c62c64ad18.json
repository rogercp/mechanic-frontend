{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/CarImgShow.js\";\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\n\nfunction CarImgShow(props) {\n  const [thisImage, setThisimage] = useState('');\n  const fileRef = imagesRef.child(`${props.car.id}/${props.image.file_name}`);\n  useEffect(() => {\n    getImg();\n  }, []);\n\n  function getImg() {\n    fileRef.getMetadata().then(metadata => {\n      fileRef.getDownloadURL().then(url => {\n        setThisimage(url); // let img = document.getElementById('document-image');\n        // if (metadata.contentType === 'application/pdf') {\n        //     img.src = '';\n        //     // TODO handle PDFs\n        //   } else {\n        //     img.src = url;\n        //   }\n      }).catch(err => {\n        console.error(err);\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    id: \"reg-image\",\n    height: \"200px\",\n    style: {\n      maxWidth: '100%',\n      maxHeight: '100%'\n    },\n    src: `${thisImage}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default CarImgShow;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/CarImgShow.js"],"names":["React","useEffect","useState","imagesRef","CarImgShow","props","thisImage","setThisimage","fileRef","child","car","id","image","file_name","getImg","getMetadata","then","metadata","getDownloadURL","url","catch","err","console","error","maxWidth","maxHeight"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,qBAA1B;;AAIA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAEzB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMM,OAAO,GAAGL,SAAS,CAACM,KAAV,CAAiB,GAAEJ,KAAK,CAACK,GAAN,CAAUC,EAAG,IAAGN,KAAK,CAACO,KAAN,CAAYC,SAAU,EAAzD,CAAhB;AAGAZ,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,MAAM;AACP,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASA,MAAT,GAAkB;AAChBN,IAAAA,OAAO,CAACO,WAAR,GAAsBC,IAAtB,CAA4BC,QAAD,IAAc;AACvCT,MAAAA,OAAO,CAACU,cAAR,GAAyBF,IAAzB,CAA8BG,GAAG,IAAI;AAEnCZ,QAAAA,YAAY,CAACY,GAAD,CAAZ,CAFmC,CAInC;AACA;AACA;AACA;AACA;AACA;AACA;AACD,OAXD,EAYGC,KAZH,CAYSC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,OAdH;AAeD,KAhBD,EAgBGD,KAhBH,CAgBUC,GAAD,IAAS;AAChBC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,KAlBD;AAmBD;;AAED,sBACE,uDAGE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAoB,IAAA,MAAM,EAAC,OAA3B;AAAmC,IAAA,KAAK,EAAE;AAAEG,MAAAA,QAAQ,EAAE,MAAZ;AAAoBC,MAAAA,SAAS,EAAE;AAA/B,KAA1C;AAAmF,IAAA,GAAG,EAAG,GAAEnB,SAAU,EAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AASD;;AAGD,eAAeF,UAAf","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\n\n\n\nfunction CarImgShow(props) {\n\n  const [thisImage, setThisimage] = useState('')\n\n  const fileRef = imagesRef.child(`${props.car.id}/${props.image.file_name}`);\n\n\n  useEffect(() => {\n    getImg()\n  }, []);\n\n  function getImg() {\n    fileRef.getMetadata().then((metadata) => {\n      fileRef.getDownloadURL().then(url => {\n\n        setThisimage(url)\n\n        // let img = document.getElementById('document-image');\n        // if (metadata.contentType === 'application/pdf') {\n        //     img.src = '';\n        //     // TODO handle PDFs\n        //   } else {\n        //     img.src = url;\n        //   }\n      })\n        .catch(err => {\n          console.error(err);\n        })\n    }).catch((err) => {\n      console.error(err);\n    });\n  }\n\n  return (\n    <>\n      {/* {(metadata.contentType === 'application/pdf')? <div id=\"div-pdf\" src={`${thisImage}`}></div> :  <img id=\"reg-image\" height=\"200px\" src={`${thisImage}`}></img>} */}\n      \n      <img id=\"reg-image\" height=\"200px\" style={{ maxWidth: '100%', maxHeight: '100%' }} src={`${thisImage}`}></img>\n      {/* {props.image.file_name} */}\n\n    </>\n  )\n}\n\n\nexport default CarImgShow;\n"]},"metadata":{},"sourceType":"module"}