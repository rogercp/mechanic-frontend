{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/OrderPosts.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\";\nimport { changeOrderPosts } from \"../store/actions/postActions\";\nimport Select from '@material-ui/core/Select';\n\nfunction OrderPosts(props) {\n  const [orderBy, setOrderBy] = useState({\n    order: props.orderPosts\n  });\n  useEffect(() => {\n    props.changeOrderPosts(orderBy.order);\n  }, [orderBy.order]);\n\n  const handleChange = name => event => {\n    setOrderBy({ ...orderBy,\n      [name]: event.target.value\n    });\n  };\n\n  console.log(props.orderPosts, 'coming corm redux orderf');\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    name: \"order\",\n    value: orderBy.order,\n    onChange: handleChange('order'),\n    inputProps: {\n      name: 'type',\n      id: 'outlined-type-native-simple'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"date\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"likes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"likes\")));\n}\n\n;\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts,\n  orderPosts: state.post.order\n});\n\nexport default connect(mapStateToProps, {\n  toggleSearchToTrue,\n  fetchFilteredPosts,\n  changeOrderPosts\n})(OrderPosts);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/OrderPosts.js"],"names":["React","useState","useEffect","connect","fetchFilteredPosts","toggleSearchToTrue","changeOrderPosts","Select","OrderPosts","props","orderBy","setOrderBy","order","orderPosts","handleChange","name","event","target","value","console","log","id","mapStateToProps","state","searchToggle","post","myposts","posts","filteredPosts"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAGzB,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBV,QAAQ,CAAC;AAEpCW,IAAAA,KAAK,EAACH,KAAK,CAACI;AAFwB,GAAD,CAArC;AAOAX,EAAAA,SAAS,CAAC,MAAM;AAGhBO,IAAAA,KAAK,CAACH,gBAAN,CAAuBI,OAAO,CAACE,KAA/B;AAEC,GALQ,EAKN,CAACF,OAAO,CAACE,KAAT,CALM,CAAT;;AASC,QAAME,YAAY,GAAGC,IAAI,IAAIC,KAAK,IAAI;AACrCL,IAAAA,UAAU,CAAC,EACT,GAAGD,OADM;AAET,OAACK,IAAD,GAAQC,KAAK,CAACC,MAAN,CAAaC;AAFZ,KAAD,CAAV;AAKD,GANA;;AASDC,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACI,UAAlB,EAA6B,0BAA7B;AAEA,sBAEE,uDACA,oBAAC,MAAD;AACQ,IAAA,MAAM,MADd;AAEQ,IAAA,IAAI,EAAC,OAFb;AAGQ,IAAA,KAAK,EAAEH,OAAO,CAACE,KAHvB;AAIQ,IAAA,QAAQ,EAAEE,YAAY,CAAC,OAAD,CAJ9B;AAKQ,IAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,MADI;AAEVM,MAAAA,EAAE,EAAE;AAFM,KALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUS;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVT,eAWQ;AAAQ,IAAA,KAAK,EAAE,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXR,eAYQ;AAAQ,IAAA,KAAK,EAAE,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAZR,CADA,CAFF;AAyBD;;AAAA;;AAID,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCC,EAAAA,YAAY,EAAED,KAAK,CAACE,IAAN,CAAWD,YADO;AAEhCE,EAAAA,OAAO,EAAEH,KAAK,CAACE,IAAN,CAAWE,KAFY;AAGhCC,EAAAA,aAAa,EAAEL,KAAK,CAACE,IAAN,CAAWG,aAHM;AAIhCf,EAAAA,UAAU,EAAEU,KAAK,CAACE,IAAN,CAAWb;AAJS,CAAL,CAA7B;;AAMA,eAAeT,OAAO,CACpBmB,eADoB,EAEpB;AAAEjB,EAAAA,kBAAF;AAAsBD,EAAAA,kBAAtB;AAA0CE,EAAAA;AAA1C,CAFoB,CAAP,CAGbE,UAHa,CAAf","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\";\nimport { changeOrderPosts } from \"../store/actions/postActions\";\nimport Select from '@material-ui/core/Select';\n\n\nfunction OrderPosts(props) {\n\n  \n  const [orderBy,setOrderBy] = useState({\n\n    order:props.orderPosts\n \n   })\n\n\n  useEffect(() => {\n   \n   \n  props.changeOrderPosts(orderBy.order)\n      \n  }, [orderBy.order]);\n\n\n\n   const handleChange = name => event => {\n    setOrderBy({\n      ...orderBy,\n      [name]: event.target.value,\n    });\n  \n  };\n\n\n  console.log(props.orderPosts,'coming corm redux orderf')\n\n  return (\n\n    <>\n    <Select\n            native\n            name=\"order\"\n            value={orderBy.order}\n            onChange={handleChange('order')}\n            inputProps={{\n              name: 'type',\n              id: 'outlined-type-native-simple',\n            }}\n          >\n             <option value=\"\" />\n            <option value={\"date\"}>date</option>\n            <option value={\"likes\"}>likes</option>\n          \n          </Select>\n\n    </>\n\n  );\n\n\n\n};\n\n\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts,\n  orderPosts: state.post.order\n});\nexport default connect(\n  mapStateToProps,\n  { toggleSearchToTrue, fetchFilteredPosts, changeOrderPosts }\n)(OrderPosts);\n\n"]},"metadata":{},"sourceType":"module"}