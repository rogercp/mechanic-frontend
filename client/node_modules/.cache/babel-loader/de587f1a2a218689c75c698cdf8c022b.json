{"ast":null,"code":"import _defineProperty from \"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/IndividualPost.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react'; // import { makeStyles } from '@material-ui/core/styles';\n\nimport { Image, roundedCircle } from 'react-bootstrap';\nimport '../styles/postsIndividual.scss';\nimport { HTML5_FMT } from 'moment';\nimport ProfileImageShow from './ProfileImageShow';\nimport Comment from './Comment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Route, withRouter } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport EditIcon from '@material-ui/icons/Add';\nimport PostAddModal from './PostAddModal';\nimport { browserHistory } from 'react-router';\nimport { Form } from 'react-bootstrap';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { axiosWithAuth } from '../helpers/index';\nimport PostImageUpload from './PostImageUpload';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n    position: 'relative',\n    minHeight: 200\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  },\n  margin: {\n    margin: theme.spacing(1),\n    backgroundColor: \"white\",\n    borderRadius: \"10%\",\n    boxShadow: \"0 16px 19px rgba(0,0,0,0.2), 0 15px 15px rgba(0,0,0,0.2)\",\n    '&:hover': {\n      boxShadow: \"0 2px 4px rgba(0,0,0,0.25), 0 2px 2px rgba(0,0,0,0.22)\"\n    }\n  },\n  buttons: {\n    margin: '5px 10px'\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst IndividualPost = props => {\n  const classes = useStyles();\n\n  const _React$useState = React.useState({\n    isCirclePic: true,\n    isPost: true\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        commentsAreOpen = _useState2[0],\n        setCommentsAreOpen = _useState2[1];\n\n  const _useState3 = useState({\n    user_id: localStorage.getItem(\"id\"),\n    comment_text: ''\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        commentState = _useState4[0],\n        setCommentState = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        commentFetch = _useState6[0],\n        setCommentFetch = _useState6[1];\n\n  useEffect(() => {\n    fetchComments();\n  }, []);\n\n  const fetchComments = () => {\n    axiosWithAuth().get(\"/comment/\".concat(props.post.id)).then(res => {\n      setCommentFetch(res.data);\n    }).catch(err => {});\n  };\n\n  const handleChange = name => event => {\n    setCommentState(_objectSpread({}, commentState, {\n      [name]: event.target.value\n    }));\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    axiosWithAuth().post(\"/comment/\".concat(props.post.id), commentState).then(res => {\n      console.log(\"comment success\");\n    }).catch(err => {});\n  };\n\n  function incrementLike() {\n    axiosWithAuth().patch(\"/post/inc/\".concat(props.post.id)).then(res => {\n      props.fetchPosts();\n    }).catch(err => {});\n  }\n\n  ;\n\n  function decreaseLike() {\n    axiosWithAuth().patch(\"/post/dec/\".concat(props.post.id)).then(res => {\n      props.fetchPosts();\n    }).catch(err => {});\n  }\n\n  ;\n  console.log(props.post, \"this is the post\");\n\n  const toggleComments = e => {\n    e.preventDefault();\n\n    if (commentsAreOpen === true) {\n      setCommentsAreOpen(false);\n    } else {\n      setCommentsAreOpen(true);\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"singlePost\",\n    style: {\n      width: \"98%\",\n      marginBottom: \"5px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: \"block\",\n      backgroundColor: \"orange\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      float: \"left\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, props.post ? React.createElement(ProfileImageShow, {\n    style: {\n      width: \"40px\",\n      height: \"40px\",\n      paddingRight: \"2px\"\n    },\n    isPost: state.isPost,\n    isPostPic: true,\n    isCirclePic: state.isCirclePic,\n    post: props.post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }) : null), React.createElement(\"div\", {\n    style: {\n      float: \"right\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, props.post.post_date))), React.createElement(\"div\", {\n    style: {\n      display: \"block\",\n      marginTop: \"45px\",\n      marginBottom: \"45px\",\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(PostImageUpload, {\n    post: props.post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), React.createElement(PostImageUpload, {\n    post: props.post,\n    isCarouselForPost: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, props.post.post_text)), React.createElement(\"div\", {\n    style: {\n      display: \"block\",\n      backgroundColor: \"orange\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      float: \"left\",\n      display: \"flex\",\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(CommentIcon, {\n    className: classes.margin,\n    onClick: toggleComments,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }), \" \", React.createElement(\"p\", {\n    style: {\n      marginTop: \"8px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, commentFetch.length)), React.createElement(\"div\", {\n    style: {\n      float: \"right\",\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"space-between\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: {\n      marginTop: \"8px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, props.post.like), React.createElement(ThumbUpIcon, {\n    onClick: incrementLike,\n    style: {\n      borderRadius: \"50%\"\n    },\n    className: classes.margin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }), React.createElement(ThumbDownIcon, {\n    onClick: decreaseLike,\n    style: {\n      borderRadius: \"50%\"\n    },\n    className: classes.margin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    style: {\n      border: \"2px !important\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, commentsAreOpen ? React.createElement(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    onSubmit: onSubmitHandler,\n    size: \"md\",\n    type: \"text\",\n    placeholder: \"Comment\",\n    id: \"standard-basic\",\n    name: \"comment_text\",\n    value: commentState.comment_text,\n    onChange: handleChange('comment_text'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }), React.createElement(Button, {\n    style: {},\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    endIcon: React.createElement(SendIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }),\n    onClick: onSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \"Enter\")), React.createElement(\"div\", {\n    style: {\n      display: \"block\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, commentFetch.map(comment => {\n    return React.createElement(React.Fragment, null, React.createElement(Comment, {\n      comment: comment,\n      fetchComments: fetchComments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }));\n  })), React.createElement(ExpandMoreIcon, {\n    style: {\n      fontSize: \"50px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  })) : null)));\n};\n\nexport default IndividualPost;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/IndividualPost.js"],"names":["React","useState","useEffect","Image","roundedCircle","HTML5_FMT","ProfileImageShow","Comment","makeStyles","Route","withRouter","TextField","Fab","EditIcon","PostAddModal","browserHistory","Form","ThumbUpIcon","ThumbDownIcon","CommentIcon","SendIcon","Button","ExpandMoreIcon","axiosWithAuth","PostImageUpload","useStyles","theme","root","backgroundColor","palette","background","paper","width","position","minHeight","fab","bottom","spacing","right","margin","borderRadius","boxShadow","buttons","button","IndividualPost","props","classes","isCirclePic","isPost","state","setState","commentsAreOpen","setCommentsAreOpen","user_id","localStorage","getItem","comment_text","commentState","setCommentState","commentFetch","setCommentFetch","fetchComments","get","post","id","then","res","data","catch","err","handleChange","name","event","target","value","onSubmitHandler","e","preventDefault","console","log","incrementLike","patch","fetchPosts","decreaseLike","toggleComments","marginBottom","display","flexDirection","float","height","paddingRight","post_date","marginTop","textAlign","justifyContent","alignItems","post_text","length","like","border","map","comment","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport { Image, roundedCircle } from 'react-bootstrap';\nimport '../styles/postsIndividual.scss'\nimport { HTML5_FMT } from 'moment';\nimport ProfileImageShow from './ProfileImageShow';\nimport Comment from './Comment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Route, withRouter } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport EditIcon from '@material-ui/icons/Add';\nimport PostAddModal from './PostAddModal';\nimport { browserHistory } from 'react-router';\nimport { Form } from 'react-bootstrap';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { axiosWithAuth } from '../helpers/index';\nimport PostImageUpload from './PostImageUpload'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n    position: 'relative',\n    minHeight: 200,\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  margin: {\n    margin: theme.spacing(1),\n    backgroundColor: \"white\",\n    borderRadius: \"10%\",\n    boxShadow: \"0 16px 19px rgba(0,0,0,0.2), 0 15px 15px rgba(0,0,0,0.2)\",\n    '&:hover': {\n      boxShadow: \"0 2px 4px rgba(0,0,0,0.25), 0 2px 2px rgba(0,0,0,0.22)\"\n    },\n  },\n  buttons: {\n    margin: '5px 10px'\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n\n\n}));\n\nconst IndividualPost = (props) => {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    isCirclePic: true,\n    isPost: true,\n  });\n  const [commentsAreOpen, setCommentsAreOpen] = useState(false)\n  const [commentState, setCommentState] = useState({\n    user_id: localStorage.getItem(\"id\"),\n    comment_text: ''\n  });\n  const [commentFetch, setCommentFetch] = useState([])\n\n\n  useEffect(() => {\n    fetchComments()\n  }, [])\n  const fetchComments = () => {\n    axiosWithAuth()\n      .get(`/comment/${props.post.id}`)\n      .then(res => {\n        setCommentFetch(res.data)\n      })\n      .catch(err => {\n      });\n  };\n\n\n\n  const handleChange = name => event => {\n    setCommentState({\n      ...commentState,\n      [name]: event.target.value,\n    });\n  };\n\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    axiosWithAuth()\n      .post(`/comment/${props.post.id}`, commentState)\n      .then(res => {\n        console.log(\"comment success\")\n      })\n      .catch(err => {\n      });\n  };\n\n\n\n  function incrementLike() {\n    axiosWithAuth()\n      .patch(`/post/inc/${props.post.id}`)\n      .then(res => {\n        props.fetchPosts()\n      })\n      .catch(err => {\n      });\n  };\n\n\n  function decreaseLike() {\n    axiosWithAuth()\n      .patch(`/post/dec/${props.post.id}`)\n      .then(res => {\n        props.fetchPosts()\n      })\n      .catch(err => {\n      });\n  };\n\n\n  console.log(props.post,\"this is the post\")\n\n\n  const toggleComments = (e) => {\n\n    e.preventDefault();\n\n    if (commentsAreOpen === true) {\n      setCommentsAreOpen(false)\n    } else {\n      setCommentsAreOpen(true)\n    }\n\n  }\n  return (\n    <>\n      <div className=\"singlePost\" style={{ width: \"98%\", marginBottom: \"5px\"}}>\n\n        <div style={{ display: \"block\", backgroundColor: \"orange\" }}>\n          <section style={{ display: \"flex\", flexDirection: \"row\", float: \"left\" }}>\n\n            {props.post ?\n              <ProfileImageShow style={{ width: \"40px\", height: \"40px\", paddingRight: \"2px\" }} isPost={state.isPost} isPostPic={true} isCirclePic={state.isCirclePic} post={props.post} />\n              :\n              null\n              \n            }\n\n          </section>\n\n          <div style={{ float: \"right\" }}>\n            <p>{props.post.post_date}</p>\n          </div>\n\n\n\n        </div>\n\n       \n\n            <div style={{ display: \"block\", marginTop: \"45px\",marginBottom:\"45px\", textAlign:\"center\" }}>\n              <div style={{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"}}><PostImageUpload post={props.post}  />\n            <PostImageUpload post={props.post} isCarouselForPost={true} /></div>\n           \n            <p>{props.post.post_text}</p>\n            </div>\n        \n        <div style={{ display: \"block\", backgroundColor: \"orange\" }}>\n\n          <div style={{ float: \"left\", display: \"flex\", flexDirection: \"row\" }}>\n            <CommentIcon className={classes.margin} onClick={toggleComments} /> <p style={{ marginTop: \"8px\" }}>{commentFetch.length}</p>\n          </div>\n\n          <div style={{ float: \"right\", display: \"flex\", justifyContent: \"space-between\", alignItems: \"space-between\" }}>\n            <p style={{ marginTop: \"8px\" }}>{props.post.like}</p>\n            <ThumbUpIcon onClick={incrementLike} style={{ borderRadius: \"50%\" }} className={classes.margin} />\n            <ThumbDownIcon onClick={decreaseLike} style={{ borderRadius: \"50%\" }} className={classes.margin} />\n          </div>\n\n        </div>\n\n        <div style={{ border: \"2px !important\" }}>\n\n          {commentsAreOpen ?\n            <div style={{ width: \"100%\" }}>\n              <div style={{ width: \"100%\", display: \"flex\", flexDirection: \"row\", justifyContent: \"center\", alignItems: \"center\" }}>\n                <Form.Control\n                  onSubmit={onSubmitHandler}\n                  size=\"md\"\n                  type=\"text\"\n                  placeholder=\"Comment\"\n                  id=\"standard-basic\"\n                  name=\"comment_text\"\n                  value={commentState.comment_text}\n                  onChange={handleChange('comment_text')}\n                />\n                <Button\n                  style={{}}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.button}\n                  endIcon={<SendIcon />}\n                  onClick={onSubmitHandler}\n                >\n                  Enter\n            </Button>\n              </div>\n              <div style={{ display: \"block\" }}>\n\n                {\n                  commentFetch.map((comment) => {\n                    return (<>\n                      <Comment comment={comment} fetchComments={fetchComments} />\n                    </>\n                    )\n                  })}\n\n\n\n\n              </div>\n              <ExpandMoreIcon style={{ fontSize: \"50px\" }} />\n            </div>\n            : null}\n        </div>\n\n      </div>\n\n    </>\n  );\n};\n\n\n\n\nexport default IndividualPost;"]},"metadata":{},"sourceType":"module"}