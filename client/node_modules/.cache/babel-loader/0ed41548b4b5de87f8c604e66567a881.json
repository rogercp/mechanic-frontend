{"ast":null,"code":"import { axiosWithAuth } from '../../helpers/index';\nimport axios from 'axios';\nexport const FETCH_FIX_START = 'FETCH_FIX_START';\nexport const FETCH_FIX_SUCCESS = 'FETCH_FIX_SUCCESS';\nexport const FETCH_FIX_FAILURE = 'FETCH_FIX_FAILURE';\nexport const fetchFixes = id => dispatch => {\n  console.log(id);\n  dispatch({\n    type: FETCH_FIX_START\n  });\n  return axiosWithAuth().get(\"/car_fix/\".concat(id)).then(res => {\n    dispatch({\n      type: FETCH_FIX_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: FETCH_FIX_FAILURE,\n      payload: err.response\n    });\n  });\n};","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/store/actions/carMaintenenceActions.js"],"names":["axiosWithAuth","axios","FETCH_FIX_START","FETCH_FIX_SUCCESS","FETCH_FIX_FAILURE","fetchFixes","id","dispatch","console","log","type","get","then","res","payload","data","catch","err","response"],"mappings":"AAAA,SAASA,aAAT,QAA8B,qBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAGP,OAAO,MAAMC,UAAU,GAAIC,EAAD,IAAQC,QAAQ,IAAI;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AACFC,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAER;AAAR,GAAD,CAAR;AACA,SAAOF,aAAa,GACjBW,GADI,oBACYL,EADZ,GAEJM,IAFI,CAECC,GAAG,IAAI;AACTN,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEP,iBAAR;AAA2BW,MAAAA,OAAO,EAAED,GAAG,CAACE;AAAxC,KAAD,CAAR;AACH,GAJI,EAKJC,KALI,CAKEC,GAAG,IAAI;AACVV,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEN,iBAAR;AAA2BU,MAAAA,OAAO,EAAEG,GAAG,CAACC;AAAxC,KAAD,CAAR;AACH,GAPI,CAAP;AAQD,CAXM","sourcesContent":["import { axiosWithAuth } from '../../helpers/index';\nimport axios from 'axios';\n\n\nexport const FETCH_FIX_START = 'FETCH_FIX_START';\nexport const FETCH_FIX_SUCCESS = 'FETCH_FIX_SUCCESS';\nexport const FETCH_FIX_FAILURE = 'FETCH_FIX_FAILURE';\n\n\nexport const fetchFixes = (id) => dispatch => {\n    console.log(id)\n  dispatch({ type: FETCH_FIX_START });\n  return axiosWithAuth()\n    .get(`/car_fix/${id}`) \n    .then(res => {\n        dispatch({ type: FETCH_FIX_SUCCESS, payload: res.data });\n    })\n    .catch(err => {\n        dispatch({ type: FETCH_FIX_FAILURE, payload: err.response });\n    });\n};\n\n"]},"metadata":{},"sourceType":"module"}