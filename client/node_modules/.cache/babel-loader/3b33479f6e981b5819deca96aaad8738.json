{"ast":null,"code":"import _slicedToArray from \"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/ProfileImageShow.js\";\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport { Image } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { fetchProfileImage } from \"../store/actions/settingsActions\";\n\nfunction ProfileImageShow(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        thisImage = _useState2[0],\n        setThisimage = _useState2[1]; // const[image,setImage] = useState({})\n\n\n  const userId = localStorage.getItem('id');\n  useEffect(() => {\n    if (props.userImage) {\n      const fileRef = imagesRef.child(\"\".concat(userId, \"/\").concat(props.userImage.file_name));\n      props.fetchProfileImage(userId);\n      getImg(fileRef);\n    }\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Image, {\n    src: \"holder.js/171x180\",\n    rounded: true,\n    id: \"reg-image\",\n    style: {\n      height: \"200px\"\n    },\n    src: \"\".concat(thisImage),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = state => ({\n  userImage: state.setting.userImage\n});\n\nexport default connect(mapStateToProps, {\n  fetchProfileImage\n})(ProfileImageShow);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/ProfileImageShow.js"],"names":["React","useEffect","useState","imagesRef","Image","connect","fetchProfileImage","ProfileImageShow","props","thisImage","setThisimage","userId","localStorage","getItem","userImage","fileRef","child","file_name","getImg","height","mapStateToProps","state","setting"],"mappings":";;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,kCAAlC;;AAIA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA,oBAEGN,QAAQ,CAAC,EAAD,CAFX;AAAA;AAAA,QAEtBO,SAFsB;AAAA,QAEZC,YAFY,kBAG7B;;;AACA,QAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAf;AAGAZ,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAGO,KAAK,CAACM,SAAT,EAAmB;AACjB,YAAMC,OAAO,GAAGZ,SAAS,CAACa,KAAV,WAAmBL,MAAnB,cAA6BH,KAAK,CAACM,SAAN,CAAgBG,SAA7C,EAAhB;AACAT,MAAAA,KAAK,CAACF,iBAAN,CAAwBK,MAAxB;AACAO,MAAAA,MAAM,CAACH,OAAD,CAAN;AACH;AAEA,GARQ,EAQN,EARM,CAAT;AAaA,SACI,0CAEI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,mBAAX;AAA+B,IAAA,OAAO,MAAtC;AAAuC,IAAA,EAAE,EAAC,WAA1C;AAAuD,IAAA,KAAK,EAAE;AAACI,MAAAA,MAAM,EAAC;AAAR,KAA9D;AAAgF,IAAA,GAAG,YAAKV,SAAL,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAQH;;AAKD,MAAMW,eAAe,GAAGC,KAAK,KAAK;AAChCP,EAAAA,SAAS,EAAGO,KAAK,CAACC,OAAN,CAAcR;AADM,CAAL,CAA7B;;AAGA,eAAeT,OAAO,CACpBe,eADoB,EAEpB;AAACd,EAAAA;AAAD,CAFoB,CAAP,CAGbC,gBAHa,CAAf","sourcesContent":["\n\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport { Image } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { fetchProfileImage } from \"../store/actions/settingsActions\";\n\n\n\nfunction ProfileImageShow(props) {\n\n    const [thisImage,setThisimage]= useState('')\n    // const[image,setImage] = useState({})\n    const userId = localStorage.getItem('id');\n\n    \n    useEffect(() => {\n      \n      if(props.userImage){\n        const fileRef = imagesRef.child(`${userId}/${props.userImage.file_name}`);\n        props.fetchProfileImage(userId)\n        getImg(fileRef)\n    }\n      \n    }, []);\n\n\n\n\n    return(\n        <>\n            {/* {(metadata.contentType === 'application/pdf')? <div id=\"div-pdf\" src={`${thisImage}`}></div> :  <img id=\"reg-image\" height=\"200px\" src={`${thisImage}`}></img>} */}\n            <Image src=\"holder.js/171x180\" rounded id=\"reg-image\"  style={{height:\"200px\"}} src={`${thisImage}`}/>\n            {/* {props.image.file_name} */}\n\n        </>\n    )\n}\n\n\n\n\nconst mapStateToProps = state => ({\n  userImage : state.setting.userImage\n});\nexport default connect(\n  mapStateToProps,\n  {fetchProfileImage}\n)(ProfileImageShow);\n"]},"metadata":{},"sourceType":"module"}