{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\"; // import { changeOrderPosts } from \"../store/actions/postActions\";\n\nimport Select from '@material-ui/core/Select';\nimport { Dropdown, Button, ButtonGroup } from 'react-bootstrap';\n\nfunction OrderPosts(props) {\n  // const [orderBy,setOrderBy] = useState({\n  //   order:props.orderPosts\n  //  })\n  // useEffect(() => {\n  // props.changeOrderPosts(orderBy.order)\n  // props.fetchFilteredPosts(\"AllPosts\",`${orderBy.order}`)\n  // }, [orderBy.order]);\n  //  const handleChange = name => event => {\n  //   setOrderBy({\n  //     ...orderBy,\n  //     [name]: event.target.value,\n  //   });\n  // };\n  const changeOrder = term => {\n    props.fetchFilteredPosts(\"AllPosts\", `${term}`);\n  };\n\n  console.log(props.orderPosts, 'coming corm redux orderf');\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}\n\n;\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts,\n  orderPosts: state.post.order\n});\n\nexport default connect(mapStateToProps, {\n  toggleSearchToTrue,\n  fetchFilteredPosts\n})(OrderPosts);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/OrderPosts.js"],"names":["React","useState","useEffect","connect","fetchFilteredPosts","toggleSearchToTrue","Select","Dropdown","Button","ButtonGroup","OrderPosts","props","changeOrder","term","console","log","orderPosts","mapStateToProps","state","searchToggle","post","myposts","posts","filteredPosts","order"],"mappings":"AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,kBAAT,QAAmC,8BAAnC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,QAAT,EAAkBC,MAAlB,EAAyBC,WAAzB,QAA4C,iBAA5C;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAGzB;AAEA;AAEA;AAGA;AAGA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAEA,QAAMC,WAAW,GAAIC,IAAD,IAAS;AAE3BF,IAAAA,KAAK,CAACP,kBAAN,CAAyB,UAAzB,EAAqC,GAAES,IAAK,EAA5C;AAED,GAJD;;AASAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,UAAlB,EAA6B,0BAA7B;AAEA,sBAEE,yCAFF;AA8CD;;AAAA;;AAID,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCC,EAAAA,YAAY,EAAED,KAAK,CAACE,IAAN,CAAWD,YADO;AAEhCE,EAAAA,OAAO,EAAEH,KAAK,CAACE,IAAN,CAAWE,KAFY;AAGhCC,EAAAA,aAAa,EAAEL,KAAK,CAACE,IAAN,CAAWG,aAHM;AAIhCP,EAAAA,UAAU,EAAEE,KAAK,CAACE,IAAN,CAAWI;AAJS,CAAL,CAA7B;;AAMA,eAAerB,OAAO,CACpBc,eADoB,EAEpB;AAAEZ,EAAAA,kBAAF;AAAsBD,EAAAA;AAAtB,CAFoB,CAAP,CAGbM,UAHa,CAAf","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\";\n// import { changeOrderPosts } from \"../store/actions/postActions\";\nimport Select from '@material-ui/core/Select';\nimport { Dropdown,Button,ButtonGroup } from 'react-bootstrap';\n\n\nfunction OrderPosts(props) {\n\n  \n  // const [orderBy,setOrderBy] = useState({\n\n  //   order:props.orderPosts\n \n  //  })\n\n\n  // useEffect(() => {\n   \n   \n  // props.changeOrderPosts(orderBy.order)\n  // props.fetchFilteredPosts(\"AllPosts\",`${orderBy.order}`)\n  // }, [orderBy.order]);\n\n\n\n  //  const handleChange = name => event => {\n  //   setOrderBy({\n  //     ...orderBy,\n  //     [name]: event.target.value,\n  //   });\n  \n  // };\n\n  const changeOrder = (term) =>{\n\n    props.fetchFilteredPosts(\"AllPosts\",`${term}`)\n\n  }\n\n  \n\n\n  console.log(props.orderPosts,'coming corm redux orderf')\n\n  return (\n\n    <>\n    {/* <Select\n            native\n            name=\"order\"\n            value={orderBy.order}\n            onChange={handleChange('order')}\n            inputProps={{\n              name: 'type',\n              id: 'outlined-type-native-simple',\n            }}\n          >\n             <option value=\"\" />\n            <option value={\"date\"}>date</option>\n            <option value={\"likes\"}>likes</option>\n          \n          </Select> */}\n          {/* <Dropdown>\n  <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\n   order\n  </Dropdown.Toggle>\n\n  <Dropdown.Menu>\n    <Dropdown.Item onClick={changeOrder('date')}>date</Dropdown.Item>\n    <Dropdown.Item onClick={changeOrder('likes')}>likes</Dropdown.Item>\n  </Dropdown.Menu>\n</Dropdown> */}\n\n\n{/* <Dropdown as={ButtonGroup}>\n  <Button variant=\"success\">Split Button</Button>\n\n  <Dropdown.Toggle split variant=\"success\" id=\"dropdown-split-basic\" />\n\n  <Dropdown.Menu>\n    <Dropdown.Item onClick={changeOrder('date')}>Action</Dropdown.Item>\n    <Dropdown.Item onClick={changeOrder('likes')}>Another action</Dropdown.Item>\n  </Dropdown.Menu>\n</Dropdown> */}\n    </>\n\n  );\n\n\n\n};\n\n\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts,\n  orderPosts: state.post.order\n});\nexport default connect(\n  mapStateToProps,\n  { toggleSearchToTrue, fetchFilteredPosts }\n)(OrderPosts);\n\n"]},"metadata":{},"sourceType":"module"}