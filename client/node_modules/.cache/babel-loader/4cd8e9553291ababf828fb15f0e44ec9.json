{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/views/AuthCallback.js\";\nimport React from \"react\";\nimport firebase from \"firebase\";\nimport axios from \"axios\";\n\nfunction AuthCallback(props) {\n  firebase.auth().onAuthStateChanged(async user => {\n    // User is signed in.\n    if (user) {\n      let token = await user.getIdToken();\n      localStorage.setItem(\"token\", token);\n      axios.post(\"\".concat(process.env.REACT_APP_API_URL, \"/users/auth\"), {\n        user: user,\n        token: token\n      }).then(res => {\n        const initialusername = user.displayName.substr(0, user.displayName.indexOf(' '));\n\n        const axiosWithAuth = () => {\n          const token = localStorage.getItem('token');\n          return axios.create({\n            headers: {\n              Authorization: token\n            },\n            baseURL: \"\".concat(process.env.REACT_APP_API_URL)\n          });\n        };\n\n        axiosWithAuth().post(\"users/updateinitially/\".concat(res.data.id), {\n          user_name: initialusername\n        }).then(res => {\n          localStorage.setItem(\"username\");\n        }).catch(err => {\n          console.log(err);\n        });\n      }).then(res => {\n        localStorage.setItem(\"id\", res.data.id);\n        window.location = \"/home\";\n      }).catch(err => {\n        // console.error(err);\n        window.location = \"/login\";\n      });\n    } else {\n      // User is signed out.\n      window.location = \"/login\";\n    }\n  });\n  return React.createElement(\"div\", {\n    className: \"login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  });\n}\n\nexport default AuthCallback;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/views/AuthCallback.js"],"names":["React","firebase","axios","AuthCallback","props","auth","onAuthStateChanged","user","token","getIdToken","localStorage","setItem","post","process","env","REACT_APP_API_URL","then","res","initialusername","displayName","substr","indexOf","axiosWithAuth","getItem","create","headers","Authorization","baseURL","data","id","user_name","catch","err","console","log","window","location"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzBH,EAAAA,QAAQ,CAACI,IAAT,GAAgBC,kBAAhB,CAAmC,MAAMC,IAAN,IAAc;AAC7C;AACA,QAAIA,IAAJ,EAAU;AAGN,UAAIC,KAAK,GAAG,MAAMD,IAAI,CAACE,UAAL,EAAlB;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AAGAN,MAAAA,KAAK,CACAU,IADL,WACaC,OAAO,CAACC,GAAR,CAAYC,iBADzB,kBACyD;AACjDR,QAAAA,IAAI,EAAEA,IAD2C;AAEjDC,QAAAA,KAAK,EAAEA;AAF0C,OADzD,EAIOQ,IAJP,CAIYC,GAAG,IAAG;AAEd,cAAMC,eAAe,GAAGX,IAAI,CAACY,WAAL,CAAiBC,MAAjB,CAAwB,CAAxB,EAA0Bb,IAAI,CAACY,WAAL,CAAiBE,OAAjB,CAAyB,GAAzB,CAA1B,CAAxB;;AAEI,cAAMC,aAAa,GAAG,MAAM;AACxB,gBAAMd,KAAK,GAAGE,YAAY,CAACa,OAAb,CAAqB,OAArB,CAAd;AAEA,iBAAOrB,KAAK,CAACsB,MAAN,CAAa;AAClBC,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,EAAElB;AADR,aADS;AAIlBmB,YAAAA,OAAO,YAAKd,OAAO,CAACC,GAAR,CAAYC,iBAAjB;AAJW,WAAb,CAAP;AAMD,SATH;;AAWEO,QAAAA,aAAa,GACZV,IADD,iCAC+BK,GAAG,CAACW,IAAJ,CAASC,EADxC,GAC8C;AAACC,UAAAA,SAAS,EAACZ;AAAX,SAD9C,EAECF,IAFD,CAEMC,GAAG,IAAI;AACXP,UAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB;AACD,SAJD,EAKCoB,KALD,CAKOC,GAAG,IAAI;AACVC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,SAPD;AASL,OA5BL,EA+BKhB,IA/BL,CA+BUC,GAAG,IAAI;AAETP,QAAAA,YAAY,CAACC,OAAb,CAAqB,IAArB,EAA2BM,GAAG,CAACW,IAAJ,CAASC,EAApC;AACAM,QAAAA,MAAM,CAACC,QAAP,GAAkB,OAAlB;AACH,OAnCL,EAoCKL,KApCL,CAoCWC,GAAG,IAAI;AACV;AACAG,QAAAA,MAAM,CAACC,QAAP,GAAkB,QAAlB;AACH,OAvCL;AAwCH,KA/CD,MA+CO;AACH;AACAD,MAAAA,MAAM,CAACC,QAAP,GAAkB,QAAlB;AACH;AACJ,GArDD;AAuDA,SAAO;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH;;AAGD,eAAejC,YAAf","sourcesContent":["\nimport React from \"react\";\nimport firebase from \"firebase\";\nimport axios from \"axios\";\n\n\n\nfunction AuthCallback(props) {\n    firebase.auth().onAuthStateChanged(async user => {\n        // User is signed in.\n        if (user) {\n           \n\n            let token = await user.getIdToken();\n            localStorage.setItem(\"token\", token);\n\n\n            axios\n                .post(`${process.env.REACT_APP_API_URL}/users/auth`, {\n                    user: user,\n                    token: token\n                }).then(res =>{\n\n                const initialusername = user.displayName.substr(0,user.displayName.indexOf(' '))\n\n                    const axiosWithAuth = () => {\n                        const token = localStorage.getItem('token');\n                      \n                        return axios.create({\n                          headers: {\n                            Authorization: token\n                          },\n                          baseURL: `${process.env.REACT_APP_API_URL}`\n                        });\n                      }\n\n                      axiosWithAuth()\n                      .post(`users/updateinitially/${res.data.id}`, {user_name:initialusername})\n                      .then(res => {\n                        localStorage.setItem(\"username\",)\n                      })\n                      .catch(err => {\n                          console.log(err)\n                      });\n\n                }\n\n                )\n                .then(res => {\n                   \n                    localStorage.setItem(\"id\", res.data.id);\n                    window.location = \"/home\";\n                })\n                .catch(err => {\n                    // console.error(err);\n                    window.location = \"/login\";\n                });\n        } else {\n            // User is signed out.\n            window.location = \"/login\";\n        }\n    });\n\n    return <div className=\"login\" />;\n}\n\n\nexport default AuthCallback;\n"]},"metadata":{},"sourceType":"module"}