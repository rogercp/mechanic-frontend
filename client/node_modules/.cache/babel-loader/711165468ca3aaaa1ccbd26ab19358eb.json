{"ast":null,"code":"import _slicedToArray from \"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/ImageUploadModal.js\";\nimport React, { useState } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CarMaintenceForm from './CarMaintenenceForm';\nimport CarMaintenceShow from './CarMaintenenceShow';\nimport Switch from '@material-ui/core/Switch';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { green } from '@material-ui/core/colors';\nimport CarFixAddModal from './CarFixAddModal';\nimport { axiosWithAuth } from '../helpers/index';\nimport CarCard from './CarCard';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport '../styles/fullscreenmodal.scss';\nconst useStyles = makeStyles(theme => ({\n  modalWidth: {\n    margin: theme.spacing(1),\n    Width: 200\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2),\n    outline: 'none',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    Width: 200\n  }\n}));\n\nfunction ImageUploadModal(props) {\n  const classes = useStyles();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        errorOpen = _useState4[0],\n        setErrorOpen = _useState4[1];\n\n  function handleOpen() {\n    setOpen(true);\n  }\n\n  function handleErrorOpen() {\n    setErrorOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleErrorClose() {\n    setErrorOpen(false);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Dialog, {\n    open: props.open,\n    onClose: props.handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    required: true,\n    id: \"uploader\",\n    type: \"file\",\n    accept: \"image/*,.pdf,.doc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    name: \"car_type\",\n    color: \"default\",\n    className: classes.button,\n    startIcon: React.createElement(CloudUploadIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }),\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Upload\"))));\n}\n\nexport default ImageUploadModal;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/ImageUploadModal.js"],"names":["React","useState","Dialog","IconButton","CloseIcon","CarMaintenceForm","CarMaintenceShow","Switch","makeStyles","Fab","AddIcon","green","CarFixAddModal","axiosWithAuth","CarCard","Grid","Tooltip","FormControl","Button","CloudUploadIcon","useStyles","theme","modalWidth","margin","spacing","Width","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","outline","display","flexDirection","justifyContent","alignItems","ImageUploadModal","props","classes","open","setOpen","errorOpen","setErrorOpen","handleOpen","handleErrorOpen","handleClose","handleErrorClose","button"],"mappings":"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","sourcesContent":["\nimport React, { useState } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CarMaintenceForm from './CarMaintenenceForm';\nimport CarMaintenceShow from './CarMaintenenceShow';\nimport Switch from '@material-ui/core/Switch';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { green } from '@material-ui/core/colors';\nimport CarFixAddModal from './CarFixAddModal';\nimport { axiosWithAuth } from '../helpers/index';\nimport CarCard from './CarCard'\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\n\n\n\nimport '../styles/fullscreenmodal.scss'\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n    modalWidth: {\n        margin: theme.spacing(1),\n        Width: 200,\n      },\n      paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '1px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2),\n        outline: 'none',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        Width: 200,\n    },\n\n}));\n\n\n\n\nfunction ImageUploadModal(props) {\n  const classes = useStyles();\n\n  \n  const [open, setOpen] = useState(false);\n  const [errorOpen, setErrorOpen] = useState(false);\n\n\n  function handleOpen() {\n    setOpen(true);\n  }\n  function handleErrorOpen() {\n    setErrorOpen(true);\n  }\n  function handleClose() {\n    setOpen(false);\n  }\n  function handleErrorClose() {\n    setErrorOpen(false);\n  }\n\n\n\n\n  return (\n    <>\n      <Dialog  open={props.open} onClose={props.handleClose}  >\n      <FormControl className={classes.paper}  >\n      <input required id=\"uploader\" type=\"file\" accept=\"image/*,.pdf,.doc\" ></input>\n                        <Button\n                            variant=\"contained\"\n                            name=\"car_type\"\n                            color=\"default\"\n                            className={classes.button}\n                            startIcon={<CloudUploadIcon />}\n                            type=\"submit\"\n                        >\n                            Upload\n                </Button>\n\n\n        </FormControl>\n\n      </Dialog>\n\n    </>\n  )\n}\n\n\nexport default ImageUploadModal;"]},"metadata":{},"sourceType":"module"}