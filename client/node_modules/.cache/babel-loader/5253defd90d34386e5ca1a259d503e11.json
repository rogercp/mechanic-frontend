{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/CarImgUpload.js\";\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport axiosWithAuth from '../helpers/axiosWithAuth';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CarImgShow from './CarImgShow';\nimport CarImageFixShow from './CarImageFixShow';\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction CarImgUpload(props) {\n  const classes = useStyles();\n  const [carImages, setCarImages] = useState([]);\n  const [carFixImages, setCarFixImages] = useState([]);\n  const [file, setFile] = useState({});\n  useEffect(() => {\n    if (props.car) {\n      fetchCarImages();\n    }\n  }, []);\n\n  async function fetchCarImages() {\n    let images = await axiosWithAuth().get(`/cars/${props.car.id}/images`);\n    setCarImages(images.data);\n    return images;\n  }\n\n  function handleInputChanges(e) {\n    e.preventDefault();\n    const file = e.target.files[0];\n\n    if (!file) {\n      return;\n    }\n\n    if (file && file.size > 1e8) {\n      alert(\"File is too large. Maximum limit is 100MB.\");\n      e.target.value = '';\n    } else {\n      setFile(file);\n    }\n  }\n\n  function handleSubmitUploader(e) {\n    e.preventDefault(); // Create file ref (Example: /documents/:car_id/:file_name)\n\n    const fileRef = imagesRef.child(`${props.car.id}/${file.name}`); // Upload file\n\n    fileRef.put(file).then(snapshot => {\n      // console.log('Upload success!', snapshot.constructor, snapshot);\n      axiosWithAuth().post(`/cars/${props.car.id}/images`, {\n        file_name: file.name\n      }).then(res => {\n        fetchCarImages();\n        window.location.reload();\n      }).catch(error => {\n        console.error(error);\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  if (carImages.length > 0) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, carImages.map((image, index) => {\n      return /*#__PURE__*/React.createElement(CarImgShow, {\n        key: index,\n        car: props.car,\n        image: image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 28\n        }\n      });\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"200px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, !props.car.file_name && !props.isForm ? /*#__PURE__*/React.createElement(DriveEtaIcon, {\n      style: {\n        fontSize: \"200px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 20\n      }\n    }) : null, props.isForm ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmitUploader,\n      style: {\n        display: 'flex',\n        flexDirection: \"column\",\n        maxWidth: \"200px\",\n        justifyContent: \"Center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      required: true,\n      id: \"uploader\",\n      type: \"file\",\n      accept: \"image/*,.pdf,.doc\",\n      onChange: handleInputChanges,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      name: \"car_type\",\n      color: \"default\",\n      className: classes.button,\n      startIcon: /*#__PURE__*/React.createElement(CloudUploadIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 40\n        }\n      }),\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, \"Upload\"))) : null));\n  }\n}\n\nexport default CarImgUpload;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/CarImgUpload.js"],"names":["React","useEffect","useState","imagesRef","axiosWithAuth","Button","makeStyles","CloudUploadIcon","CarImgShow","CarImageFixShow","DriveEtaIcon","useStyles","theme","button","margin","spacing","CarImgUpload","props","classes","carImages","setCarImages","carFixImages","setCarFixImages","file","setFile","car","fetchCarImages","images","get","id","data","handleInputChanges","e","preventDefault","target","files","size","alert","value","handleSubmitUploader","fileRef","child","name","put","then","snapshot","post","file_name","res","window","location","reload","catch","error","console","err","length","map","image","index","height","isForm","fontSize","display","flexDirection","maxWidth","justifyContent"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport axiosWithAuth from '../helpers/axiosWithAuth';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CarImgShow from './CarImgShow';\nimport CarImageFixShow from './CarImageFixShow';\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        margin: theme.spacing(1),\n    },\n}));\n\n\nfunction CarImgUpload(props) {\n\n    const classes = useStyles();\n    const [carImages, setCarImages] = useState([]);\n    const [carFixImages, setCarFixImages] = useState([]);\n    const [file, setFile] = useState({});\n\n    useEffect(() => {\n        if (props.car) {\n            fetchCarImages();\n        }\n\n    }, []);\n\n\n    async function fetchCarImages() {\n        let images = await axiosWithAuth().get(`/cars/${props.car.id}/images`)\n        setCarImages(images.data);\n        return images;\n    }\n\n\n\n    function handleInputChanges(e) {\n        e.preventDefault();\n        const file = e.target.files[0]\n        if (!file) {\n            return;\n        }\n        if (file && file.size > 1e8) {\n            alert(\"File is too large. Maximum limit is 100MB.\")\n            e.target.value = ''\n        } else {\n            setFile(file);\n        }\n    }\n\n    function handleSubmitUploader(e) {\n        e.preventDefault()\n        // Create file ref (Example: /documents/:car_id/:file_name)\n        const fileRef = imagesRef.child(`${props.car.id}/${file.name}`)\n        // Upload file\n        fileRef.put(file).then((snapshot) => {\n            // console.log('Upload success!', snapshot.constructor, snapshot);\n            axiosWithAuth().post(`/cars/${props.car.id}/images`, { file_name: file.name })\n                .then(res => {\n                    fetchCarImages();\n                    window.location.reload();\n                })\n                .catch(error => {\n                    console.error(error);\n                })\n        }).catch(err => {\n            console.error(err)\n        });\n    }\n\n\n\n\n    if (carImages.length > 0) {\n        return (\n            <>\n                {carImages.map((image, index) => {\n                    return <CarImgShow key={index} car={props.car} image={image} />\n                })}\n            </>\n        )\n    }\n\n    else {\n        return (\n            <>\n                <div style={{ height: \"200px\" }}>\n            {(!props.car.file_name && !props.isForm? \n                   <DriveEtaIcon style={{ fontSize: \"200px\" }} />\n            :\n            null\n            )}\n                    \n             {props.isForm ? <div>\n                    <form onSubmit={(handleSubmitUploader)} style={{ display: 'flex', flexDirection: \"column\",maxWidth:\"200px\",justifyContent:\"Center\"}}>\n                        <input required id=\"uploader\" type=\"file\" accept=\"image/*,.pdf,.doc\" onChange={handleInputChanges}></input>\n                        <Button\n                            variant=\"contained\"\n                            name=\"car_type\"\n                            color=\"default\"\n                            className={classes.button}\n                            startIcon={<CloudUploadIcon />}\n                            type=\"submit\"\n                        >\n                            Upload\n            </Button>\n                    </form>\n                </div> :null}\n\n                \n      </div> \n\n\n\n\n\n            </>\n        )\n    }\n\n\n\n}\n\n\n\nexport default CarImgUpload;\n"]},"metadata":{},"sourceType":"module"}