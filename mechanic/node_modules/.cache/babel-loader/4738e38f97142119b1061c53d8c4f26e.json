{"ast":null,"code":"import _slicedToArray from \"/Users/roger/Projects/mechanic-front/mechanic-frontend/mechanic/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roger/Projects/mechanic-front/mechanic-frontend/mechanic/src/components/CarShow.js\";\n\n/**\n * Dependencies\n */\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport UpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { green, red } from '@material-ui/core/colors';\nimport Box from '@material-ui/core/Box';\nimport CarAddModal from './CarAddModal';\n/**\n *  Import styles\n */\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n    position: 'relative',\n    minHeight: 200\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  },\n  fabGreen: {\n    color: theme.palette.common.white,\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[600]\n    }\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n/**\n * Define component\n */\n\nfunction CarShow(props) {\n  const classes = useStyles();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        errorOpen = _useState4[0],\n        setErrorOpen = _useState4[1];\n  /**\n   * Dialog Methods\n   */\n\n\n  function handleOpen() {\n    setOpen(true);\n  }\n\n  function handleErrorOpen() {\n    setErrorOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleErrorClose() {\n    setErrorOpen(false);\n  }\n\n  const onOpen = async e => {\n    e.preventDefault();\n    handleOpen();\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"My Cars\"), React.createElement(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    className: classes.margin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    onClick: onOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(CarAddModal, {\n    open: open,\n    onClose: handleClose,\n    titleText: \"Car Form\",\n    bodyText: \"\",\n    redirect: \"/mycars\",\n    redirectText: \"cars\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(CarAddModal, {\n    open: errorOpen,\n    onClose: handleErrorClose,\n    titleText: \"Error creating car\",\n    bodyText: \"Please try again\",\n    redirect: \"\",\n    redirectText: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }));\n}\n\n;\n/**\n * Export component\n */\n\nexport default CarShow;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-front/mechanic-frontend/mechanic/src/components/CarShow.js"],"names":["React","useState","PropTypes","clsx","makeStyles","useTheme","AppBar","Tabs","Tab","Typography","Zoom","Fab","AddIcon","EditIcon","UpIcon","green","red","Box","CarAddModal","useStyles","theme","root","backgroundColor","palette","background","paper","width","position","minHeight","fab","bottom","spacing","right","fabGreen","color","common","white","margin","CarShow","props","classes","open","setOpen","errorOpen","setErrorOpen","handleOpen","handleErrorOpen","handleClose","handleErrorClose","onOpen","e","preventDefault"],"mappings":"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","sourcesContent":["/**\n * Dependencies\n */\n\nimport React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport UpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { green, red } from '@material-ui/core/colors';\nimport Box from '@material-ui/core/Box';\nimport CarAddModal from './CarAddModal';\n/**\n *  Import styles\n */\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n    position: 'relative',\n    minHeight: 200,\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  fabGreen: {\n    color: theme.palette.common.white,\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[600],\n    },\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n/**\n * Define component\n */\n\n\n\n\nfunction CarShow(props) {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n  const [errorOpen, setErrorOpen] = useState(false);\n  /**\n   * Dialog Methods\n   */\n\n  function handleOpen() {\n      setOpen(true);\n  }\n  function handleErrorOpen() {\n      setErrorOpen(true);\n  }\n  function handleClose() {\n      setOpen(false);\n  }\n  function handleErrorClose() {\n      setErrorOpen(false);\n  }\n  \n\n  const onOpen = async e => {\n    e.preventDefault();\n    handleOpen();\n       \n};\n\n\n\n\n    return (\n      <>\n        \n        <h1>My Cars</h1>\n\n        <Fab color=\"primary\" aria-label=\"add\" className={classes.margin}>\n          <AddIcon\n           onClick={onOpen}\n           />\n        </Fab>\n\n        <CarAddModal\n          open={open}\n          onClose={handleClose}\n          titleText={\"Car Form\"}\n          bodyText={\"\"}\n          redirect={\"/mycars\"}\n          redirectText={\"cars\"}\n          />\n\n        <CarAddModal\n          open={errorOpen}\n          onClose={handleErrorClose}\n          titleText={\"Error creating car\"}\n          bodyText={\"Please try again\"}\n          redirect={\"\"}\n          redirectText={\"\"}\n        />\n\n\n      </>\n    );\n};\n\n/**\n * Export component\n */\n\nexport default CarShow;\n"]},"metadata":{},"sourceType":"module"}