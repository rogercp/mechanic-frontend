{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/ProfileImageShow.js\";\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport { Image } from 'react-bootstrap';\nimport { fetchProfileImage } from \"../store/actions/settingsActions\";\nimport { connect } from 'react-redux';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ImageIcon from '@material-ui/icons/Image';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nfunction ProfileImageShow(props) {\n  const classes = useStyles();\n  const [thisImage, setThisimage] = useState(null);\n  const userId = localStorage.getItem('id');\n  var fileRef = null;\n\n  if (props.isPost === true) {\n    fileRef = imagesRef.child(`${props.post.user_id}/${props.post.file_name_profile}`);\n  } else {\n    fileRef = imagesRef.child(`${userId}/${props.image.file_name_profile}`);\n  }\n\n  useEffect(() => {\n    getImg();\n  }, [fileRef]);\n\n  function getImg() {\n    fileRef.getMetadata().then(metadata => {\n      fileRef.getDownloadURL().then(url => {\n        setThisimage(null);\n        setThisimage(url); // let img = document.getElementById('document-image');\n        // if (metadata.contentType === 'application/pdf') {\n        //     img.src = '';\n        //     // TODO handle PDFs\n        //   } else {\n        //     img.src = url;\n        //   }\n      }).catch(err => {\n        console.error(err);\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  } // function deleteImage() {\n  //   fileRef.delete().then(() => {\n  //     axiosWithAuth().delete(`/users/imagee/${props.image.file_name_profile}`)\n  //       .then(res => {\n  //         props.fetchProfileImage(userId)\n  //       })\n  //       .catch(error => {\n  //         console.error(error);\n  //       })\n  //   })\n  //     .catch(err => {\n  //       console.error(err);\n  //     })\n  // }\n\n\n  const username = localStorage.getItem(\"username\");\n\n  if (props.isCirclePic && props.isPostPic) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, thisImage ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      alt: \"Remy Sharp\",\n      src: `${thisImage}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 18\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: \"8px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginLeft: \"5px\",\n        color: \"#0275d8\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 47\n      }\n    }, props.isPost ? props.post.user_name : username))) : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ImageIcon, {\n      style: {\n        fontSize: \"50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }), props.post.user_name));\n  }\n\n  if (props.isCirclePic) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, thisImage ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      alt: \"Remy Sharp\",\n      src: `${thisImage}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 18\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: \"8px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginLeft: \"5px\",\n        color: \"#0275d8\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 47\n      }\n    }, props.isPost ? props.post.user_name : username))) : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ImageIcon, {\n      style: {\n        fontSize: \"50px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }), username));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, thisImage ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: \"holder.js/171x180\",\n      rounded: true,\n      id: \"reg-image\",\n      style: {\n        maxWidth: \"100%\"\n      },\n      src: `${thisImage}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ImageIcon, {\n      style: {\n        fontSize: \"200px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    })));\n  }\n}\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps, {\n  fetchProfileImage\n})(ProfileImageShow);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/ProfileImageShow.js"],"names":["React","useEffect","useState","imagesRef","Image","fetchProfileImage","connect","Avatar","makeStyles","ImageIcon","useStyles","theme","root","display","margin","spacing","ProfileImageShow","props","classes","thisImage","setThisimage","userId","localStorage","getItem","fileRef","isPost","child","post","user_id","file_name_profile","image","getImg","getMetadata","then","metadata","getDownloadURL","url","catch","err","console","error","username","isCirclePic","isPostPic","alignItems","justifyContent","marginTop","marginLeft","color","user_name","fontSize","maxWidth","mapStateToProps","state"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,iBAAT,QAAkC,kCAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAIA,MAAMC,SAAS,GAAGF,UAAU,CAACG,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJ,aAAS;AACPC,MAAAA,MAAM,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADD;AAFL;AAD+B,CAAL,CAAN,CAA5B;;AASA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAE/B,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AAEA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAMmB,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAf;AAGA,MAAIC,OAAO,GAAG,IAAd;;AAEA,MAAIP,KAAK,CAACQ,MAAN,KAAiB,IAArB,EAA2B;AACzBD,IAAAA,OAAO,GAAGrB,SAAS,CAACuB,KAAV,CAAiB,GAAET,KAAK,CAACU,IAAN,CAAWC,OAAQ,IAAGX,KAAK,CAACU,IAAN,CAAWE,iBAAkB,EAAtE,CAAV;AACD,GAFD,MAEO;AACLL,IAAAA,OAAO,GAAGrB,SAAS,CAACuB,KAAV,CAAiB,GAAEL,MAAO,IAAGJ,KAAK,CAACa,KAAN,CAAYD,iBAAkB,EAA3D,CAAV;AACD;;AAGD5B,EAAAA,SAAS,CAAC,MAAM;AACd8B,IAAAA,MAAM;AACP,GAFQ,EAEN,CAACP,OAAD,CAFM,CAAT;;AAIA,WAASO,MAAT,GAAkB;AAChBP,IAAAA,OAAO,CAACQ,WAAR,GAAsBC,IAAtB,CAA4BC,QAAD,IAAc;AACvCV,MAAAA,OAAO,CAACW,cAAR,GAAyBF,IAAzB,CAA8BG,GAAG,IAAI;AAEnChB,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAA,QAAAA,YAAY,CAACgB,GAAD,CAAZ,CAHmC,CAKnC;AACA;AACA;AACA;AACA;AACA;AACA;AACD,OAZD,EAaGC,KAbH,CAaSC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,OAfH;AAgBD,KAjBD,EAiBGD,KAjBH,CAiBUC,GAAD,IAAS;AAChBC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,KAnBD;AAoBD,GA3C8B,CA8C/B;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMG,QAAQ,GAAGnB,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjB;;AAEA,MAAIN,KAAK,CAACyB,WAAN,IAAqBzB,KAAK,CAAC0B,SAA/B,EAA0C;AACxC,wBAEE,0CACGxB,SAAS,gBACR;AAAK,MAAA,KAAK,EAAE;AAAEN,QAAAA,OAAO,EAAE,MAAX;AAAmB+B,QAAAA,UAAU,EAAE,QAA/B;AAAyCC,QAAAA,cAAc,EAAE;AAAzD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAC,YAAZ;AAAyB,MAAA,GAAG,EAAG,GAAE1B,SAAU,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CADF,eAEE;AAAK,MAAA,KAAK,EAAE;AAAE2B,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkC;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,KAAd;AAAqBC,QAAAA,KAAK,EAAC;AAA3B,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkD/B,KAAK,CAACQ,MAAN,GAAeR,KAAK,CAACU,IAAN,CAAWsB,SAA1B,GAAsCR,QAAxF,CAAlC,CAFF,CADQ,gBAQR;AAAK,MAAA,KAAK,EAAE;AAAE5B,QAAAA,OAAO,EAAE,MAAX;AAAmB+B,QAAAA,UAAU,EAAE,QAA/B;AAAyCC,QAAAA,cAAc,EAAE;AAAzD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAEK,QAAAA,QAAQ,EAAE;AAAZ,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGjC,KAAK,CAACU,IAAN,CAAWsB,SAFd,CATJ,CAFF;AAqBD;;AAAA,MAAGhC,KAAK,CAACyB,WAAT,EAAsB;AAErB,wBAEE,0CACGvB,SAAS,gBACR;AAAK,MAAA,KAAK,EAAE;AAAEN,QAAAA,OAAO,EAAE,MAAX;AAAmB+B,QAAAA,UAAU,EAAE,QAA/B;AAAyCC,QAAAA,cAAc,EAAE;AAAzD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAC,YAAZ;AAAyB,MAAA,GAAG,EAAG,GAAE1B,SAAU,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CADF,eAEE;AAAK,MAAA,KAAK,EAAE;AAAE2B,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkC;AAAG,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,KAAd;AAAqBC,QAAAA,KAAK,EAAC;AAA3B,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmD/B,KAAK,CAACQ,MAAN,GAAeR,KAAK,CAACU,IAAN,CAAWsB,SAA1B,GAAsCR,QAAzF,CAAlC,CAFF,CADQ,gBAQR;AAAK,MAAA,KAAK,EAAE;AAAE5B,QAAAA,OAAO,EAAE,MAAX;AAAmB+B,QAAAA,UAAU,EAAE,QAA/B;AAAyCC,QAAAA,cAAc,EAAE;AAAzD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAEK,QAAAA,QAAQ,EAAE;AAAZ,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGT,QAFH,CATJ,CAFF;AAsBD,GAxBA,MAwBK;AACJ,wBACE,0CAGGtB,SAAS,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,mBAAX;AAA+B,MAAA,OAAO,MAAtC;AAAuC,MAAA,EAAE,EAAC,WAA1C;AAAsD,MAAA,KAAK,EAAE;AAAEgC,QAAAA,QAAQ,EAAE;AAAZ,OAA7D;AAAmF,MAAA,GAAG,EAAG,GAAEhC,SAAU,EAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADQ,gBASN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAE+B,QAAAA,QAAQ,EAAE;AAAZ,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAZN,CADF;AAmBD;AAGF;;AAKD,MAAME,eAAe,GAAGC,KAAK,KAAK,EAAL,CAA7B;;AAEA,eAAe/C,OAAO,CACpB8C,eADoB,EAEpB;AAAE/C,EAAAA;AAAF,CAFoB,CAAP,CAGbW,gBAHa,CAAf","sourcesContent":["\n\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport { Image } from 'react-bootstrap';\nimport { fetchProfileImage } from \"../store/actions/settingsActions\";\nimport { connect } from 'react-redux';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ImageIcon from '@material-ui/icons/Image';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nfunction ProfileImageShow(props) {\n\n  const classes = useStyles();\n\n  const [thisImage, setThisimage] = useState(null)\n\n  const userId = localStorage.getItem('id');\n\n\n  var fileRef = null\n\n  if (props.isPost === true) {\n    fileRef = imagesRef.child(`${props.post.user_id}/${props.post.file_name_profile}`);\n  } else {\n    fileRef = imagesRef.child(`${userId}/${props.image.file_name_profile}`);\n  }\n\n\n  useEffect(() => {\n    getImg()\n  }, [fileRef]);\n\n  function getImg() {\n    fileRef.getMetadata().then((metadata) => {\n      fileRef.getDownloadURL().then(url => {\n\n        setThisimage(null)\n        setThisimage(url)\n\n        // let img = document.getElementById('document-image');\n        // if (metadata.contentType === 'application/pdf') {\n        //     img.src = '';\n        //     // TODO handle PDFs\n        //   } else {\n        //     img.src = url;\n        //   }\n      })\n        .catch(err => {\n          console.error(err);\n        })\n    }).catch((err) => {\n      console.error(err);\n    });\n  }\n\n\n  // function deleteImage() {\n\n  //   fileRef.delete().then(() => {\n\n  //     axiosWithAuth().delete(`/users/imagee/${props.image.file_name_profile}`)\n  //       .then(res => {\n  //         props.fetchProfileImage(userId)\n  //       })\n  //       .catch(error => {\n  //         console.error(error);\n  //       })\n  //   })\n  //     .catch(err => {\n  //       console.error(err);\n  //     })\n  // }\n\n  const username = localStorage.getItem(\"username\");\n\n  if (props.isCirclePic && props.isPostPic) {\n    return (\n\n      <>\n        {thisImage ?\n          <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n            <div><Avatar alt=\"Remy Sharp\" src={`${thisImage}`} /></div>\n            <div style={{ marginTop: \"8px\" }}><p style={{ marginLeft: \"5px\" ,color:\"#0275d8\"}}>{props.isPost ? props.post.user_name : username}</p>\n            </div>\n          </div>\n\n          :\n          <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n            <ImageIcon style={{ fontSize: \"50px\" }} />\n            {props.post.user_name} \n          </div>}\n      </>\n\n\n\n\n    )\n  }if(props.isCirclePic) {\n    \n    return (\n\n      <>\n        {thisImage ?\n          <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n            <div><Avatar alt=\"Remy Sharp\" src={`${thisImage}`} /></div>\n            <div style={{ marginTop: \"8px\" }}><p style={{ marginLeft: \"5px\" ,color:\"#0275d8\" }}>{props.isPost ? props.post.user_name : username}</p>\n            </div>\n          </div>\n\n          :\n          <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n            <ImageIcon style={{ fontSize: \"50px\" }} />\n            {username} \n          </div>}\n      </>\n\n\n\n\n    )\n\n  }else {\n    return (\n      <>\n\n\n        {thisImage ?\n          <div>\n            {/* {(metadata.contentType === 'application/pdf')? <div id=\"div-pdf\" src={`${thisImage}`}></div> :  <img id=\"reg-image\" height=\"200px\" src={`${thisImage}`}></img>} */}\n\n            {/* <button onClick={deleteImage}>del</button> */}\n\n            <Image src=\"holder.js/171x180\" rounded id=\"reg-image\" style={{ maxWidth: \"100%\" }} src={`${thisImage}`} />\n            {/* {props.image.file_name} */}\n          </div>\n          : <div>\n            <ImageIcon style={{ fontSize: \"200px\" }} />\n          </div>}\n\n      </>\n    )\n  }\n\n\n}\n\n\n\n\nconst mapStateToProps = state => ({\n});\nexport default connect(\n  mapStateToProps,\n  { fetchProfileImage }\n)(ProfileImageShow);"]},"metadata":{},"sourceType":"module"}