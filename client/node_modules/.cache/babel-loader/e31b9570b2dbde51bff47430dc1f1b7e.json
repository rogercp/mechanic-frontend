{"ast":null,"code":"var firebase=require('firebase');var firebaseui=require('firebaseui');// initializing app with firebase\nvar firebaseConfig={apiKey:\"AIzaSyBz6Bol0rPrG-wyJ0MJFFdc7FUoAIgt55I\",authDomain:\"mech-3223c.firebaseapp.com\",databaseURL:\"https://mech-3223c.firebaseio.com\",projectId:\"mech-3223c\",storageBucket:\"mech-3223c.appspot.com\",messagingSenderId:\"993844135178\",appId:\"1:993844135178:web:41f005098762ccb5a366f3\",measurementId:\"G-0RF7LZM065\"};firebase.initializeApp(firebaseConfig);firebase.analytics();// Initialize the FirebaseUI Widget using Firebase.\nvar ui=new firebaseui.auth.AuthUI(firebase.auth());var uiConfig={callbacks:{signInSuccessWithAuthResult:function signInSuccessWithAuthResult(authResult,redirectUrl){// User successfully signed in.\n// Return type determines whether we continue the redirect automatically\n// or whether we leave that to developer to handle.\nreturn true;},uiShown:function uiShown(){// The widget is rendered.\n// Hide the loader.\ndocument.getElementById('loader').style.display='none';}},// Will use popup for IDP Providers sign-in flow instead of the default, redirect.\nsignInFlow:'popup',signInSuccessUrl:'/auth/callback',signInOptions:[// Leave the lines as is for the providers you want to offer your users.\nfirebase.auth.GoogleAuthProvider.PROVIDER_ID,firebase.auth.EmailAuthProvider.PROVIDER_ID],// Terms of service url.\ntosUrl:'/terms-of-service',// Privacy policy url.\nprivacyPolicyUrl:'/privacy-policy'};function wrappedStart(){ui.start('#firebaseui-auth-container',uiConfig);}var storage=firebase.storage();var storageRef=storage.ref();var imagesRef=storageRef.child('images');export{imagesRef};export default wrappedStart;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/helpers/firebase.js"],"names":["firebase","require","firebaseui","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","analytics","ui","auth","AuthUI","uiConfig","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","uiShown","document","getElementById","style","display","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","tosUrl","privacyPolicyUrl","wrappedStart","start","storage","storageRef","ref","imagesRef","child"],"mappings":"AAAA,GAAMA,CAAAA,QAAQ,CAAGC,OAAO,CAAC,UAAD,CAAxB,CACA,GAAMC,CAAAA,UAAU,CAAGD,OAAO,CAAC,YAAD,CAA1B,CAGA;AAEA,GAAIE,CAAAA,cAAc,CAAG,CACjBC,MAAM,CAAE,yCADS,CAEjBC,UAAU,CAAE,4BAFK,CAGjBC,WAAW,CAAE,mCAHI,CAIjBC,SAAS,CAAE,YAJM,CAKjBC,aAAa,CAAE,wBALE,CAMjBC,iBAAiB,CAAE,cANF,CAOjBC,KAAK,CAAE,2CAPU,CAQjBC,aAAa,CAAE,cARE,CAArB,CAWEX,QAAQ,CAACY,aAAT,CAAuBT,cAAvB,EACAH,QAAQ,CAACa,SAAT,GAGF;AACA,GAAIC,CAAAA,EAAE,CAAG,GAAIZ,CAAAA,UAAU,CAACa,IAAX,CAAgBC,MAApB,CAA2BhB,QAAQ,CAACe,IAAT,EAA3B,CAAT,CAEA,GAAIE,CAAAA,QAAQ,CAAG,CAEXC,SAAS,CAAE,CACTC,2BAA2B,CAAE,qCAASC,UAAT,CAAqBC,WAArB,CAAkC,CAC7D;AACA;AACA;AACA,MAAO,KAAP,CACD,CANQ,CAOTC,OAAO,CAAE,kBAAW,CAClB;AACA;AACAC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAlC,CAAwCC,OAAxC,CAAkD,MAAlD,CACD,CAXQ,CAFA,CAeX;AACAC,UAAU,CAAE,OAhBD,CAiBXC,gBAAgB,CAAE,gBAjBP,CAkBXC,aAAa,CAAE,CACb;AACA7B,QAAQ,CAACe,IAAT,CAAce,kBAAd,CAAiCC,WAFpB,CAGb/B,QAAQ,CAACe,IAAT,CAAciB,iBAAd,CAAgCD,WAHnB,CAlBJ,CAwBX;AACAE,MAAM,CAAE,mBAzBG,CA0BX;AACAC,gBAAgB,CAAE,iBA3BP,CAAf,CA+BE,QAASC,CAAAA,YAAT,EAAwB,CACtBrB,EAAE,CAACsB,KAAH,CAAS,4BAAT,CAAuCnB,QAAvC,EACD,CAGD,GAAMoB,CAAAA,OAAO,CAAGrC,QAAQ,CAACqC,OAAT,EAAhB,CACA,GAAMC,CAAAA,UAAU,CAAGD,OAAO,CAACE,GAAR,EAAnB,CACA,GAAMC,CAAAA,SAAS,CAAGF,UAAU,CAACG,KAAX,CAAiB,QAAjB,CAAlB,CAEA,OACED,SADF,EAKA,cAAeL,CAAAA,YAAf","sourcesContent":["const firebase = require('firebase');\nconst firebaseui = require('firebaseui');\n\n\n// initializing app with firebase\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyBz6Bol0rPrG-wyJ0MJFFdc7FUoAIgt55I\",\n    authDomain: \"mech-3223c.firebaseapp.com\",\n    databaseURL: \"https://mech-3223c.firebaseio.com\",\n    projectId: \"mech-3223c\",\n    storageBucket: \"mech-3223c.appspot.com\",\n    messagingSenderId: \"993844135178\",\n    appId: \"1:993844135178:web:41f005098762ccb5a366f3\",\n    measurementId: \"G-0RF7LZM065\"\n  };\n\n  firebase.initializeApp(firebaseConfig);\n  firebase.analytics();\n\n\n// Initialize the FirebaseUI Widget using Firebase.\nvar ui = new firebaseui.auth.AuthUI(firebase.auth());\n\nvar uiConfig = {\n\n    callbacks: {\n      signInSuccessWithAuthResult: function(authResult, redirectUrl) {\n        // User successfully signed in.\n        // Return type determines whether we continue the redirect automatically\n        // or whether we leave that to developer to handle.\n        return true;\n      },\n      uiShown: function() {\n        // The widget is rendered.\n        // Hide the loader.\n        document.getElementById('loader').style.display = 'none';\n      }\n    },\n    // Will use popup for IDP Providers sign-in flow instead of the default, redirect.\n    signInFlow: 'popup',\n    signInSuccessUrl: '/auth/callback',\n    signInOptions: [\n      // Leave the lines as is for the providers you want to offer your users.\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n\n    ],\n    // Terms of service url.\n    tosUrl: '/terms-of-service',\n    // Privacy policy url.\n    privacyPolicyUrl: '/privacy-policy'\n  };\n  \n\n  function wrappedStart() {\n    ui.start('#firebaseui-auth-container', uiConfig);\n  }\n\n\n  const storage = firebase.storage();\n  const storageRef = storage.ref();\n  const imagesRef = storageRef.child('images');\n  \n  export {\n    imagesRef\n  }\n  \n\n  export default wrappedStart;\n"]},"metadata":{},"sourceType":"module"}