{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/PostForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { addPost } from \"../store/actions/postActions\";\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { fetchProfileImage } from \"../store/actions/settingsActions\";\nimport moment from 'moment';\nimport PostImageUpload from './PostImageUpload';\nimport { withRouter } from 'react-router-dom';\nimport Dialog from '@material-ui/core/Dialog';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport '../styles/navbar.scss';\nimport { sub } from 'date-fns/esm';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: 200\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  dialog: {},\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2),\n    outline: 'none',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    paddingBottom: '10px'\n  },\n  body: {\n    paddingBottom: '20px'\n  }\n}));\n\nfunction PostForm(props) {\n  const time = moment().format(\"MMMM Do YYYY, h:mma\");\n  const userId = localStorage.getItem('id');\n  const username = localStorage.getItem('username');\n  const classes = useStyles(); // const [currentForPost,setCurrentPostForPost] = useState()\n\n  const [state, setState] = React.useState({\n    displayName: username,\n    user_id: userId,\n    category: '',\n    post_text: '',\n    post_date: time\n  });\n  const {\n    onClose,\n    open,\n    titleText,\n    bodyText,\n    redirect,\n    redirectText\n  } = props;\n  const [fullopen, setFullOpen] = useState(false);\n  const [errorOpen, setErrorOpen] = useState(false);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  function getSteps() {\n    return ['Create Post', 'Add Images'];\n  }\n\n  function getStepContent(stepIndex) {\n    switch (stepIndex) {\n      case 0:\n        return 'Create Post';\n\n      case 1:\n        return 'Add Images';\n\n      default:\n        return 'Unknown stepIndex';\n    }\n  }\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  const handlefullOpen = () => {\n    setFullOpen(true);\n  };\n\n  const handlefullClose = () => {\n    setFullOpen(false);\n  };\n\n  function handleErrorClose() {\n    setErrorOpen(false);\n  }\n\n  function handleErrorOpen() {\n    setErrorOpen(true);\n  }\n\n  function handleClose() {\n    props.onClose();\n    handleReset();\n    props.fetchFilteredPosts('', '', '1');\n  }\n\n  const handleChange = name => event => {\n    setState({ ...state,\n      [name]: event.target.value\n    });\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    props.addPost(state);\n    props.fetchFilteredPosts(); // setCurrentPostForPost(props.currentPost)\n\n    handleNext(); // clears state for another post submission \n\n    setState({ ...state,\n      displayName: username,\n      user_id: userId,\n      category: '',\n      post_text: '',\n      post_date: time\n    }); // props.onClose();\n  };\n\n  console.log(props.currentPost, \"currentPost From redux\");\n  useEffect(() => {// setCurrentPost(props.currentPost)\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    className: classes.dialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Stepper, {\n    activeStep: activeStep,\n    alternativeLabel: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, steps.map(label => /*#__PURE__*/React.createElement(Step, {\n    key: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StepLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, label))))), activeStep === 0 ? /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: onSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    name: \"category\",\n    className: classes.textField,\n    value: state.category,\n    onChange: handleChange('category'),\n    inputProps: {\n      name: 'type',\n      id: 'outlined-type-native-simple'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Maintence\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, \"Maintence\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Mods\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, \"Mods\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Repairs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, \"Repairs\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Tips\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, \"Tips\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Exotics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, \"Exotics\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"German\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, \"German\")), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-multiline-static\",\n    multiline: true,\n    name: \"post_text\",\n    value: state.post_text,\n    onChange: handleChange('post_text') //   rows=\"4\"\n    ,\n    placeholder: \"Description\",\n    className: classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    className: classes.button,\n    onClick: onSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, \"Enter\")) : /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PostImageUpload, {\n    post: props.currentPost,\n    isCarousel: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    onClick: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 5\n    }\n  }, \"Done\")))));\n}\n\n;\n\nconst mapStateToProps = state => ({\n  userImage: state.setting.userImage,\n  currentPost: state.post.currentPost\n});\n\nexport default connect(mapStateToProps, {\n  addPost,\n  fetchFilteredPosts,\n  fetchProfileImage\n})(withRouter(PostForm));","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/PostForm.js"],"names":["React","useEffect","useState","makeStyles","TextField","InputLabel","FormControl","Select","Button","connect","addPost","fetchFilteredPosts","fetchProfileImage","moment","PostImageUpload","withRouter","Dialog","Stepper","Step","StepLabel","sub","useStyles","theme","formControl","margin","spacing","width","selectEmpty","marginTop","container","display","flexWrap","textField","marginLeft","marginRight","button","dialog","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","outline","flexDirection","justifyContent","alignItems","title","paddingBottom","body","PostForm","props","time","format","userId","localStorage","getItem","username","classes","state","setState","displayName","user_id","category","post_text","post_date","onClose","open","titleText","bodyText","redirect","redirectText","fullopen","setFullOpen","errorOpen","setErrorOpen","activeStep","setActiveStep","steps","getSteps","getStepContent","stepIndex","handleNext","prevActiveStep","handleBack","handleReset","handlefullOpen","handlefullClose","handleErrorClose","handleErrorOpen","handleClose","handleChange","name","event","target","value","onSubmitHandler","e","preventDefault","console","log","currentPost","root","map","label","id","mapStateToProps","userImage","setting","post"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,iBAAT,QAAkC,kCAAlC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,OAAO,uBAAP;AACA,SAASC,GAAT,QAAoB,cAApB;AAIA,MAAMC,SAAS,GAAGlB,UAAU,CAACmB,KAAK,KAAK;AACrCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADG;AAEXC,IAAAA,KAAK,EAAE;AAFI,GADwB;AAKrCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,SAAS,EAAEN,KAAK,CAACG,OAAN,CAAc,CAAd;AADA,GALwB;AAQrCI,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,QAAQ,EAAE;AAFD,GAR0B;AAYrCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAEX,KAAK,CAACG,OAAN,CAAc,CAAd,CADH;AAETS,IAAAA,WAAW,EAAEZ,KAAK,CAACG,OAAN,CAAc,CAAd,CAFJ;AAGTC,IAAAA,KAAK,EAAE;AAHE,GAZ0B;AAiBrCS,EAAAA,MAAM,EAAE;AACNX,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADF,GAjB6B;AAoBrCW,EAAAA,MAAM,EAAE,EApB6B;AAuBrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,eAAe,EAAEhB,KAAK,CAACiB,OAAN,CAAcC,UAAd,CAAyBH,KADvC;AAEHI,IAAAA,MAAM,EAAE,gBAFL;AAGHC,IAAAA,SAAS,EAAEpB,KAAK,CAACqB,OAAN,CAAc,CAAd,CAHR;AAIHC,IAAAA,OAAO,EAAEtB,KAAK,CAACG,OAAN,CAAc,CAAd,CAJN;AAKHoB,IAAAA,OAAO,EAAE,MALN;AAMHf,IAAAA,OAAO,EAAE,MANN;AAOHgB,IAAAA,aAAa,EAAE,QAPZ;AAQHC,IAAAA,cAAc,EAAE,QARb;AASHC,IAAAA,UAAU,EAAE;AATT,GAvB8B;AAkCrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,aAAa,EAAE;AADZ,GAlC8B;AAqCrCC,EAAAA,IAAI,EAAE;AACFD,IAAAA,aAAa,EAAE;AADb;AArC+B,CAAL,CAAN,CAA5B;;AA0CA,SAASE,QAAT,CAAkBC,KAAlB,EAAyB;AAEvB,QAAMC,IAAI,GAAGzC,MAAM,GAAG0C,MAAT,CAAgB,qBAAhB,CAAb;AACA,QAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAf;AACA,QAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjB;AACA,QAAME,OAAO,GAAGvC,SAAS,EAAzB,CALuB,CAMvB;;AACA,QAAM,CAACwC,KAAD,EAAQC,QAAR,IAAoB9D,KAAK,CAACE,QAAN,CAAe;AACvC6D,IAAAA,WAAW,EAAEJ,QAD0B;AAEvCK,IAAAA,OAAO,EAAER,MAF8B;AAGvCS,IAAAA,QAAQ,EAAE,EAH6B;AAIvCC,IAAAA,SAAS,EAAE,EAJ4B;AAKvCC,IAAAA,SAAS,EAAEb;AAL4B,GAAf,CAA1B;AAOA,QAAM;AAAEc,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,SAAjB;AAA4BC,IAAAA,QAA5B;AAAsCC,IAAAA,QAAtC;AAAgDC,IAAAA;AAAhD,MAAiEpB,KAAvE;AACA,QAAM,CAACqB,QAAD,EAAWC,WAAX,IAA0BzE,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAAC0E,SAAD,EAAYC,YAAZ,IAA4B3E,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAC4E,UAAD,EAAaC,aAAb,IAA8B/E,KAAK,CAACE,QAAN,CAAe,CAAf,CAApC;AACA,QAAM8E,KAAK,GAAGC,QAAQ,EAAtB;;AAIA,WAASA,QAAT,GAAoB;AAClB,WAAO,CAAC,aAAD,EAAgB,YAAhB,CAAP;AACD;;AAED,WAASC,cAAT,CAAwBC,SAAxB,EAAmC;AACjC,YAAQA,SAAR;AACE,WAAK,CAAL;AACE,eAAO,aAAP;;AACF,WAAK,CAAL;AACE,eAAO,YAAP;;AACF;AACE,eAAO,mBAAP;AANJ;AAQD;;AAGD,QAAMC,UAAU,GAAG,MAAM;AACvBL,IAAAA,aAAa,CAAEM,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvBP,IAAAA,aAAa,CAAEM,cAAD,IAAoBA,cAAc,GAAG,CAAtC,CAAb;AACD,GAFD;;AAIA,QAAME,WAAW,GAAG,MAAM;AACxBR,IAAAA,aAAa,CAAC,CAAD,CAAb;AACD,GAFD;;AAKA,QAAMS,cAAc,GAAG,MAAM;AAC3Bb,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAGA,QAAMc,eAAe,GAAG,MAAM;AAC5Bd,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAFD;;AAIA,WAASe,gBAAT,GAA4B;AAC1Bb,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAED,WAASc,eAAT,GAA2B;AACzBd,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAIC,WAASe,WAAT,GAAuB;AAEnBvC,IAAAA,KAAK,CAACe,OAAN;AACAmB,IAAAA,WAAW;AACXlC,IAAAA,KAAK,CAAC1C,kBAAN,CAAyB,EAAzB,EAA4B,EAA5B,EAA+B,GAA/B;AAEH;;AAKH,QAAMkF,YAAY,GAAGC,IAAI,IAAIC,KAAK,IAAI;AACpCjC,IAAAA,QAAQ,CAAC,EACP,GAAGD,KADI;AAEP,OAACiC,IAAD,GAAQC,KAAK,CAACC,MAAN,CAAaC;AAFd,KAAD,CAAR;AAID,GALD;;AAQA,QAAMC,eAAe,GAAGC,CAAC,IAAI;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA/C,IAAAA,KAAK,CAAC3C,OAAN,CAAcmD,KAAd;AACAR,IAAAA,KAAK,CAAC1C,kBAAN,GAH2B,CAI3B;;AACAyE,IAAAA,UAAU,GALiB,CAM3B;;AACAtB,IAAAA,QAAQ,CAAC,EACP,GAAGD,KADI;AAETE,MAAAA,WAAW,EAAEJ,QAFJ;AAGTK,MAAAA,OAAO,EAAER,MAHA;AAITS,MAAAA,QAAQ,EAAE,EAJD;AAKTC,MAAAA,SAAS,EAAE,EALF;AAMTC,MAAAA,SAAS,EAAEb;AANF,KAAD,CAAR,CAP2B,CAgB3B;AACD,GAjBD;;AAmBF+C,EAAAA,OAAO,CAACC,GAAR,CAAYjD,KAAK,CAACkD,WAAlB,EAA8B,wBAA9B;AAEEtG,EAAAA,SAAS,CAAC,MAAM,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE,uDACA,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEoE,IAAd;AAAoB,IAAA,OAAO,EAAEuB,WAA7B;AAA0C,IAAA,SAAS,EAAEhC,OAAO,CAACxB,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAEwB,OAAO,CAACvB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEuB,OAAO,CAAC4C,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACF,oBAAC,OAAD;AAAS,IAAA,UAAU,EAAE1B,UAArB;AAAiC,IAAA,gBAAgB,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,KAAK,CAACyB,GAAN,CAAWC,KAAD,iBACT,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYA,KAAZ,CADF,CADD,CADH,CADE,CADJ,EAWH5B,UAAU,KAAK,CAAf,gBACK,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAElB,OAAO,CAACrC,WAAhC;AAA6C,IAAA,KAAK,EAAE;AAAEO,MAAAA,OAAO,EAAE,MAAX;AAAmBkB,MAAAA,UAAU,EAAE,QAA/B;AAAyCD,MAAAA,cAAc,EAAE;AAAzD,KAApD;AAAyH,IAAA,UAAU,MAAnI;AAAoI,IAAA,YAAY,EAAC,KAAjJ;AAAuJ,IAAA,QAAQ,EAAEmD,eAAjK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,oBAAC,MAAD;AACE,IAAA,MAAM,MADR;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,SAAS,EAAEtC,OAAO,CAAC5B,SAHrB;AAIE,IAAA,KAAK,EAAE6B,KAAK,CAACI,QAJf;AAKE,IAAA,QAAQ,EAAE4B,YAAY,CAAC,UAAD,CALxB;AAME,IAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,MADI;AAEVa,MAAAA,EAAE,EAAE;AAFM,KANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAYE;AAAQ,IAAA,KAAK,EAAE,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAZF,eAaE;AAAQ,IAAA,KAAK,EAAE,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAcE;AAAQ,IAAA,KAAK,EAAE,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAdF,eAeE;AAAQ,IAAA,KAAK,EAAE,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eAgBE;AAAQ,IAAA,KAAK,EAAE,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAhBF,eAiBE;AAAQ,IAAA,KAAK,EAAE,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,CAHF,eAwBE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,2BADL;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,IAAI,EAAC,WAHP;AAIE,IAAA,KAAK,EAAE9C,KAAK,CAACK,SAJf;AAKE,IAAA,QAAQ,EAAE2B,YAAY,CAAC,WAAD,CALxB,CAME;AANF;AAOE,IAAA,WAAW,EAAC,aAPd;AAQE,IAAA,SAAS,EAAEjC,OAAO,CAAC5B,SARrB;AASE,IAAA,MAAM,EAAC,QATT;AAUE,IAAA,OAAO,EAAC,UAVV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,eAqCE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,SAAS,EAAE4B,OAAO,CAACzB,MAJrB;AAKE,IAAA,OAAO,EAAE+D,eALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aArCF,CADL,gBAoDG,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEtC,OAAO,CAACrC,WAAhC;AAA6C,IAAA,KAAK,EAAE;AAAEO,MAAAA,OAAO,EAAE,MAAX;AAAmBgB,MAAAA,aAAa,EAAE,QAAlC;AAA4CC,MAAAA,cAAc,EAAE,QAA5D;AAAsEC,MAAAA,UAAU,EAAE;AAAlF,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGA,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEK,KAAK,CAACkD,WAA7B;AAA0C,IAAA,UAAU,EAAE,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,eAKA,oBAAC,MAAD;AACE,IAAA,SAAS,EAAE3C,OAAO,CAACzB,MADrB;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,OAAO,EAAEyD,WALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALA,CA/DA,CADA,CADA,CADF;AAkGD;;AAAA;;AAGD,MAAMgB,eAAe,GAAI/C,KAAD,KAAY;AAClCgD,EAAAA,SAAS,EAAEhD,KAAK,CAACiD,OAAN,CAAcD,SADS;AAElCN,EAAAA,WAAW,EAAE1C,KAAK,CAACkD,IAAN,CAAWR;AAFU,CAAZ,CAAxB;;AAKA,eAAe9F,OAAO,CACpBmG,eADoB,EAEpB;AAAElG,EAAAA,OAAF;AAAWC,EAAAA,kBAAX;AAA+BC,EAAAA;AAA/B,CAFoB,CAAP,CAGbG,UAAU,CAACqC,QAAD,CAHG,CAAf","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { addPost } from \"../store/actions/postActions\";\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { fetchProfileImage } from \"../store/actions/settingsActions\";\nimport moment from 'moment'\nimport PostImageUpload from './PostImageUpload'\nimport { withRouter } from 'react-router-dom';\nimport Dialog from '@material-ui/core/Dialog';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\n\nimport '../styles/navbar.scss';\nimport { sub } from 'date-fns/esm';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: 200,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  dialog: {\n\n  },\n  paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '1px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2),\n      outline: 'none',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n  },\n  title: {\n      paddingBottom: '10px',\n  },\n  body: {\n      paddingBottom: '20px',\n  },\n}));\n\nfunction PostForm(props) {\n\n  const time = moment().format(\"MMMM Do YYYY, h:mma\")\n  const userId = localStorage.getItem('id');\n  const username = localStorage.getItem('username');\n  const classes = useStyles();\n  // const [currentForPost,setCurrentPostForPost] = useState()\n  const [state, setState] = React.useState({\n    displayName: username,\n    user_id: userId,\n    category: '',\n    post_text: '',\n    post_date: time,\n  });\n  const { onClose, open, titleText, bodyText, redirect, redirectText } = props;\n  const [fullopen, setFullOpen] = useState(false);\n  const [errorOpen, setErrorOpen] = useState(false);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n\n\n  function getSteps() {\n    return ['Create Post', 'Add Images'];\n  }\n  \n  function getStepContent(stepIndex) {\n    switch (stepIndex) {\n      case 0:\n        return 'Create Post';\n      case 1:\n        return 'Add Images';\n      default:\n        return 'Unknown stepIndex';\n    }\n  }\n    \n  \n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n\n  const handlefullOpen = () => {\n    setFullOpen(true);\n  };\n  const handlefullClose = () => {\n    setFullOpen(false);\n  };\n\n  function handleErrorClose() {\n    setErrorOpen(false);\n  }\n\n  function handleErrorOpen() {\n    setErrorOpen(true);\n  }\n\n\n\n    function handleClose() {\n\n        props.onClose();\n        handleReset();\n        props.fetchFilteredPosts('','','1')\n\n    }\n\n\n\n\n  const handleChange = name => event => {\n    setState({\n      ...state,\n      [name]: event.target.value,\n    });\n  };\n\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    props.addPost(state);\n    props.fetchFilteredPosts();\n    // setCurrentPostForPost(props.currentPost)\n    handleNext()\n    // clears state for another post submission \n    setState({\n      ...state,\n    displayName: username,\n    user_id: userId,\n    category: '',\n    post_text: '',\n    post_date: time,\n    });\n\n    // props.onClose();\n  };\n\nconsole.log(props.currentPost,\"currentPost From redux\")\n\n  useEffect(() => {\n\n    // setCurrentPost(props.currentPost)\n  }, []);\n\n  return (\n    <>\n    <Dialog open={open} onClose={handleClose} className={classes.dialog}>\n    <div className={classes.paper}>\n        <div className={classes.root}>\n      <Stepper activeStep={activeStep} alternativeLabel>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      </div>\n\n{activeStep === 0?\n      <FormControl className={classes.formControl} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }} noValidate autoComplete=\"off\" onSubmit={onSubmitHandler}>\n\n        <InputLabel id=\"demo-simple-select-label\">Category</InputLabel>\n        <Select\n          native\n          name=\"category\"\n          className={classes.textField}\n          value={state.category}\n          onChange={handleChange('category')}\n          inputProps={{\n            name: 'type',\n            id: 'outlined-type-native-simple',\n          }}\n        >\n          <option value=\"\" />\n          <option value={\"Maintence\"}>Maintence</option>\n          <option value={\"Mods\"}>Mods</option>\n          <option value={\"Repairs\"}>Repairs</option>\n          <option value={\"Tips\"}>Tips</option>\n          <option value={\"Exotics\"}>Exotics</option>\n          <option value={\"German\"}>German</option>\n\n        </Select>\n\n        <TextField\n          id=\"outlined-multiline-static\"\n          multiline\n          name=\"post_text\"\n          value={state.post_text}\n          onChange={handleChange('post_text')}\n          //   rows=\"4\"\n          placeholder=\"Description\"\n          className={classes.textField}\n          margin=\"normal\"\n          variant=\"outlined\"\n        />\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          className={classes.button}\n          onClick={onSubmitHandler}\n        >\n          Enter\n        </Button>\n\n      </FormControl>\n\n    :\n    \n    <FormControl className={classes.formControl} style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\" }}>\n\n\n    <PostImageUpload post={props.currentPost} isCarousel={true}   />\n    \n    <Button\n      className={classes.button}\n      variant=\"contained\"\n      color=\"primary\"\n      size=\"large\"\n      onClick={handleClose}>\n\n      Done\n  </Button>\n\n\n\n\n\n\n\n  </FormControl>\n    }\n      </div>\n      </Dialog>\n\n\n\n\n    \n    </>\n  );\n};\n\n\nconst mapStateToProps = (state) => ({\n  userImage: state.setting.userImage,\n  currentPost: state.post.currentPost\n});\n\nexport default connect(\n  mapStateToProps,\n  { addPost, fetchFilteredPosts, fetchProfileImage }\n)(withRouter(PostForm));\n\n"]},"metadata":{},"sourceType":"module"}