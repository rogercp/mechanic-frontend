{"ast":null,"code":"import _defineProperty from \"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_IMG_START, GET_IMG_SUCCESS, GET_IMG_FAILURE } from '../actions/settingsActions';\nconst initialState = {\n  userImage: null\n};\n\nconst settingsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_IMG_SUCCESS:\n      return _objectSpread({}, state, {\n        userImage: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default settingsReducer;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/store/reducers/settingsReducer.js"],"names":["GET_IMG_START","GET_IMG_SUCCESS","GET_IMG_FAILURE","initialState","userImage","settingsReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SACIA,aADJ,EAECC,eAFD,EAGAC,eAHA,QAIM,4BAJN;AAMA,MAAMC,YAAY,GAAG;AAEjBC,EAAAA,SAAS,EAAC;AAFO,CAArB;;AAOA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAEtD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKP,eAAL;AACA,+BACKK,KADL;AAEEF,QAAAA,SAAS,EAAEG,MAAM,CAACE;AAFpB;;AAIA;AACA,aAAOH,KAAP;AARJ;AAWD,CAbH;;AAeE,eAAeD,eAAf","sourcesContent":["import {\n    GET_IMG_START ,\n GET_IMG_SUCCESS ,\nGET_IMG_FAILURE ,\n}from '../actions/settingsActions';\n\nconst initialState = {\n\n    userImage:null,\n\n}\n\n\nconst settingsReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case GET_IMG_SUCCESS:\n        return {\n          ...state,\n          userImage: action.payload\n        };\n        default: \n        return state \n    }\n\n  };\n\n  export default settingsReducer;"]},"metadata":{},"sourceType":"module"}