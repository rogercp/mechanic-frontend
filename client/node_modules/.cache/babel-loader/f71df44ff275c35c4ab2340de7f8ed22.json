{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/Posts.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { axiosWithAuth } from '../helpers/index';\nimport IndividualPost from './IndividualPost';\nimport { connect } from 'react-redux';\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\"; // import { fetchPosts } from \"../store/actions/postActions\";\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Search from \"./Search\";\n\nfunction Posts(props) {\n  const [searchPosts, setsearchPosts] = useState([]); // const [filteredPosts,setFilteredposts] = useState({\n  // })\n\n  async function searchPostsHandler(term) {\n    axiosWithAuth().post('/post/search', {\n      searchTerm: term\n    }).then(res => {\n      setsearchPosts(res.data);\n      props.toggleSearchToTrue();\n    }).catch(err => {});\n  }\n\n  ;\n  useEffect(() => {\n    props.fetchFilteredPosts(\"AllPosts\");\n  }, []);\n  console.log(props.filteredPosts, \"filtered posts from reduz in posts\");\n\n  if (props.searchToggle === true) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Search, {\n      searchPostsHandler: searchPostsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, searchPosts.map(p => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IndividualPost, {\n        post: p,\n        key: caches.uid,\n        fetchPosts: props.fetchFilteredPosts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }\n      }));\n    })));\n  } else if (props.filteredPosts.length > 0) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Search, {\n      searchPostsHandler: searchPostsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, props.filteredPosts.filteredPosts.map(p => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IndividualPost, {\n        post: p,\n        key: caches.uid,\n        fetchPosts: props.fetchFilteredPosts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }));\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, \"ayyyyy\"));\n  }\n}\n\n;\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts\n});\n\nexport default connect(mapStateToProps, {\n  toggleSearchToTrue,\n  fetchFilteredPosts\n})(Posts);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/Posts.js"],"names":["React","useState","useEffect","axiosWithAuth","IndividualPost","connect","fetchFilteredPosts","toggleSearchToTrue","ExpandMoreIcon","Search","Posts","props","searchPosts","setsearchPosts","searchPostsHandler","term","post","searchTerm","then","res","data","catch","err","console","log","filteredPosts","searchToggle","display","flexDirection","alignItems","map","p","caches","uid","length","mapStateToProps","state","myposts","posts"],"mappings":"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","sourcesContent":["\n\nimport React, { useState, useEffect } from \"react\";\nimport { axiosWithAuth } from '../helpers/index';\nimport IndividualPost from './IndividualPost'\nimport { connect } from 'react-redux';\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\";\n// import { fetchPosts } from \"../store/actions/postActions\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Search from \"./Search\";\n\nfunction Posts(props) {\n\n  const [searchPosts, setsearchPosts] = useState([])\n\n  // const [filteredPosts,setFilteredposts] = useState({\n  // })\n\n  async function searchPostsHandler(term) {\n\n    axiosWithAuth()\n      .post('/post/search', { searchTerm: term })\n      .then(res => {\n        setsearchPosts(res.data)\n        props.toggleSearchToTrue()\n      })\n      .catch(err => {\n      });\n  };\n\n\n  useEffect(() => {\n    props.fetchFilteredPosts(\"AllPosts\")\n  }, []);\n\n\n\n\n  console.log(props.filteredPosts,\"filtered posts from reduz in posts\")\n\n  if (props.searchToggle === true) {\n\n    return (\n\n      <>\n\n        <Search searchPostsHandler={searchPostsHandler} />\n\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n\n          {\n\n            searchPosts.map(p => {\n              return (\n                <>\n                  <IndividualPost post={p} key={caches.uid} fetchPosts={props.fetchFilteredPosts} />\n                </>\n              );\n            })\n\n\n          }\n\n\n          {/* <ExpandMoreIcon style={{ fontSize: \"100px\" }} /> */}\n\n        </div>\n      </>\n\n    )\n  }\n  else if(props.filteredPosts.length>0) {\n    return (\n      <>\n\n        <Search searchPostsHandler={searchPostsHandler} />\n\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n\n       \n              {props.filteredPosts.filteredPosts.map(p => {\n                return (\n                  <>\n                    <IndividualPost post={p} key={caches.uid} fetchPosts={props.fetchFilteredPosts} />\n                  </>\n                );\n              })}\n          \n    \n\n          {/* <ExpandMoreIcon style={{ fontSize: \"100px\" }} /> */}\n\n        </div>\n      </>\n    );\n  }else{\n\n    return (\n\n\n      <>\n      <h1>ayyyyy</h1>\n      </>\n    )\n  }\n\n\n};\n\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts\n});\nexport default connect(\n  mapStateToProps,\n  { toggleSearchToTrue, fetchFilteredPosts }\n)(Posts);\n"]},"metadata":{},"sourceType":"module"}