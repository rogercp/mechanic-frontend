{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/Posts.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { axiosWithAuth } from '../helpers/index';\nimport IndividualPost from './IndividualPost';\nimport { connect } from 'react-redux';\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\";\nimport { changeOrderPosts } from \"../store/actions/postActions\"; // import { fetchPosts } from \"../store/actions/postActions\";\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Search from \"./Search\"; // import { Dropdown } from 'react-bootstrap';\n\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/Select';\n\nfunction Posts(props) {\n  const [searchPosts, setsearchPosts] = useState([]);\n  const [posts, setPosts] = useState({\n    myPosts: []\n  });\n  const [orderBy, setOrderBy] = useState({\n    order: props.orderPosts\n  });\n\n  async function searchPostsHandler(term) {\n    axiosWithAuth().post('/post/search', {\n      searchTerm: term\n    }).then(res => {\n      setsearchPosts(res.data);\n      props.toggleSearchToTrue();\n    }).catch(err => {});\n  }\n\n  ;\n  useEffect(() => {\n    onFirstLoad(); // setPosts(props.filteredPosts)\n    // props.changeOrderPosts(orderBy.order)\n  }, [orderBy.order]);\n\n  function onFirstLoad() {\n    props.fetchFilteredPosts(\"AllPosts\", `${orderBy.order}`);\n    setPosts.myPosts(props.filteredPosts);\n  }\n\n  const handleChange = name => event => {\n    setOrderBy({ ...orderBy,\n      [name]: event.target.value\n    });\n  };\n\n  console.log(props.filteredPosts, \"Postss coming from reducer\");\n\n  if (props.searchToggle === true) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Search, {\n      searchPostsHandler: searchPostsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      native: true,\n      name: \"order\",\n      value: orderBy.order,\n      onChange: handleChange('order'),\n      inputProps: {\n        name: 'type',\n        id: 'outlined-type-native-simple'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, \"date\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"likes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, \"likes\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, searchPosts.map(p => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IndividualPost, {\n        post: p,\n        key: caches.uid,\n        fetchPosts: props.fetchFilteredPosts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }\n      }));\n    })));\n  } else if (props.filteredPosts.length > 0) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Search, {\n      searchPostsHandler: searchPostsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      native: true,\n      name: \"order\",\n      value: orderBy.order,\n      onChange: handleChange('order'),\n      inputProps: {\n        name: 'type',\n        id: 'outlined-type-native-simple'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, \"date\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"likes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, \"likes\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, posts.myPosts.map(p => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IndividualPost, {\n        post: p,\n        key: caches.uid,\n        fetchPosts: props.fetchFilteredPosts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }\n      }));\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }\n    }, \"ayyyyy\"));\n  }\n}\n\n;\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts,\n  orderPosts: state.post.order\n});\n\nexport default connect(mapStateToProps, {\n  toggleSearchToTrue,\n  fetchFilteredPosts,\n  changeOrderPosts\n})(Posts);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/Posts.js"],"names":["React","useState","useEffect","axiosWithAuth","IndividualPost","connect","fetchFilteredPosts","toggleSearchToTrue","changeOrderPosts","ExpandMoreIcon","Search","Select","InputLabel","Posts","props","searchPosts","setsearchPosts","posts","setPosts","myPosts","orderBy","setOrderBy","order","orderPosts","searchPostsHandler","term","post","searchTerm","then","res","data","catch","err","onFirstLoad","filteredPosts","handleChange","name","event","target","value","console","log","searchToggle","id","display","flexDirection","alignItems","map","p","caches","uid","length","mapStateToProps","state","myposts"],"mappings":"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","sourcesContent":["\n\nimport React, { useState, useEffect } from \"react\";\nimport { axiosWithAuth } from '../helpers/index';\nimport IndividualPost from './IndividualPost'\nimport { connect } from 'react-redux';\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\";\nimport { changeOrderPosts } from \"../store/actions/postActions\";\n// import { fetchPosts } from \"../store/actions/postActions\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Search from \"./Search\";\n// import { Dropdown } from 'react-bootstrap';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/Select';\n\n\n\n\nfunction Posts(props) {\n\n  const [searchPosts, setsearchPosts] = useState([])\n  const [posts ,setPosts] = useState({\n\n    myPosts: []\n  })\n\n const [orderBy,setOrderBy] = useState({\n\n   order:props.orderPosts\n\n  })\n  \n  async function searchPostsHandler(term) {\n\n    axiosWithAuth()\n      .post('/post/search', { searchTerm: term })\n      .then(res => {\n        setsearchPosts(res.data)\n        props.toggleSearchToTrue()\n      })\n      .catch(err => {\n      });\n  };\n\n\n   useEffect(() => {\n    onFirstLoad()\n    // setPosts(props.filteredPosts)\n    // props.changeOrderPosts(orderBy.order)\n  }, [orderBy.order]);\n\n  function onFirstLoad(){\n\n    props.fetchFilteredPosts(\"AllPosts\",`${orderBy.order}`)\n\n    setPosts.myPosts(props.filteredPosts)\n\n  }\n\nconst handleChange = name => event => {\n  setOrderBy({\n    ...orderBy,\n    [name]: event.target.value,\n  });\n\n};\n\n  console.log(props.filteredPosts,\"Postss coming from reducer\")\n\n  if (props.searchToggle === true) {\n\n    return (\n\n      <>\n\n        <Search searchPostsHandler={searchPostsHandler} />\n        <Select\n          native\n          name=\"order\"\n          value={orderBy.order}\n          onChange={handleChange('order')}\n          inputProps={{\n            name: 'type',\n            id: 'outlined-type-native-simple',\n          }}\n        >\n          <option value=\"\" />\n          <option value={\"date\"}>date</option>\n          <option value={\"likes\"}>likes</option>\n        \n        </Select>\n\n\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n\n          {\n\n            searchPosts.map(p => {\n              return (\n                <>\n                  <IndividualPost post={p} key={caches.uid} fetchPosts={props.fetchFilteredPosts} />\n                </>\n              );\n            })\n\n\n          }\n\n\n\n        </div>\n      </>\n\n    )\n  }\n  else if(props.filteredPosts.length>0) {\n    return (\n      <>\n\n        <Search searchPostsHandler={searchPostsHandler} />\n\n        \n        <Select\n          native\n          name=\"order\"\n          value={orderBy.order}\n          onChange={handleChange('order')}\n          inputProps={{\n            name: 'type',\n            id: 'outlined-type-native-simple',\n          }}\n        >\n          <option value=\"\" />\n          <option value={\"date\"}>date</option>\n          <option value={\"likes\"}>likes</option>\n        \n        </Select>\n\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n\n       \n              {posts.myPosts.map(p => {\n                return (\n                  <>\n                    <IndividualPost post={p} key={caches.uid} fetchPosts={props.fetchFilteredPosts} />\n                  </>\n                );\n              })}\n          \n  \n\n        </div>\n      </>\n    );\n  }else{\n\n    return (\n\n\n      <>\n      <h1>ayyyyy</h1>\n      </>\n    )\n  }\n\n\n};\n\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts,\n  orderPosts: state.post.order\n});\nexport default connect(\n  mapStateToProps,\n  { toggleSearchToTrue, fetchFilteredPosts, changeOrderPosts }\n)(Posts);\n"]},"metadata":{},"sourceType":"module"}