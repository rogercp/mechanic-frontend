{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/views/AuthCallback.js\";\nimport React from \"react\";\nimport firebase from \"firebase\";\nimport axios from \"axios\";\n\nfunction AuthCallback(props) {\n  firebase.auth().onAuthStateChanged(async user => {\n    // User is signed in.\n    if (user) {\n      let token = await user.getIdToken();\n      localStorage.setItem(\"token\", token);\n      axios.post(\"\".concat(process.env.REACT_APP_API_URL, \"/users/auth\"), {\n        user: user,\n        token: token\n      }).then(res => {\n        const axiosWithAuth = () => {\n          const token = localStorage.getItem('token');\n          return axios.create({\n            headers: {\n              Authorization: token\n            },\n            baseURL: \"\".concat(process.env.REACT_APP_API_URL)\n          });\n        };\n\n        axiosWithAuth().put(\"users/update/\".concat(userId), state).then(res => {\n          localStorage.setItem(\"username\", \"\".concat(state.user_name));\n          window.location.reload();\n        }).catch(err => {});\n        localStorage.setItem(\"username\", user.displayName.substr(0, user.displayName.indexOf(' ')));\n      }).then(res => {\n        localStorage.setItem(\"id\", res.data.id);\n        window.location = \"/home\";\n      }).catch(err => {\n        // console.error(err);\n        window.location = \"/login\";\n      });\n    } else {\n      // User is signed out.\n      window.location = \"/login\";\n    }\n  });\n  return React.createElement(\"div\", {\n    className: \"login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  });\n}\n\nexport default AuthCallback;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/views/AuthCallback.js"],"names":["React","firebase","axios","AuthCallback","props","auth","onAuthStateChanged","user","token","getIdToken","localStorage","setItem","post","process","env","REACT_APP_API_URL","then","res","axiosWithAuth","getItem","create","headers","Authorization","baseURL","put","userId","state","user_name","window","location","reload","catch","err","displayName","substr","indexOf","data","id"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzBH,EAAAA,QAAQ,CAACI,IAAT,GAAgBC,kBAAhB,CAAmC,MAAMC,IAAN,IAAc;AAC7C;AACA,QAAIA,IAAJ,EAAU;AAGN,UAAIC,KAAK,GAAG,MAAMD,IAAI,CAACE,UAAL,EAAlB;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,KAA9B;AAGAN,MAAAA,KAAK,CACAU,IADL,WACaC,OAAO,CAACC,GAAR,CAAYC,iBADzB,kBACyD;AACjDR,QAAAA,IAAI,EAAEA,IAD2C;AAEjDC,QAAAA,KAAK,EAAEA;AAF0C,OADzD,EAIOQ,IAJP,CAIYC,GAAG,IAAG;AAEV,cAAMC,aAAa,GAAG,MAAM;AACxB,gBAAMV,KAAK,GAAGE,YAAY,CAACS,OAAb,CAAqB,OAArB,CAAd;AAEA,iBAAOjB,KAAK,CAACkB,MAAN,CAAa;AAClBC,YAAAA,OAAO,EAAE;AACPC,cAAAA,aAAa,EAAEd;AADR,aADS;AAIlBe,YAAAA,OAAO,YAAKV,OAAO,CAACC,GAAR,CAAYC,iBAAjB;AAJW,WAAb,CAAP;AAMD,SATH;;AAWEG,QAAAA,aAAa,GACZM,GADD,wBACqBC,MADrB,GAC+BC,KAD/B,EAECV,IAFD,CAEMC,GAAG,IAAI;AACTP,UAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,YAAmCe,KAAK,CAACC,SAAzC;AACAC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,SALD,EAMCC,KAND,CAMOC,GAAG,IAAI,CACb,CAPD;AASAtB,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCJ,IAAI,CAAC0B,WAAL,CAAiBC,MAAjB,CAAwB,CAAxB,EAA0B3B,IAAI,CAAC0B,WAAL,CAAiBE,OAAjB,CAAyB,GAAzB,CAA1B,CAAjC;AAGL,OA7BL,EAgCKnB,IAhCL,CAgCUC,GAAG,IAAI;AAETP,QAAAA,YAAY,CAACC,OAAb,CAAqB,IAArB,EAA2BM,GAAG,CAACmB,IAAJ,CAASC,EAApC;AACAT,QAAAA,MAAM,CAACC,QAAP,GAAkB,OAAlB;AACH,OApCL,EAqCKE,KArCL,CAqCWC,GAAG,IAAI;AACV;AACAJ,QAAAA,MAAM,CAACC,QAAP,GAAkB,QAAlB;AACH,OAxCL;AAyCH,KAhDD,MAgDO;AACH;AACAD,MAAAA,MAAM,CAACC,QAAP,GAAkB,QAAlB;AACH;AACJ,GAtDD;AAwDA,SAAO;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH;;AAGD,eAAe1B,YAAf","sourcesContent":["\nimport React from \"react\";\nimport firebase from \"firebase\";\nimport axios from \"axios\";\n\n\n\nfunction AuthCallback(props) {\n    firebase.auth().onAuthStateChanged(async user => {\n        // User is signed in.\n        if (user) {\n           \n\n            let token = await user.getIdToken();\n            localStorage.setItem(\"token\", token);\n\n\n            axios\n                .post(`${process.env.REACT_APP_API_URL}/users/auth`, {\n                    user: user,\n                    token: token\n                }).then(res =>{\n\n                    const axiosWithAuth = () => {\n                        const token = localStorage.getItem('token');\n                      \n                        return axios.create({\n                          headers: {\n                            Authorization: token\n                          },\n                          baseURL: `${process.env.REACT_APP_API_URL}`\n                        });\n                      }\n\n                      axiosWithAuth()\n                      .put(`users/update/${userId}`, state)\n                      .then(res => {\n                          localStorage.setItem(\"username\",`${state.user_name}`);\n                          window.location.reload();\n                      })\n                      .catch(err => {\n                      });\n\n                      localStorage.setItem(\"username\", user.displayName.substr(0,user.displayName.indexOf(' ')))\n\n                     \n                }\n\n                )\n                .then(res => {\n                   \n                    localStorage.setItem(\"id\", res.data.id);\n                    window.location = \"/home\";\n                })\n                .catch(err => {\n                    // console.error(err);\n                    window.location = \"/login\";\n                });\n        } else {\n            // User is signed out.\n            window.location = \"/login\";\n        }\n    });\n\n    return <div className=\"login\" />;\n}\n\n\nexport default AuthCallback;\n"]},"metadata":{},"sourceType":"module"}