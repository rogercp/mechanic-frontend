{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/PostImageShow.js\";\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport { axiosWithAuth } from '../helpers/index';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\n\nfunction PostImageShow(props) {\n  const [thisImage, setThisimage] = useState(null);\n  let fileRef = imagesRef.child(`${props.post.id}/${props.image.file_name}`);\n  useEffect(() => {\n    // set the file ref and image to null on initial render so it does hold previous data\n    fileRef = null;\n    setThisimage(null);\n    getImg();\n  }, [props.post, props.image, props.postImages]);\n\n  function getImg() {\n    // re-set the file ref to correct values and pull image from firebase\n    fileRef = imagesRef.child(`${props.post.id}/${props.image.file_name}`);\n    fileRef.getMetadata().then(metadata => {\n      fileRef.getDownloadURL().then(url => {\n        setThisimage(url);\n      }).catch(err => {\n        console.error(err);\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function deleteImage() {\n    fileRef.delete().then(() => {\n      axiosWithAuth().delete(`/post/image/${props.image.id}`).then(res => {\n        props.fetchPostImages(props.post.id);\n      }).catch(error => {\n        console.error(error);\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  if (props.isDeleteableOnClick) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"delete\",\n      placement: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"reg-image\",\n      onClick: deleteImage,\n      style: {\n        maxWidth: '100%',\n        maxHeight: '450px',\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\"\n      },\n      src: `${thisImage}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"reg-image\",\n      style: {\n        maxWidth: '100%',\n        height: '300px',\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\"\n      },\n      src: `${thisImage}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n\nexport default PostImageShow;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/PostImageShow.js"],"names":["React","useEffect","useState","imagesRef","axiosWithAuth","Tooltip","HighlightOffIcon","PostImageShow","props","thisImage","setThisimage","fileRef","child","post","id","image","file_name","getImg","postImages","getMetadata","then","metadata","getDownloadURL","url","catch","err","console","error","deleteImage","delete","res","fetchPostImages","isDeleteableOnClick","maxWidth","maxHeight","backgroundSize","backgroundPosition","backgroundRepeat","height"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport { axiosWithAuth } from '../helpers/index';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\n\nfunction PostImageShow(props) {\n\n  const [thisImage, setThisimage] = useState(null)\n\n  let fileRef = imagesRef.child(`${props.post.id}/${props.image.file_name}`);\n\n  useEffect(() => {\n    // set the file ref and image to null on initial render so it does hold previous data\n    fileRef = null\n    setThisimage(null)\n    getImg()\n  }, [props.post,props.image,props.postImages]);\n\n  function getImg() {\n\n    // re-set the file ref to correct values and pull image from firebase\n    fileRef = imagesRef.child(`${props.post.id}/${props.image.file_name}`);\n\n    fileRef.getMetadata().then((metadata) => {\n      fileRef.getDownloadURL().then(url => {\n\n        setThisimage(url)\n\n      })\n        .catch(err => {\n          console.error(err);\n        })\n    }).catch((err) => {\n      console.error(err);\n    });\n  }\n\n  function deleteImage() {\n\n    fileRef.delete().then(() => {\n\n      axiosWithAuth().delete(`/post/image/${props.image.id}`)\n        .then(res => {\n          props.fetchPostImages(props.post.id)\n        })\n        .catch(error => {\n          console.error(error);\n        })\n    })\n      .catch(err => {\n        console.error(err);\n      })\n  }\n  if (props.isDeleteableOnClick) {\n    return (\n      <>\n        {/* {(metadata.contentType === 'application/pdf')? <div id=\"div-pdf\" src={`${thisImage}`}></div> :  <img id=\"reg-image\" height=\"200px\" src={`${thisImage}`}></img>} */}\n        <Tooltip title=\"delete\" placement=\"left\">\n        {/* <div style={{}}>\n        <HighlightOffIcon  style ={{position: 'absolute',bottom: \"80%\",color: 'red',outline: '0',}}/> */}\n          <img id=\"reg-image\" onClick={deleteImage} style={{ maxWidth: '100%', maxHeight: '450px', backgroundSize: \"cover\", backgroundPosition: \"center\", backgroundRepeat: \"no-repeat\" }} src={`${thisImage}`}></img>\n          {/* </div> */}\n        </Tooltip>\n        {/* {props.image.file_name} */}\n\n      </>\n\n    )\n  } else {\n    return (\n      <>\n        {/* {(metadata.contentType === 'application/pdf')? <div id=\"div-pdf\" src={`${thisImage}`}></div> :  <img id=\"reg-image\" height=\"200px\" src={`${thisImage}`}></img>} */}\n\n        <img id=\"reg-image\" style={{ maxWidth: '100%', height: '300px', backgroundSize: \"cover\", backgroundPosition: \"center\", backgroundRepeat: \"no-repeat\" }} src={`${thisImage}`}></img>\n        {/* {props.image.file_name} */}\n\n      </>\n    )\n  }\n\n}\n\n\nexport default PostImageShow;\n"]},"metadata":{},"sourceType":"module"}