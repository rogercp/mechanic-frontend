{"ast":null,"code":"import _defineProperty from \"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_POST_START, ADD_POST_SUCCESS, ADD_POST_FAILURE, FETCH_POST_START, FETCH_POST_SUCCESS, FETCH_POST_FAILURE, FETCH_FILTEREDPOST_START, FETCH_FILTEREDPOST_SUCCESS, FETCH_FILTEREDPOST_FAILURE, TOGGLE_SEARCH_TO_TRUE, TOGGLE_SEARCH_TO_FALSE } from '../actions/postActions';\nconst initialState = {\n  addingPost: false,\n  posts: [],\n  filteredPosts: [],\n  searchToggle: false,\n  currentPost: {}\n};\n\nconst postReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_SUCCESS:\n      return _objectSpread({}, state, {\n        currentPost: action.payload\n      });\n\n    case FETCH_POST_SUCCESS:\n      return _objectSpread({}, state, {\n        posts: action.payload\n      });\n\n    case FETCH_FILTEREDPOST_SUCCESS:\n      return _objectSpread({}, state, {\n        filteredPosts: action.payload\n      });\n\n    case TOGGLE_SEARCH_TO_TRUE:\n      return _objectSpread({}, state, {\n        searchToggle: true\n      });\n\n    case TOGGLE_SEARCH_TO_FALSE:\n      return _objectSpread({}, state, {\n        searchToggle: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/store/reducers/postReducer.js"],"names":["ADD_POST_START","ADD_POST_SUCCESS","ADD_POST_FAILURE","FETCH_POST_START","FETCH_POST_SUCCESS","FETCH_POST_FAILURE","FETCH_FILTEREDPOST_START","FETCH_FILTEREDPOST_SUCCESS","FETCH_FILTEREDPOST_FAILURE","TOGGLE_SEARCH_TO_TRUE","TOGGLE_SEARCH_TO_FALSE","initialState","addingPost","posts","filteredPosts","searchToggle","currentPost","postReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SACAA,cADA,EAECC,gBAFD,EAGCC,gBAHD,EAICC,gBAJD,EAKCC,kBALD,EAMCC,kBAND,EAOCC,wBAPD,EAQAC,0BARA,EASAC,0BATA,EAUAC,qBAVA,EAWAC,sBAXA,QAYM,wBAZN;AAcA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAC,KADM;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,aAAa,EAAC,EAHG;AAIjBC,EAAAA,YAAY,EAAC,KAJI;AAKjBC,EAAAA,WAAW,EAAC;AALK,CAArB;;AAUA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAElD,UAAQA,MAAM,CAACC,IAAf;AAGE,SAAMnB,gBAAN;AACE,+BACKiB,KADL;AAEEF,QAAAA,WAAW,EAAEG,MAAM,CAACE;AAFtB;;AAIA,SAAKjB,kBAAL;AACA,+BACKc,KADL;AAEEL,QAAAA,KAAK,EAAEM,MAAM,CAACE;AAFhB;;AAIA,SAAKd,0BAAL;AACE,+BACKW,KADL;AAEEJ,QAAAA,aAAa,EAAEK,MAAM,CAACE;AAFxB;;AAIF,SAAKZ,qBAAL;AACE,+BACKS,KADL;AAEEH,QAAAA,YAAY,EAAC;AAFf;;AAKF,SAAKL,sBAAL;AACE,+BACKQ,KADL;AAEEH,QAAAA,YAAY,EAAC;AAFf;;AAKF;AACA,aAAOG,KAAP;AA/BJ;AAkCD,CApCH;;AAsCE,eAAeD,WAAf","sourcesContent":["import {\nADD_POST_START ,\n ADD_POST_SUCCESS,\n ADD_POST_FAILURE,\n FETCH_POST_START,\n FETCH_POST_SUCCESS,\n FETCH_POST_FAILURE,\n FETCH_FILTEREDPOST_START,\nFETCH_FILTEREDPOST_SUCCESS,\nFETCH_FILTEREDPOST_FAILURE,\nTOGGLE_SEARCH_TO_TRUE,\nTOGGLE_SEARCH_TO_FALSE\n}from '../actions/postActions';\n\nconst initialState = {\n    addingPost:false,\n    posts: [],\n    filteredPosts:[],\n    searchToggle:false,\n    currentPost:{}\n\n}\n\n\nconst postReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n     \n\n      case  ADD_POST_SUCCESS:\n        return {\n          ...state,\n          currentPost: action.payload\n        };\n        case FETCH_POST_SUCCESS:\n        return {\n          ...state,\n          posts: action.payload\n        };\n        case FETCH_FILTEREDPOST_SUCCESS:\n          return {\n            ...state,\n            filteredPosts: action.payload\n          };\n        case TOGGLE_SEARCH_TO_TRUE:\n          return {\n            ...state,\n            searchToggle:true\n          }\n       \n        case TOGGLE_SEARCH_TO_FALSE:\n          return {\n            ...state,\n            searchToggle:false\n          }\n         \n        default: \n        return state \n    }\n\n  };\n\n  export default postReducer;"]},"metadata":{},"sourceType":"module"}