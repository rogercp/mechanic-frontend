{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/CarImgUpload.js\";\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport axiosWithAuth from '../helpers/axiosWithAuth';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CarImgShow from './CarImgShow';\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\nimport ImageCarousel from './ImageCarousel';\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction CarImgUpload(props) {\n  const classes = useStyles();\n  const [carImages, setCarImages] = useState([]);\n  const [file, setFile] = useState({}); // loading \n\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    fetchCarImages();\n  }, []);\n\n  async function fetchCarImages() {\n    let images = await axiosWithAuth().get(`/cars/${props.car.id}/images`);\n    setCarImages(images.data);\n    return images;\n  }\n\n  function handleInputChanges(e) {\n    e.preventDefault();\n    const file = e.target.files[0];\n\n    if (!file) {\n      return;\n    }\n\n    if (file && file.size > 1e8) {\n      alert(\"File is too large. Maximum limit is 100MB.\");\n      e.target.value = '';\n    } else {\n      setFile(file);\n    }\n  }\n\n  function handleSubmitUploader(e) {\n    setIsLoading(true);\n    e.preventDefault(); // Create file ref for firebase\n\n    const fileRef = imagesRef.child(`${props.car.id}/${file.name}`); // Upload file to google\n\n    fileRef.put(file).then(snapshot => {\n      // send reference to backend\n      axiosWithAuth().post(`/cars/${props.car.id}/images`, {\n        file_name: file.name\n      }).then(res => {\n        setIsLoading(false);\n        fetchCarImages();\n      }).catch(error => {\n        console.error(error);\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  if (props.isForFrontCardView && props.isCarCardCarousel) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, carImages.length > 0 ? /*#__PURE__*/React.createElement(ImageCarousel, {\n      car: props.car,\n      carImages: carImages,\n      isCarImage: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DriveEtaIcon, {\n      style: {\n        fontSize: \"200px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ImageCarousel, {\n      style: {\n        backgroundColor: \"red\",\n        maxWidth: \"100px\"\n      },\n      isImageDelShowForCars: true,\n      carImages: carImages,\n      car: props.car,\n      fetchCarImages: fetchCarImages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"200px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, props.isForm ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmitUploader,\n      style: {\n        display: 'flex',\n        flexDirection: \"column\",\n        maxWidth: \"200px\",\n        justifyContent: \"Center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n      class: \"spinner-border\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 26\n      }\n    }, \"Loading...\")) : null, /*#__PURE__*/React.createElement(\"input\", {\n      required: true,\n      id: \"uploader\",\n      type: \"file\",\n      accept: \"image/*,.pdf,.doc\",\n      onChange: handleInputChanges,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      name: \"car_type\",\n      color: \"default\",\n      className: classes.button,\n      startIcon: /*#__PURE__*/React.createElement(CloudUploadIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 44\n        }\n      }),\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }, \"Upload\"))) : null));\n  }\n}\n\nexport default CarImgUpload;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/CarImgUpload.js"],"names":["React","useEffect","useState","imagesRef","axiosWithAuth","Button","makeStyles","CloudUploadIcon","CarImgShow","DriveEtaIcon","ImageCarousel","useStyles","theme","button","margin","spacing","CarImgUpload","props","classes","carImages","setCarImages","file","setFile","isLoading","setIsLoading","fetchCarImages","images","get","car","id","data","handleInputChanges","e","preventDefault","target","files","size","alert","value","handleSubmitUploader","fileRef","child","name","put","then","snapshot","post","file_name","res","catch","error","console","err","isForFrontCardView","isCarCardCarousel","length","fontSize","backgroundColor","maxWidth","height","isForm","display","flexDirection","justifyContent"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport axiosWithAuth from '../helpers/axiosWithAuth';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CarImgShow from './CarImgShow';\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\nimport ImageCarousel from './ImageCarousel'\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        margin: theme.spacing(1),\n    },\n}));\n\n\nfunction CarImgUpload(props) {\n\n    const classes = useStyles();\n    const [carImages, setCarImages] = useState([]);\n    const [file, setFile] = useState({});\n\n    // loading \n    const [isLoading,setIsLoading] = useState(false)\n\n    useEffect(() => {\n\n        fetchCarImages();\n \n    }, []);\n\n\n    async function fetchCarImages() {\n        let images = await axiosWithAuth().get(`/cars/${props.car.id}/images`)\n        setCarImages(images.data);\n        return images;\n    }\n\n\n\n    function handleInputChanges(e) {\n        e.preventDefault();\n        const file = e.target.files[0]\n        if (!file) {\n            return;\n        }\n        if (file && file.size > 1e8) {\n            alert(\"File is too large. Maximum limit is 100MB.\")\n            e.target.value = ''\n        } else {\n            setFile(file);\n        }\n    }\n\n    function handleSubmitUploader(e) {\n        setIsLoading(true)\n        e.preventDefault()\n        // Create file ref for firebase\n        const fileRef = imagesRef.child(`${props.car.id}/${file.name}`)\n        // Upload file to google\n        fileRef.put(file).then((snapshot) => {\n            // send reference to backend\n            axiosWithAuth().post(`/cars/${props.car.id}/images`, { file_name: file.name })\n                .then(res => { \n                    setIsLoading(false) \n                    fetchCarImages();\n                })\n                .catch(error => {\n                    console.error(error);\n                })\n        }).catch(err => {\n            console.error(err)\n        });\n    }\n\n\n\n\n    if (props.isForFrontCardView && props.isCarCardCarousel) {\n        return (\n\n\n            <>\n            {carImages.length > 0 ?\n                <ImageCarousel  car={props.car} carImages={carImages}  isCarImage={true}/>\n            :\n            \n            <>\n                \n                <DriveEtaIcon style={{ fontSize: \"200px\" }} />\n\n                </>\n            }\n\n            {/* {carImages.length > 0 ?\n                <>\n                {carImages.map((image, index) => {\n                    return <CarImgShow key={index} car={props.car} image={image} />\n                })}\n                </>\n                :\n                <>\n                \n                <DriveEtaIcon style={{ fontSize: \"200px\" }} />\n\n                </>\n            } */}\n            \n                \n         </>   \n        )\n    }\n    \n    else {\n        return (\n            <>\n\n            <ImageCarousel\n                    style={{ backgroundColor: \"red\", maxWidth: \"100px\" }}\n                    isImageDelShowForCars={true}\n                    carImages={carImages}\n                    car={props.car}\n                    fetchCarImages={fetchCarImages}\n                />\n\n                <div style={{ height: \"200px\" }}>\n                    \n\n                    {props.isForm ? <div>\n                        <form onSubmit={(handleSubmitUploader)} style={{ display: 'flex', flexDirection: \"column\", maxWidth: \"200px\", justifyContent: \"Center\" }}>\n                    \n                        {isLoading ? \n                         <div class=\"spinner-border\" role=\"status\">\n                         <span class=\"sr-only\">Loading...</span>\n                         </div>\n                            :null}\n                       \n                        <input required id=\"uploader\" type=\"file\" accept=\"image/*,.pdf,.doc\" onChange={handleInputChanges}></input>\n                            <Button\n                                variant=\"contained\"\n                                name=\"car_type\"\n                                color=\"default\"\n                                className={classes.button}\n                                startIcon={<CloudUploadIcon />}\n                                type=\"submit\"\n                            >\n                                Upload\n            </Button>\n                        </form>\n                    </div> : null}\n\n\n                </div>\n\n\n\n\n\n            </>\n        )\n    }\n\n\n\n}\n\n\n\nexport default CarImgUpload;\n"]},"metadata":{},"sourceType":"module"}