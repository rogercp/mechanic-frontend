{"ast":null,"code":"import _slicedToArray from \"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/Question.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Route, withRouter } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport EditIcon from '@material-ui/icons/Add';\nimport PostAddModal from './PostAddModal';\nimport { browserHistory } from 'react-router';\nimport Tooltip from '@material-ui/core/Tooltip';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n    position: 'relative',\n    minHeight: 200\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  },\n  margin: {\n    margin: theme.spacing(1),\n    boxShadow: \"0 16px 19px rgba(0,0,0,0.2), 0 15px 15px rgba(0,0,0,0.2)\",\n    '&:hover': {\n      boxShadow: \"0 2px 4px rgba(0,0,0,0.25), 0 2px 2px rgba(0,0,0,0.22)\"\n    }\n  }\n}));\n\nfunction Question(props) {\n  const classes = useStyles();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        cars = _useState2[0],\n        setCars = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        open = _useState4[0],\n        setOpen = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        errorOpen = _useState6[0],\n        setErrorOpen = _useState6[1];\n  /**\n   * Modal Methods\n   */\n\n\n  function handleOpen() {\n    if (localStorage.getItem(\"token\") === null) {\n      props.history.push('/login');\n    }\n\n    setOpen(true);\n  }\n\n  function handleErrorOpen() {\n    setErrorOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleErrorClose() {\n    setErrorOpen(false);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Tooltip, {\n    title: \"Post Comment/Questions\",\n    placement: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Fab, {\n    color: \"none\",\n    \"aria-label\": \"add\",\n    style: {\n      color: \"darkcyan\",\n      outline: '0'\n    },\n    className: classes.margin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(EditIcon, {\n    onClick: handleOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }))), React.createElement(PostAddModal, {\n    open: open,\n    onClose: handleClose,\n    titleText: \"Post Form\",\n    bodyText: \"\",\n    redirect: \"/mycars\",\n    redirectText: \"cars\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }));\n}\n\n;\nexport default withRouter(Question);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/Question.js"],"names":["React","useState","useEffect","makeStyles","Route","withRouter","TextField","Fab","EditIcon","PostAddModal","browserHistory","Tooltip","useStyles","theme","root","backgroundColor","palette","background","paper","width","position","minHeight","fab","bottom","spacing","right","margin","boxShadow","Question","props","classes","cars","setCars","open","setOpen","errorOpen","setErrorOpen","handleOpen","localStorage","getItem","history","push","handleErrorOpen","handleClose","handleErrorClose","color","outline"],"mappings":"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","sourcesContent":["\n\nimport React, { useState, useEffect} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Route, withRouter} from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport EditIcon from '@material-ui/icons/Add';\nimport PostAddModal from './PostAddModal';\nimport { browserHistory } from 'react-router';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n        position: 'relative',\n        minHeight: 200,\n      },\n      fab: {\n        position: 'absolute',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n      }, \n      margin: {\n        margin: theme.spacing(1),\n        boxShadow: \"0 16px 19px rgba(0,0,0,0.2), 0 15px 15px rgba(0,0,0,0.2)\",\n        '&:hover':{\n            boxShadow: \"0 2px 4px rgba(0,0,0,0.25), 0 2px 2px rgba(0,0,0,0.22)\"\n          },\n      },\n     \n  }));\n\n\n\n\nfunction Question(props) {\n\n const classes = useStyles();\n\n  const [cars,setCars] = useState([])\n  const [open, setOpen] = useState(false);\n  const [errorOpen, setErrorOpen] = useState(false);\n\n  /**\n   * Modal Methods\n   */\n\n\n\n  function handleOpen() {\n   \n    if(localStorage.getItem(\"token\") === null){\n      props.history.push('/login')\n    }\n      setOpen(true);\n     \n  }\n      \n\n  function handleErrorOpen() {\n      setErrorOpen(true);\n  }\n  function handleClose() {\n      setOpen(false);\n  }\n  function handleErrorClose() {\n      setErrorOpen(false);\n  }\n  \n\n    return (\n      <>\n\n  <Tooltip title=\"Post Comment/Questions\" placement=\"right\">\n  <Fab color=\"none\" aria-label=\"add\" style={{color:\"darkcyan\",  outline:'0'}} className={classes.margin}>\n            <EditIcon \n            onClick={handleOpen} \n            />\n            \n          </Fab>\n          </Tooltip>\n\n        \n   \n   \n  <PostAddModal\n          open={open}\n          onClose={handleClose}\n          titleText={\"Post Form\"}\n          bodyText={\"\"}\n          redirect={\"/mycars\"}\n          redirectText={\"cars\"}\n          /> \n        \n\n      </>\n    );\n    };\n\n\n\nexport default withRouter(Question);\n"]},"metadata":{},"sourceType":"module"}