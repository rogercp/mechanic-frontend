{"ast":null,"code":"import _slicedToArray from \"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/CarFixImgUpload.js\";\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport axiosWithAuth from '../helpers/axiosWithAuth';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CarImgShow from './CarImgShow';\nimport CarImageFixShow from './CarImageFixShow';\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\nimport ImageCarousel from './ImageCarousel';\nimport DescriptionIcon from '@material-ui/icons/Description';\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction CarFixImgUpload(props) {\n  const classes = useStyles();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        carFixImages = _useState2[0],\n        setCarFixImages = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        file = _useState4[0],\n        setFile = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        fullopen = _useState6[0],\n        setFullOpen = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        errorOpen = _useState8[0],\n        setErrorOpen = _useState8[1];\n\n  const handlefullOpen = () => {\n    setFullOpen(true);\n  };\n\n  const handlefullClose = () => {\n    setFullOpen(false);\n  };\n\n  function handleErrorClose() {\n    setErrorOpen(false);\n  }\n\n  function handleErrorOpen() {\n    setErrorOpen(true);\n  }\n\n  useEffect(() => {\n    fetchFixDocuments();\n  }, [file]);\n\n  async function fetchFixDocuments() {\n    let fixImages = await axiosWithAuth().get(\"/car_fix/\".concat(props.carFix.id, \"/car_fix_images\"));\n    setCarFixImages(fixImages.data);\n    return fixImages;\n  }\n\n  function handleInputChanges(e) {\n    e.preventDefault();\n    const file = e.target.files[0];\n\n    if (!file) {\n      return;\n    }\n\n    if (file && file.size > 1e8) {\n      alert(\"File is too large. Maximum limit is 100MB.\");\n      e.target.value = '';\n    } else {\n      setFile(file);\n    }\n  }\n\n  function handleSubmitUploaderFixDocuments(e) {\n    e.preventDefault(); // Create file ref (Example: /documents/:car_id/:file_name)\n\n    const fileRef = imagesRef.child(\"\".concat(props.carFix.id, \"/\").concat(file.name)); // Upload file\n\n    fileRef.put(file).then(snapshot => {\n      // console.log('Upload success!', snapshot.constructor, snapshot);\n      axiosWithAuth().post(\"/car_fix/\".concat(props.carFix.id, \"/car_fix_images\"), {\n        file_name: file.name\n      }).then(res => {\n        fetchFixDocuments();\n        window.location.reload();\n      }).catch(error => {\n        console.error(error);\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  if (carFixImages.length > 0) {\n    return React.createElement(React.Fragment, null, React.createElement(ImageCarousel, {\n      open: fullopen,\n      handleClose: handlefullClose,\n      onClose: handlefullClose,\n      carFixImages: carFixImages,\n      carFix: props.carFix,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        height: \"200px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: \"column\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: handleSubmitUploaderFixDocuments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      required: true,\n      id: \"uploader\",\n      type: \"file\",\n      accept: \"image/*,.pdf,.doc\",\n      onChange: handleInputChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      name: \"car_type\",\n      color: \"default\",\n      className: classes.button,\n      startIcon: React.createElement(CloudUploadIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Upload\")))));\n  } else {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      style: {\n        height: \"200px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, props.carFix ? React.createElement(DriveEtaIcon, {\n      style: {\n        fontSize: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: \"column\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: handleSubmitUploaderFixDocuments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      required: true,\n      id: \"uploader\",\n      type: \"file\",\n      accept: \"image/*,.pdf,.doc\",\n      onChange: handleInputChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      name: \"car_type\",\n      color: \"default\",\n      className: classes.button,\n      startIcon: React.createElement(CloudUploadIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Upload\")))));\n  }\n}\n\nexport default CarFixImgUpload;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/CarFixImgUpload.js"],"names":["React","useEffect","useState","imagesRef","axiosWithAuth","Button","makeStyles","CloudUploadIcon","CarImgShow","CarImageFixShow","DriveEtaIcon","ImageCarousel","DescriptionIcon","useStyles","theme","button","margin","spacing","CarFixImgUpload","props","classes","carFixImages","setCarFixImages","file","setFile","fullopen","setFullOpen","errorOpen","setErrorOpen","handlefullOpen","handlefullClose","handleErrorClose","handleErrorOpen","fetchFixDocuments","fixImages","get","carFix","id","data","handleInputChanges","e","preventDefault","target","files","size","alert","value","handleSubmitUploaderFixDocuments","fileRef","child","name","put","then","snapshot","post","file_name","res","window","location","reload","catch","error","console","err","length","height","display","flexDirection","fontSize"],"mappings":"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","sourcesContent":["\n\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport axiosWithAuth from '../helpers/axiosWithAuth';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CarImgShow from './CarImgShow';\nimport CarImageFixShow from './CarImageFixShow';\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\nimport ImageCarousel from './ImageCarousel';\nimport DescriptionIcon from '@material-ui/icons/Description';\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        margin: theme.spacing(1),\n    },\n}));\n\nfunction CarFixImgUpload(props) {\n\n\n    const classes = useStyles();\n    const [carFixImages, setCarFixImages] = useState([]);\n    const [file, setFile] = useState({});\n\n    const [fullopen, setFullOpen] = useState(true);\n    const [errorOpen, setErrorOpen] = useState(false);\n\n\n    const handlefullOpen = () => {\n        setFullOpen(true);\n    };\n    const handlefullClose = () => {\n        setFullOpen(false);\n    };\n\n    function handleErrorClose() {\n        setErrorOpen(false);\n    }\n\n    function handleErrorOpen() {\n        setErrorOpen(true);\n    }\n\n\n    useEffect(() => {\n\n        fetchFixDocuments();\n\n    }, [file]);\n\n    async function fetchFixDocuments() {\n        let fixImages = await axiosWithAuth().get(`/car_fix/${props.carFix.id}/car_fix_images`)\n        setCarFixImages(fixImages.data);\n        return fixImages;\n    }\n\n    function handleInputChanges(e) {\n        e.preventDefault();\n        const file = e.target.files[0]\n        if (!file) {\n            return;\n        }\n        if (file && file.size > 1e8) {\n            alert(\"File is too large. Maximum limit is 100MB.\")\n            e.target.value = ''\n        } else {\n            setFile(file);\n        }\n    }\n\n\n    function handleSubmitUploaderFixDocuments(e) {\n        e.preventDefault()\n        // Create file ref (Example: /documents/:car_id/:file_name)\n        const fileRef = imagesRef.child(`${props.carFix.id}/${file.name}`)\n        // Upload file\n        fileRef.put(file).then((snapshot) => {\n            // console.log('Upload success!', snapshot.constructor, snapshot);\n            axiosWithAuth().post(`/car_fix/${props.carFix.id}/car_fix_images`, { file_name: file.name })\n                .then(res => {\n                    fetchFixDocuments();\n                    window.location.reload();\n                })\n                .catch(error => {\n                    console.error(error);\n                })\n        }).catch(err => {\n            console.error(err)\n        });\n    }\n\n\n\n    if (carFixImages.length > 0) {\n        return (\n            <>\n{/* \n                <Button\n                    style={{ color: \"darkcyan\", outline: '0' }}\n                    onClick={handlefullOpen}\n                >\n\n                    <DescriptionIcon />\n                </Button> */}\n\n                <ImageCarousel\n                    open={fullopen}\n                    handleClose={handlefullClose}\n                    onClose={handlefullClose}\n                    carFixImages={carFixImages}\n                    carFix={props.carFix}\n                />\n\n                <div style={{ height: \"200px\" }}>\n                    <div style={{ display: 'flex', flexDirection: \"column\" }}>\n                        <form onSubmit={handleSubmitUploaderFixDocuments}>\n                            <input required id=\"uploader\" type=\"file\" accept=\"image/*,.pdf,.doc\" onChange={handleInputChanges}></input>\n                            <Button\n                                variant=\"contained\"\n                                name=\"car_type\"\n                                color=\"default\"\n                                className={classes.button}\n                                startIcon={<CloudUploadIcon />}\n                                type=\"submit\"\n                            >\n                                Upload\n                </Button>\n                        </form>\n                    </div>\n                </div>\n\n            </>\n        )\n    } else {\n        return (\n            <>\n                <div style={{ height: \"200px\" }}>\n                    {(props.carFix ? <DriveEtaIcon style={{ fontSize: \"100px\" }} /> : null)}\n                    <div style={{ display: 'flex', flexDirection: \"column\" }}>\n                        <form onSubmit={handleSubmitUploaderFixDocuments}>\n                            <input required id=\"uploader\" type=\"file\" accept=\"image/*,.pdf,.doc\" onChange={handleInputChanges}></input>\n                            <Button\n                                variant=\"contained\"\n                                name=\"car_type\"\n                                color=\"default\"\n                                className={classes.button}\n                                startIcon={<CloudUploadIcon />}\n                                type=\"submit\"\n                            >\n                                Upload\n                </Button>\n                        </form>\n                    </div>\n                </div>\n\n            </>\n        )\n    }\n\n\n\n}\n\n\n\nexport default CarFixImgUpload;\n"]},"metadata":{},"sourceType":"module"}