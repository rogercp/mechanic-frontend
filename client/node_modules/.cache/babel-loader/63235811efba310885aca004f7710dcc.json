{"ast":null,"code":"import _slicedToArray from \"/Users/roger/Projects/mechanic-frontend/mechanic/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/mechanic/src/components/CarImgShow.js\";\n\n/**\n * Dependencies\n */\nimport React, { useEffect, useState } from 'react';\nimport { mixpanel } from \"../helpers/index\";\nimport { imagesRef } from '../helpers/firebase';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axiosWithAuth from '../helpers/axiosWithAuth';\n/**\n * Define component\n */\n\nfunction CarImgShow(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        thisImage = _useState2[0],\n        setThisimage = _useState2[1];\n\n  const fileRef = imagesRef.child(\"\".concat(props.car.id, \"/\").concat(props.image.file_name));\n  useEffect(() => {\n    handleClick();\n  }, []);\n\n  function handleClick() {\n    fileRef.getMetadata().then(metadata => {\n      fileRef.getDownloadURL().then(url => {\n        setThisimage(url); // let img = document.getElementById('document-image');\n        // if (metadata.contentType === 'application/pdf') {\n        //     img.src = '';\n        //     // TODO handle PDFs\n        //   } else {\n        //     img.src = url;\n        //   }\n      }).catch(err => {\n        console.error(err);\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"img\", {\n    id: \"reg-image\",\n    height: \"200px\",\n    style: {\n      maxHeight: \"200px\",\n      maxWidth: \"\"\n    },\n    src: \"\".concat(thisImage),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), props.image.file_name);\n}\n/**\n * Export component\n */\n\n\nexport default CarImgShow;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/mechanic/src/components/CarImgShow.js"],"names":["React","useEffect","useState","mixpanel","imagesRef","Typography","Button","axiosWithAuth","CarImgShow","props","thisImage","setThisimage","fileRef","child","car","id","image","file_name","handleClick","getMetadata","then","metadata","getDownloadURL","url","catch","err","console","error","maxHeight","maxWidth"],"mappings":";;;AAAA;;;AAIA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AAGA;;;;AAIA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA,oBAESP,QAAQ,CAAC,EAAD,CAFjB;AAAA;AAAA,QAEhBQ,SAFgB;AAAA,QAENC,YAFM;;AAIvB,QAAMC,OAAO,GAAGR,SAAS,CAACS,KAAV,WAAmBJ,KAAK,CAACK,GAAN,CAAUC,EAA7B,cAAmCN,KAAK,CAACO,KAAN,CAAYC,SAA/C,EAAhB;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASA,WAAT,GAAuB;AACnBN,IAAAA,OAAO,CAACO,WAAR,GAAsBC,IAAtB,CAA4BC,QAAD,IAAc;AACvCT,MAAAA,OAAO,CAACU,cAAR,GAAyBF,IAAzB,CAA8BG,GAAG,IAAI;AAEnCZ,QAAAA,YAAY,CAACY,GAAD,CAAZ,CAFmC,CAInC;AACA;AACA;AACA;AACA;AACA;AACA;AACD,OAXD,EAYCC,KAZD,CAYOC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,OAdD;AAeD,KAhBD,EAgBGD,KAhBH,CAgBUC,GAAD,IAAS;AAChBC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,KAlBD;AAmBH;;AAED,SACI,0CAEI;AAAK,IAAA,EAAE,EAAC,WAAR;AAAoB,IAAA,MAAM,EAAC,OAA3B;AAAmC,IAAA,KAAK,EAAE;AAACG,MAAAA,SAAS,EAAC,OAAX;AAAmBC,MAAAA,QAAQ,EAAC;AAA5B,KAA1C;AAA2E,IAAA,GAAG,YAAKnB,SAAL,CAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKD,KAAK,CAACO,KAAN,CAAYC,SAHjB,CADJ;AAQH;AAED;;;;;AAIA,eAAeT,UAAf","sourcesContent":["/**\n * Dependencies\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { mixpanel } from \"../helpers/index\";\nimport { imagesRef } from '../helpers/firebase';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axiosWithAuth from '../helpers/axiosWithAuth';\n\n\n/**\n * Define component\n */\n\nfunction CarImgShow(props) {\n\n    const [thisImage,setThisimage]= useState('')\n    \n    const fileRef = imagesRef.child(`${props.car.id}/${props.image.file_name}`);\n\n    useEffect(() => {\n        handleClick()\n    }, []);\n\n    function handleClick() {\n        fileRef.getMetadata().then((metadata) => {\n          fileRef.getDownloadURL().then(url => {\n\n            setThisimage(url)\n\n            // let img = document.getElementById('document-image');\n            // if (metadata.contentType === 'application/pdf') {\n            //     img.src = '';\n            //     // TODO handle PDFs\n            //   } else {\n            //     img.src = url;\n            //   }\n          })\n          .catch(err => {\n            console.error(err);\n          })\n        }).catch((err) => {\n          console.error(err);\n        });\n    }\n\n    return(\n        <>\n            {/* {(metadata.contentType === 'application/pdf')? <div id=\"div-pdf\" src={`${thisImage}`}></div> :  <img id=\"reg-image\" height=\"200px\" src={`${thisImage}`}></img>} */}\n            <img id=\"reg-image\" height=\"200px\" style={{maxHeight:\"200px\",maxWidth:\"\"}} src={`${thisImage}`}></img>\n            {props.image.file_name}\n\n        </>\n    )\n}\n\n/**\n * Export component\n */\n\nexport default CarImgShow;\n"]},"metadata":{},"sourceType":"module"}