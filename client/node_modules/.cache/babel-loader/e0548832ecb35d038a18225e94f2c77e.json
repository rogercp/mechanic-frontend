{"ast":null,"code":"import _defineProperty from \"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/PostForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { addPost } from \"../store/actions/postActions\";\nimport { fetchPosts } from \"../store/actions/postActions\";\nimport { fetchProfileImage } from \"../store/actions/settingsActions\";\nimport moment from 'moment';\nimport '../styles/navbar.scss';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: 200\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction PostForm(props) {\n  const time = moment().format(\"MMMM Do YYYY, h:mma\");\n  const userId = localStorage.getItem('id');\n  const username = localStorage.getItem('username');\n  const classes = useStyles();\n\n  const _React$useState = React.useState({\n    displayName: username,\n    user_id: userId,\n    category: '',\n    post_text: '',\n    post_date: time\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const handleChange = name => event => {\n    setState(_objectSpread({}, state, {\n      [name]: event.target.value\n    }));\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    props.addPost(state);\n    props.fetchPosts();\n    props.onClose();\n  };\n\n  useEffect(() => {\n    props.fetchProfileImage(userId);\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(FormControl, {\n    className: classes.formControl,\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: onSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Category\"), React.createElement(Select, {\n    native: true,\n    name: \"category\",\n    className: classes.textField,\n    value: state.category,\n    onChange: handleChange('category'),\n    inputProps: {\n      name: 'type',\n      id: 'outlined-type-native-simple'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"Sedan\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Maintence\"), React.createElement(\"option\", {\n    value: \"Coupe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Mods\"), React.createElement(\"option\", {\n    value: \"Van\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Repairs\"), React.createElement(\"option\", {\n    value: \"SUV\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Tips\"), React.createElement(\"option\", {\n    value: \"Truck\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Exotics\"), React.createElement(\"option\", {\n    value: \"Wagon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"German\"), React.createElement(\"p\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Maintence\"), React.createElement(\"p\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Mods\"), React.createElement(\"p\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Repairs\"), React.createElement(\"p\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Tips\"), React.createElement(\"p\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Exotics\"), React.createElement(\"p\", {\n    className: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"German\")), React.createElement(TextField, {\n    id: \"outlined-multiline-static\",\n    multiline: true,\n    name: \"post_text\",\n    value: state.post_text,\n    onChange: handleChange('post_text') //   rows=\"4\"\n    ,\n    placeholder: \"Description\",\n    className: classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    className: classes.button,\n    onClick: onSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Enter\")));\n}\n\n;\n\nconst mapStateToProps = state => ({\n  userImage: state.setting.userImage\n});\n\nexport default connect(mapStateToProps, {\n  addPost,\n  fetchPosts,\n  fetchProfileImage\n})(PostForm);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/PostForm.js"],"names":["React","useEffect","makeStyles","TextField","InputLabel","FormControl","Select","Button","connect","addPost","fetchPosts","fetchProfileImage","moment","useStyles","theme","formControl","margin","spacing","width","selectEmpty","marginTop","container","display","flexWrap","textField","marginLeft","marginRight","button","PostForm","props","time","format","userId","localStorage","getItem","username","classes","useState","displayName","user_id","category","post_text","post_date","state","setState","handleChange","name","event","target","value","onSubmitHandler","e","preventDefault","onClose","alignItems","justifyContent","id","mapStateToProps","userImage","setting"],"mappings":"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","sourcesContent":["\nimport React,{useEffect}from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { addPost } from \"../store/actions/postActions\";\nimport { fetchPosts } from \"../store/actions/postActions\";\nimport { fetchProfileImage } from \"../store/actions/settingsActions\";\nimport moment from 'moment'\n\nimport  '../styles/navbar.scss';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: 200,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction PostForm(props) {\n\n  const time = moment().format(\"MMMM Do YYYY, h:mma\")\n\n  const userId = localStorage.getItem('id');\n  const username = localStorage.getItem('username');  \n  \n\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    displayName:username,\n    user_id: userId,\n    category : '',\n    post_text:'',\n    post_date: time,\n  });\n\n\n\n  const handleChange = name => event => {\n    setState({\n      ...state,\n      [name]: event.target.value,\n    });\n  };\n\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    props.addPost(state);\n    props.fetchPosts();\n    props.onClose();\n\n};\n     \nuseEffect(() => {\n\n  props.fetchProfileImage(userId)\n\n}, []);\n\n\n    return (\n      <>\n      <FormControl className={classes.formControl} style={{display:'flex',alignItems:'center',justifyContent:'center'}} noValidate autoComplete=\"off\" onSubmit={onSubmitHandler}>\n\n        <InputLabel id=\"demo-simple-select-label\">Category</InputLabel>\n        <Select\n          native\n          name=\"category\"\n          className={classes.textField}\n          value={state.category}\n          onChange={handleChange('category')}\n          inputProps={{\n            name: 'type',\n            id: 'outlined-type-native-simple',\n          }}\n        >\n          <option value=\"\" />\n          <option value={\"Sedan\"}>Maintence</option>\n          <option value={\"Coupe\"}>Mods</option>\n          <option value={\"Van\"}>Repairs</option>\n          <option value={\"SUV\"}>Tips</option>\n          <option value={\"Truck\"}>Exotics</option>\n          <option value={\"Wagon\"}>German</option>\n          \n\n\n\n          <p className=\"item\">Maintence</p>\n            <p className=\"item\">Mods</p>\n            <p className=\"item\">Repairs</p>\n            <p className=\"item\">Tips</p>\n            <p className=\"item\">Exotics</p>\n            <p className=\"item\">German</p>\n\n        </Select>\n     \n        <TextField\n          id=\"outlined-multiline-static\"\n          multiline\n          name=\"post_text\"\n          value={state.post_text}\n          onChange={handleChange('post_text')}\n        //   rows=\"4\"\n          placeholder=\"Description\"\n          className={classes.textField}\n          margin=\"normal\"\n          variant=\"outlined\"\n        />\n       \n        <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n        className={classes.button}\n        onClick={onSubmitHandler}\n        >\n        Enter\n        </Button>\n\n </FormControl>\n      </>\n    );\n};\n\n\nconst mapStateToProps = ( state ) => ({\n  userImage : state.setting.userImage\n\n});\n\nexport default connect(\n  mapStateToProps,\n  { addPost,fetchPosts,fetchProfileImage }\n)(PostForm);\n\n"]},"metadata":{},"sourceType":"module"}