{"ast":null,"code":"import _slicedToArray from \"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/ProfileImageShow.js\";\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport { Image } from 'react-bootstrap';\nimport { fetchProfileImage } from \"../store/actions/settingsActions\";\nimport { connect } from 'react-redux';\nimport { axiosWithAuth } from '../helpers/index';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nfunction ProfileImageShow(props) {\n  const classes = useStyles();\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        thisImage = _useState2[0],\n        setThisimage = _useState2[1];\n\n  const userId = localStorage.getItem('id');\n  var fileRef = null;\n\n  if (props.isPost) {\n    fileRef = imagesRef.child(\"\".concat(props.post.user_id, \"/\").concat(props.post.file_name_profile));\n  } else {\n    fileRef = imagesRef.child(\"\".concat(userId, \"/\").concat(props.image.file_name_profile));\n  }\n\n  useEffect(() => {\n    getImg();\n  }, []);\n\n  function getImg() {\n    fileRef.getMetadata().then(metadata => {\n      fileRef.getDownloadURL().then(url => {\n        setThisimage(url); // let img = document.getElementById('document-image');\n        // if (metadata.contentType === 'application/pdf') {\n        //     img.src = '';\n        //     // TODO handle PDFs\n        //   } else {\n        //     img.src = url;\n        //   }\n      }).catch(err => {\n        console.error(err);\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function deleteImage() {\n    fileRef.delete().then(() => {\n      axiosWithAuth().delete(\"/users/imagee/\".concat(props.image.file_name_profile)).then(res => {\n        props.fetchProfileImage(userId);\n      }).catch(error => {\n        console.error(error);\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  const username = localStorage.getItem(\"username\");\n\n  if (props.isCirclePic) {\n    return React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      alt: \"Remy Sharp\",\n      src: \"\".concat(thisImage),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      st: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        marginLeft: \"5px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, props.isPost ? props.post.user_name : username)));\n  } else {\n    return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n      onClick: deleteImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"del\"), React.createElement(Image, {\n      src: \"holder.js/171x180\",\n      rounded: true,\n      id: \"reg-image\",\n      style: {\n        maxWidth: \"100%\"\n      },\n      src: \"\".concat(thisImage),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }));\n  }\n}\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps, {\n  fetchProfileImage\n})(ProfileImageShow);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/ProfileImageShow.js"],"names":["React","useEffect","useState","imagesRef","Image","fetchProfileImage","connect","axiosWithAuth","Avatar","makeStyles","useStyles","theme","root","display","margin","spacing","ProfileImageShow","props","classes","thisImage","setThisimage","userId","localStorage","getItem","fileRef","isPost","child","post","user_id","file_name_profile","image","getImg","getMetadata","then","metadata","getDownloadURL","url","catch","err","console","error","deleteImage","delete","res","username","isCirclePic","alignItems","justifyContent","marginLeft","user_name","maxWidth","mapStateToProps","state"],"mappings":"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","sourcesContent":["\n\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport { Image } from 'react-bootstrap';\nimport { fetchProfileImage } from \"../store/actions/settingsActions\";\nimport { connect } from 'react-redux';\nimport { axiosWithAuth } from '../helpers/index';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nfunction ProfileImageShow(props) {\n\n    const classes = useStyles();\n\n    const [thisImage,setThisimage]= useState('')\n  \n    const userId = localStorage.getItem('id');\n\n\n  var fileRef = null\n\n  if(props.isPost ){\n    fileRef = imagesRef.child(`${props.post.user_id}/${props.post.file_name_profile}`);\n  }else{\n    fileRef = imagesRef.child(`${userId}/${props.image.file_name_profile}`);\n  }\n    \n\n    useEffect(() => {\n      getImg()\n    }, []);\n       \n      function getImg() {\n        fileRef.getMetadata().then((metadata) => {\n          fileRef.getDownloadURL().then(url => {\n\n            setThisimage(url)\n\n            // let img = document.getElementById('document-image');\n            // if (metadata.contentType === 'application/pdf') {\n            //     img.src = '';\n            //     // TODO handle PDFs\n            //   } else {\n            //     img.src = url;\n            //   }\n          })\n          .catch(err => {\n            console.error(err);\n          })\n        }).catch((err) => {\n          console.error(err);\n        });\n}\n\n\n  function deleteImage(){\n\n    fileRef.delete().then(()=>{\n     \n      axiosWithAuth().delete(`/users/imagee/${props.image.file_name_profile}`)\n      .then(res => {\n        props.fetchProfileImage(userId)       \n       })\n      .catch(error => {\n          console.error(error);\n      })\n    })\n    .catch(err => {\n            console.error(err);\n    })\n}\n\nconst username = localStorage.getItem(\"username\");\n\n  if(props.isCirclePic){\n    return (\n      \n      <div style={{display:\"flex\", alignItems:\"center\",justifyContent:\"center\"}}>\n        <div><Avatar alt=\"Remy Sharp\"  src={`${thisImage}`}  /></div>\n        <div st><p style={{marginLeft:\"5px\"}}>{props.isPost ? props.post.user_name : username}</p>\n</div>\n    \n        </div>\n    )\n  }else{\n    return(\n      <>\n          \n          {/* {(metadata.contentType === 'application/pdf')? <div id=\"div-pdf\" src={`${thisImage}`}></div> :  <img id=\"reg-image\" height=\"200px\" src={`${thisImage}`}></img>} */}\n\n        <button onClick={deleteImage}>del</button>\n          <Image src=\"holder.js/171x180\" rounded id=\"reg-image\"  style={{maxWidth: \"100%\"}} src={`${thisImage}`}/>\n          {/* {props.image.file_name} */}\n\n      </>\n  )\n  }\n\n    \n}\n\n\n\n\nconst mapStateToProps = state => ({\n});\nexport default connect(\n  mapStateToProps,\n  {fetchProfileImage}\n)(ProfileImageShow);"]},"metadata":{},"sourceType":"module"}