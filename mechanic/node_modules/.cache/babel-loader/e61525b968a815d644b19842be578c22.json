{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-front/mechanic-frontend/mechanic/src/routes/helpers/PrivateRoute.js\";\n\n/**\n * Dependencies\n */\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport firebase from 'firebase';\nimport uuid from 'uuid';\nimport axios from 'axios';\n/**\n * Define route component\n */\n\nconst PrivateRoute = ({\n  component: Component,\n  errorBoundary: ErrorBoundary,\n  path,\n  exact\n}) => {\n  firebase.auth().onAuthStateChanged(async user => {\n    console.log(\"auprivaterunhruns\");\n\n    if (user) {\n      let displayName = user.displayName;\n      let email = user.email;\n      let emailVerified = user.emailVerified;\n      let photoURL = user.photoURL;\n      let isAnonymous = user.isAnonymous;\n      let uid = user.uid;\n      let providerData = user.providerData;\n      let token = await user.getIdToken();\n      localStorage.setItem('token', token);\n      axios.post(\"\".concat(process.env.REACT_APP_API_URL, \"/users/auth\"), {\n        user: user,\n        token: token\n      }).then(res => {\n        localStorage.setItem('id', res.data.id);\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {// User is signed out.\n      // ...\n    }\n  });\n\n  if (exact) {\n    return React.createElement(Route, {\n      key: uuid.v4(),\n      exact: true,\n      path: path,\n      render: props => React.createElement(ErrorBoundary, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(Route, {\n      key: uuid.v4(),\n      path: path,\n      render: props => React.createElement(ErrorBoundary, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    });\n  }\n};\n/**\n * Export route component\n */\n\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-front/mechanic-frontend/mechanic/src/routes/helpers/PrivateRoute.js"],"names":["React","Route","firebase","uuid","axios","PrivateRoute","component","Component","errorBoundary","ErrorBoundary","path","exact","auth","onAuthStateChanged","user","console","log","displayName","email","emailVerified","photoURL","isAnonymous","uid","providerData","token","getIdToken","localStorage","setItem","post","process","env","REACT_APP_API_URL","then","res","data","id","catch","err","v4","props"],"mappings":";;AAAA;;;AAIA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;;;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,aAAa,EAAEC,aAAvC;AAAsDC,EAAAA,IAAtD;AAA4DC,EAAAA;AAA5D,CAAD,KAAyE;AAE1FT,EAAAA,QAAQ,CAACU,IAAT,GAAgBC,kBAAhB,CAAmC,MAAOC,IAAP,IAAc;AAC7CC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AACA,QAAGF,IAAH,EAAQ;AAGN,UAAIG,WAAW,GAAGH,IAAI,CAACG,WAAvB;AACA,UAAIC,KAAK,GAAGJ,IAAI,CAACI,KAAjB;AACA,UAAIC,aAAa,GAAGL,IAAI,CAACK,aAAzB;AACA,UAAIC,QAAQ,GAAGN,IAAI,CAACM,QAApB;AACA,UAAIC,WAAW,GAAGP,IAAI,CAACO,WAAvB;AACA,UAAIC,GAAG,GAAGR,IAAI,CAACQ,GAAf;AACA,UAAIC,YAAY,GAAGT,IAAI,CAACS,YAAxB;AAGE,UAAIC,KAAK,GAAG,MAAMV,IAAI,CAACW,UAAL,EAAlB;AAEAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BH,KAA7B;AAEApB,MAAAA,KAAK,CAACwB,IAAN,WAAcC,OAAO,CAACC,GAAR,CAAYC,iBAA1B,kBAAyD;AACrDjB,QAAAA,IAAI,EAACA,IADgD;AAErDU,QAAAA,KAAK,EAACA;AAF+C,OAAzD,EAGGQ,IAHH,CAGQC,GAAG,IAAG;AACVP,QAAAA,YAAY,CAACC,OAAb,CAAqB,IAArB,EAA0BM,GAAG,CAACC,IAAJ,CAASC,EAAnC;AACH,OALD,EAKGC,KALH,CAKSC,GAAG,IAAG;AACXtB,QAAAA,OAAO,CAACC,GAAR,CAAYqB,GAAZ;AACH,OAPD;AAQH,KAxBD,MAwBM,CACJ;AACA;AACD;AACJ,GA9BD;;AAgCA,MAAI1B,KAAJ,EAAW;AACP,WAAO,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAER,IAAI,CAACmC,EAAL,EAAZ;AAAuB,MAAA,KAAK,MAA5B;AAA6B,MAAA,IAAI,EAAE5B,IAAnC;AAAyC,MAAA,MAAM,EAAE6B,KAAK,IAC3D,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAKD,GANH,MAMS;AACL,WAAO,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEpC,IAAI,CAACmC,EAAL,EAAZ;AAAuB,MAAA,IAAI,EAAE5B,IAA7B;AAAmC,MAAA,MAAM,EAAE6B,KAAK,IACrD,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAKD;AAEN,CAhDD;AAkDA;;;;;AAIA,eAAelC,YAAf","sourcesContent":["/**\n * Dependencies\n */\n\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport firebase from 'firebase';\nimport uuid from 'uuid';\nimport axios from 'axios';\n\n/**\n * Define route component\n */\nconst PrivateRoute = ({ component: Component, errorBoundary: ErrorBoundary, path, exact }) => {\n\n    firebase.auth().onAuthStateChanged(async (user)=>{\n        console.log(\"auprivaterunhruns\")\n        if(user){\n            \n\n          let displayName = user.displayName;\n          let email = user.email;\n          let emailVerified = user.emailVerified;\n          let photoURL = user.photoURL;\n          let isAnonymous = user.isAnonymous;\n          let uid = user.uid;\n          let providerData = user.providerData;\n    \n\n            let token = await user.getIdToken()\n\n            localStorage.setItem('token',token)\n\n            axios.post(`${process.env.REACT_APP_API_URL}/users/auth`,{\n                user:user,\n                token:token\n            }).then(res =>{\n                localStorage.setItem('id',res.data.id)\n            }).catch(err =>{\n                console.log(err)\n            });\n        }else {\n          // User is signed out.\n          // ...\n        }\n    })\n\n    if (exact) {\n        return <Route key={uuid.v4()} exact path={path} render={props => (\n          <ErrorBoundary>\n            <Component {...props} />\n          </ErrorBoundary>\n        )} />\n      } else {\n        return <Route key={uuid.v4()} path={path} render={props => (\n          <ErrorBoundary>\n            <Component {...props} />\n          </ErrorBoundary>\n        )} />\n      }\n\n}\n\n/**\n * Export route component\n */\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}