{"ast":null,"code":"import _slicedToArray from \"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/PostImageUpload.js\";\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport axiosWithAuth from '../helpers/axiosWithAuth';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CarImgShow from './CarImgShow';\nimport CarImageFixShow from './CarImageFixShow';\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\nimport ImageCarousel from './ImageCarousel';\nimport DescriptionIcon from '@material-ui/icons/Description';\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction PostImageUpload(props) {\n  const classes = useStyles();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        postImages = _useState2[0],\n        setPostImages = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        file = _useState4[0],\n        setFile = _useState4[1];\n\n  isPostImageCarousel;\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        fullopen = _useState6[0],\n        setFullOpen = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        errorOpen = _useState8[0],\n        setErrorOpen = _useState8[1];\n\n  const handlefullOpen = () => {\n    setFullOpen(true);\n  };\n\n  const handlefullClose = () => {\n    setFullOpen(false);\n  };\n\n  function handleErrorClose() {\n    setErrorOpen(false);\n  }\n\n  function handleErrorOpen() {\n    setErrorOpen(true);\n  }\n\n  useEffect(() => {\n    fetchPostImages();\n  }, [file]);\n\n  async function fetchPostImages(id) {\n    let fixImages = await axiosWithAuth().get(\"/post/\".concat(props.post.id || id, \"/post_images\"));\n    setPostImages(fixImages.data);\n    return fixImages;\n  }\n\n  function handleInputChanges(e) {\n    e.preventDefault();\n    const file = e.target.files[0];\n\n    if (!file) {\n      return;\n    }\n\n    if (file && file.size > 1e8) {\n      alert(\"File is too large. Maximum limit is 100MB.\");\n      e.target.value = '';\n    } else {\n      setFile(file);\n    }\n  }\n\n  console.log(props.post.id, \"psotsssss\");\n\n  function handleSubmitUploaderFixDocuments(e) {\n    e.preventDefault(); // Create file ref (Example: /documents/:car_id/:file_name)\n\n    const fileRef = imagesRef.child(\"\".concat(props.post.id, \"/\").concat(file.name)); // Upload file\n\n    fileRef.put(file).then(snapshot => {\n      // console.log('Upload success!', snapshot.constructor, snapshot);\n      axiosWithAuth().post(\"/post/\".concat(props.post.id, \"/post_images\"), {\n        file_name: file.name\n      }).then(res => {\n        fetchPostImages(props.post.id); // window.location.reload();\n      }).catch(error => {\n        console.error(error);\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  if (props.isCarousel) {\n    return React.createElement(React.Fragment, null, React.createElement(ImageCarousel, {\n      style: {\n        backgroundColor: \"red\",\n        maxWidth: \"100px\"\n      },\n      isImageDelShow: true,\n      postImages: postImages,\n      post: props.post,\n      fetchPostImage: fetchPostImages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }));\n  } else if (props.isForm) {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      style: {\n        height: \"200px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Add Image\"), React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: \"column\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: handleSubmitUploaderFixDocuments,\n      style: {\n        display: 'flex',\n        flexDirection: \"column\",\n        maxWidth: \"200px\",\n        justifyContent: \"Center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      required: true,\n      id: \"uploader\",\n      type: \"file\",\n      accept: \"image/*,.pdf,.doc\",\n      onChange: handleInputChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      name: \"car_type\",\n      color: \"default\",\n      className: classes.button,\n      startIcon: React.createElement(CloudUploadIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Upload\")))));\n  } else {\n    return React.createElement(React.Fragment, null, React.createElement(Button, {\n      style: {\n        color: \"darkcyan\",\n        outline: '0'\n      },\n      onClick: handlefullOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Images\"), React.createElement(ImageCarousel, {\n      isPostImageCarousel: isPostImageCarousel,\n      open: handlefullOpen,\n      handleClose: handlefullClose,\n      onClose: handlefullClose,\n      postImages: postImages,\n      post: props.post,\n      fetchPostImage: fetchPostImages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }));\n  }\n}\n\nexport default PostImageUpload;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/PostImageUpload.js"],"names":["React","useEffect","useState","imagesRef","axiosWithAuth","Button","makeStyles","CloudUploadIcon","CarImgShow","CarImageFixShow","DriveEtaIcon","ImageCarousel","DescriptionIcon","useStyles","theme","button","margin","spacing","PostImageUpload","props","classes","postImages","setPostImages","file","setFile","isPostImageCarousel","fullopen","setFullOpen","errorOpen","setErrorOpen","handlefullOpen","handlefullClose","handleErrorClose","handleErrorOpen","fetchPostImages","id","fixImages","get","post","data","handleInputChanges","e","preventDefault","target","files","size","alert","value","console","log","handleSubmitUploaderFixDocuments","fileRef","child","name","put","then","snapshot","file_name","res","catch","error","err","isCarousel","backgroundColor","maxWidth","isForm","height","display","flexDirection","justifyContent","color","outline"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport axiosWithAuth from '../helpers/axiosWithAuth';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CarImgShow from './CarImgShow';\nimport CarImageFixShow from './CarImageFixShow';\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\nimport ImageCarousel from './ImageCarousel';\nimport DescriptionIcon from '@material-ui/icons/Description';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        margin: theme.spacing(1),\n    },\n}));\n\nfunction PostImageUpload(props) {\n\n\n    const classes = useStyles();\n    const [postImages, setPostImages] = useState([]);\n    const [file, setFile] = useState({});\n    isPostImageCarousel\n\n    const [fullopen, setFullOpen] = useState(false);\n    const [errorOpen, setErrorOpen] = useState(false);\n\n\n    const handlefullOpen = () => {\n        setFullOpen(true);\n    };\n    const handlefullClose = () => {\n        setFullOpen(false);\n    };\n\n    function handleErrorClose() {\n        setErrorOpen(false);\n    }\n\n    function handleErrorOpen() {\n        setErrorOpen(true);\n    }\n\n\n    useEffect(() => {\n\n        fetchPostImages();\n\n    }, [file]);\n\n    async function fetchPostImages(id) {\n        let fixImages = await axiosWithAuth().get(`/post/${props.post.id || id}/post_images`)\n        setPostImages(fixImages.data);\n        return fixImages;\n    }\n\n    function handleInputChanges(e) {\n        e.preventDefault();\n        const file = e.target.files[0]\n        if (!file) {\n            return;\n        }\n        if (file && file.size > 1e8) {\n            alert(\"File is too large. Maximum limit is 100MB.\")\n            e.target.value = ''\n        } else {\n            setFile(file);\n        }\n    }\n\nconsole.log(props.post.id,\"psotsssss\")\n\n    function handleSubmitUploaderFixDocuments(e) {\n        e.preventDefault()\n        // Create file ref (Example: /documents/:car_id/:file_name)\n        const fileRef = imagesRef.child(`${props.post.id}/${file.name}`)\n        // Upload file\n        fileRef.put(file).then((snapshot) => {\n            // console.log('Upload success!', snapshot.constructor, snapshot);\n            axiosWithAuth().post(`/post/${props.post.id}/post_images`, { file_name: file.name })\n                .then(res => {\n                    fetchPostImages(props.post.id);\n                    // window.location.reload();\n                })\n                .catch(error => {\n                    console.error(error);\n                })\n        }).catch(err => {\n            console.error(err)\n        });\n    }\n\n\n\n  if(props.isCarousel){\n        return (\n<>\n\n            {/* <Button\n            style={{ color: \"darkcyan\", outline: '0' }}\n            onClick={handlefullOpen}\n        >\n        Images\n        </Button>\n    */}\n        <ImageCarousel\n        style={{ backgroundColor: \"red\", maxWidth:\"100px\"}}\n            isImageDelShow= {true}\n            postImages={postImages}\n            post={props.post}\n            fetchPostImage={fetchPostImages}\n\n        />\n    \n</>\n        )\n    }\n    \n\n    else if(props.isForm){\n        return (\n            <>\n            <div style={{ height: \"200px\" }}>\n                <h4>Add Image</h4>\n                <div style={{ display: 'flex', flexDirection: \"column\" }}>\n                    <form onSubmit={handleSubmitUploaderFixDocuments} style={{ display: 'flex', flexDirection: \"column\",maxWidth:\"200px\",justifyContent:\"Center\"}}>\n                            <input required id=\"uploader\" type=\"file\" accept=\"image/*,.pdf,.doc\" onChange={handleInputChanges}></input>\n                            <Button\n                                variant=\"contained\"\n                                name=\"car_type\"\n                                color=\"default\"\n                                className={classes.button}\n                                startIcon={<CloudUploadIcon />}\n                                type=\"submit\"\n                            >\n                                Upload\n                </Button>\n                        </form>\n                    </div>\n                </div>\n           \n\n            </>\n        )\n    }else{\n        return (\n            <>\n                    <Button\n                        style={{ color: \"darkcyan\", outline: '0' }}\n                        onClick={handlefullOpen}\n                    >\n                    Images\n                    </Button>\n               \n                    <ImageCarousel\n                    isPostImageCarousel={isPostImageCarousel}\n                    open={handlefullOpen}\n                    handleClose={handlefullClose}\n                    onClose={handlefullClose}\n                    postImages={postImages}\n                    post={props.post}\n                    fetchPostImage={fetchPostImages}\n            \n                    />\n                \n            </>\n                    )\n\n    }\n\n\n\n}\n\n\n\nexport default PostImageUpload;\n"]},"metadata":{},"sourceType":"module"}