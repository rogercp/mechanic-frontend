{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/Posts.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { axiosWithAuth } from '../helpers/index';\nimport IndividualPost from './IndividualPost';\nimport { connect } from 'react-redux';\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\";\nimport { fetchPosts } from \"../store/actions/postActions\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Search from \"./Search\";\n\nfunction Posts(props) {\n  const [searchPosts, setsearchPosts] = useState([]); // const [filteredPosts,setFilteredposts] = useState()\n\n  async function searchPostsHandler(term) {\n    axiosWithAuth().post('/post/search', {\n      searchTerm: term\n    }).then(res => {\n      setsearchPosts(res.data);\n      props.toggleSearchToTrue();\n    }).catch(err => {});\n  }\n\n  ;\n  useEffect(() => {\n    onFirstLoad(); // setFilteredposts(props.filteredPosts)\n  }, []);\n\n  async function onFirstLoad() {\n    await props.fetchFilteredPosts(\"AllPosts\");\n  }\n\n  console.log(props.filteredPosts, \"filtered posts posts\");\n\n  if (props.searchToggle === true) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Search, {\n      searchPostsHandler: searchPostsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, searchPosts.map(p => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IndividualPost, {\n        post: p,\n        key: caches.uid,\n        fetchPosts: props.fetchFilteredPosts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }\n      }));\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Search, {\n      searchPostsHandler: searchPostsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \"if(props.filter)\", props.filteredPosts.map(p => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IndividualPost, {\n        post: p,\n        key: caches.uid,\n        fetchPosts: props.fetchFilteredPosts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }));\n    })));\n  }\n}\n\n;\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts\n});\n\nexport default connect(mapStateToProps, {\n  toggleSearchToTrue,\n  fetchFilteredPosts,\n  fetchPosts\n})(Posts);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/Posts.js"],"names":["React","useState","useEffect","axiosWithAuth","IndividualPost","connect","fetchFilteredPosts","toggleSearchToTrue","fetchPosts","ExpandMoreIcon","Search","Posts","props","searchPosts","setsearchPosts","searchPostsHandler","term","post","searchTerm","then","res","data","catch","err","onFirstLoad","console","log","filteredPosts","searchToggle","display","flexDirection","alignItems","map","p","caches","uid","mapStateToProps","state","myposts","posts"],"mappings":"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","sourcesContent":["\n\nimport React, { useState, useEffect } from \"react\";\nimport { axiosWithAuth } from '../helpers/index';\nimport IndividualPost from './IndividualPost'\nimport { connect } from 'react-redux';\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\";\nimport { fetchPosts } from \"../store/actions/postActions\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Search from \"./Search\";\n\nfunction Posts(props) {\n\n  const [searchPosts, setsearchPosts] = useState([])\n\n  // const [filteredPosts,setFilteredposts] = useState()\n\n  async function searchPostsHandler(term) {\n\n    axiosWithAuth()\n      .post('/post/search', { searchTerm: term })\n      .then(res => {\n        setsearchPosts(res.data)\n        props.toggleSearchToTrue()\n      })\n      .catch(err => {\n      });\n  };\n\n\n  useEffect(() => {\n    onFirstLoad()\n    // setFilteredposts(props.filteredPosts)\n  }, []);\n\n\n  async function onFirstLoad() {\n\n   await props.fetchFilteredPosts(\"AllPosts\")\n\n  }\n\n  console.log(props.filteredPosts,\"filtered posts posts\")\n\n  if (props.searchToggle === true) {\n\n    return (\n\n      <>\n\n        <Search searchPostsHandler={searchPostsHandler} />\n\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n\n          {\n\n            searchPosts.map(p => {\n              return (\n                <>\n                  <IndividualPost post={p} key={caches.uid} fetchPosts={props.fetchFilteredPosts} />\n                </>\n              );\n            })\n\n\n          }\n\n\n          {/* <ExpandMoreIcon style={{ fontSize: \"100px\" }} /> */}\n\n        </div>\n      </>\n\n    )\n  }\n  else {\n    return (\n      <>\n\n        <Search searchPostsHandler={searchPostsHandler} />\n\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n\n          if(props.filter)\n          {props.filteredPosts.map(p => {\n            return (\n              <>\n                <IndividualPost post={p} key={caches.uid} fetchPosts={props.fetchFilteredPosts} />\n              </>\n            );\n          })}\n\n\n          {/* <ExpandMoreIcon style={{ fontSize: \"100px\" }} /> */}\n\n        </div>\n      </>\n    );\n  }\n\n\n};\n\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts\n});\nexport default connect(\n  mapStateToProps,\n  { toggleSearchToTrue, fetchFilteredPosts, fetchPosts }\n)(Posts);\n"]},"metadata":{},"sourceType":"module"}