{"ast":null,"code":"import _slicedToArray from \"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { green } from '@material-ui/core/colors';\nimport CarAddModal from './CarAddModal';\nimport { axiosWithAuth } from '../helpers/index';\nimport CarCard from './CarCard';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from 'react-loader-spinner';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n    position: 'relative',\n    minHeight: 200\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  },\n  fabGreen: {\n    color: theme.palette.common.white,\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[600]\n    }\n  },\n  margin: {\n    margin: theme.spacing(1),\n    boxShadow: \"0 16px 19px rgba(0,0,0,0.2), 0 15px 15px rgba(0,0,0,0.2)\",\n    '&:hover': {\n      boxShadow: \"0 2px 4px rgba(0,0,0,0.25), 0 2px 2px rgba(0,0,0,0.22)\"\n    }\n  }\n}));\n\nfunction CarShow(props) {\n  const classes = useStyles();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        cars = _useState2[0],\n        setCars = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        open = _useState4[0],\n        setOpen = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        errorOpen = _useState6[0],\n        setErrorOpen = _useState6[1];\n  /**\n   * Modal Methods\n   */\n\n\n  function handleOpen() {\n    setOpen(true);\n  }\n\n  function handleErrorOpen() {\n    setErrorOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleErrorClose() {\n    setErrorOpen(false);\n  }\n\n  useEffect(() => {\n    fetchCars();\n  }, []);\n\n  async function fetchCars() {\n    const res = await axiosWithAuth().get(\"/cars\");\n    setCars(res.data);\n  } // return (\n  //   <div style={{ display: 'block' }}>\n  //     <Tooltip title=\"Add Car\" placement=\"right\">\n  //       <Fab color=\"none\" aria-label=\"add\" style={{ color: \"darkcyan\", outline: '0' }} className={classes.margin}>\n  //         <AddIcon\n  //           onClick={handleOpen}\n  //         />\n  //       </Fab>\n  //     </Tooltip>\n  //     <CarAddModal\n  //       fetchCars={fetchCars}\n  //       open={open}\n  //       onClose={handleClose}\n  //       titleText={\"Car Form\"}\n  //       bodyText={\"\"}\n  //       redirect={\"/mycars\"}\n  //       redirectText={\"cars\"}\n  //     />\n  //     {cars.length < 1 ? <div>You have no Cars</div> :\n  //       <Grid\n  //         item xs={12}\n  //         sm={cars.length === 1 ? 12 : 12}\n  //         md={cars.length === 1 ? 12 : 12}\n  //         lg={cars.length === 1 ? 12 : 12}\n  //         container direction=\"row\" justify=\"space-evenly\" >\n  //         {cars.map(c => {\n  //           return (\n  //             <>\n  //               <CarCard fetchCarsFunction={fetchCars} car={c} key={caches.uid} fetchCars={c.fetchCars} />\n  //             </>\n  //           );\n  //         })}\n  //       </Grid>\n  //     }\n  //   </div>\n  // );\n\n}\n\n;\nexport default CarShow;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/CarShow.js"],"names":["React","useState","useEffect","makeStyles","Fab","AddIcon","green","CarAddModal","axiosWithAuth","CarCard","Grid","Tooltip","Loader","useStyles","theme","root","backgroundColor","palette","background","paper","width","position","minHeight","fab","bottom","spacing","right","fabGreen","color","common","white","margin","boxShadow","CarShow","props","classes","cars","setCars","open","setOpen","errorOpen","setErrorOpen","handleOpen","handleErrorOpen","handleClose","handleErrorClose","fetchCars","res","get","data"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { green } from '@material-ui/core/colors';\nimport CarAddModal from './CarAddModal';\nimport { axiosWithAuth } from '../helpers/index';\nimport CarCard from './CarCard'\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n    position: 'relative',\n    minHeight: 200,\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  fabGreen: {\n    color: theme.palette.common.white,\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[600],\n    },\n  },\n  margin: {\n    margin: theme.spacing(1),\n    boxShadow: \"0 16px 19px rgba(0,0,0,0.2), 0 15px 15px rgba(0,0,0,0.2)\",\n    '&:hover': {\n      boxShadow: \"0 2px 4px rgba(0,0,0,0.25), 0 2px 2px rgba(0,0,0,0.22)\"\n    },\n  },\n\n}));\n\n\nfunction CarShow(props) {\n  const classes = useStyles();\n\n  const [cars, setCars] = useState([])\n  const [open, setOpen] = useState(false);\n  const [errorOpen, setErrorOpen] = useState(false);\n\n  /**\n   * Modal Methods\n   */\n\n  function handleOpen() {\n    setOpen(true);\n  }\n  function handleErrorOpen() {\n    setErrorOpen(true);\n  }\n  function handleClose() {\n    setOpen(false);\n  }\n  function handleErrorClose() {\n    setErrorOpen(false);\n  }\n\n\n  useEffect(() => {\n\n    fetchCars()\n\n  }, []);\n\n  async function fetchCars() {\n    const res = await axiosWithAuth().get(`/cars`);\n    setCars(res.data);\n  }\n\n  // return (\n  //   <div style={{ display: 'block' }}>\n  //     <Tooltip title=\"Add Car\" placement=\"right\">\n  //       <Fab color=\"none\" aria-label=\"add\" style={{ color: \"darkcyan\", outline: '0' }} className={classes.margin}>\n  //         <AddIcon\n  //           onClick={handleOpen}\n  //         />\n  //       </Fab>\n  //     </Tooltip>\n\n  //     <CarAddModal\n  //       fetchCars={fetchCars}\n  //       open={open}\n  //       onClose={handleClose}\n  //       titleText={\"Car Form\"}\n  //       bodyText={\"\"}\n  //       redirect={\"/mycars\"}\n  //       redirectText={\"cars\"}\n  //     />\n\n\n  //     {cars.length < 1 ? <div>You have no Cars</div> :\n  //       <Grid\n\n  //         item xs={12}\n  //         sm={cars.length === 1 ? 12 : 12}\n  //         md={cars.length === 1 ? 12 : 12}\n  //         lg={cars.length === 1 ? 12 : 12}\n  //         container direction=\"row\" justify=\"space-evenly\" >\n  //         {cars.map(c => {\n  //           return (\n  //             <>\n  //               <CarCard fetchCarsFunction={fetchCars} car={c} key={caches.uid} fetchCars={c.fetchCars} />\n  //             </>\n  //           );\n  //         })}\n  //       </Grid>\n  //     }\n\n  //   </div>\n\n  // );\n};\n\n\n\nexport default CarShow;\n"]},"metadata":{},"sourceType":"module"}