{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/OrderPosts.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\";\nimport { changeOrderPosts } from \"../store/actions/postActions\";\nimport Select from '@material-ui/core/Select';\nimport { Dropdown } from 'react-bootstrap';\n\nfunction OrderPosts(props) {\n  const [orderBy, setOrderBy] = useState({\n    order: props.orderPosts\n  });\n  useEffect(() => {\n    props.changeOrderPosts(orderBy.order);\n    props.fetchFilteredPosts(\"AllPosts\", `${orderBy.order}`);\n  }, [orderBy.order]); //  const handleChange = name => event => {\n  //   setOrderBy({\n  //     ...orderBy,\n  //     [name]: event.target.value,\n  //   });\n  // };\n\n  console.log(props.orderPosts, 'coming corm redux orderf');\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    variant: \"success\",\n    id: \"dropdown-basic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }\n  }, \"Dropdown Button\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n    href: \"#/action-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, \"Action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    href: \"#/action-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, \"Another action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    href: \"#/action-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, \"Something else\"))));\n}\n\n;\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts,\n  orderPosts: state.post.order\n});\n\nexport default connect(mapStateToProps, {\n  toggleSearchToTrue,\n  fetchFilteredPosts,\n  changeOrderPosts\n})(OrderPosts);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/OrderPosts.js"],"names":["React","useState","useEffect","connect","fetchFilteredPosts","toggleSearchToTrue","changeOrderPosts","Select","Dropdown","OrderPosts","props","orderBy","setOrderBy","order","orderPosts","console","log","mapStateToProps","state","searchToggle","post","myposts","posts","filteredPosts"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAGzB,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBX,QAAQ,CAAC;AAEpCY,IAAAA,KAAK,EAACH,KAAK,CAACI;AAFwB,GAAD,CAArC;AAOAZ,EAAAA,SAAS,CAAC,MAAM;AAGhBQ,IAAAA,KAAK,CAACJ,gBAAN,CAAuBK,OAAO,CAACE,KAA/B;AACAH,IAAAA,KAAK,CAACN,kBAAN,CAAyB,UAAzB,EAAqC,GAAEO,OAAO,CAACE,KAAM,EAArD;AACC,GALQ,EAKN,CAACF,OAAO,CAACE,KAAT,CALM,CAAT,CAVyB,CAmBzB;AACA;AACA;AACA;AACA;AAEA;;AAGAE,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACI,UAAlB,EAA6B,0BAA7B;AAEA,sBAEE,uDAgBM,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACR,oBAAC,QAAD,CAAU,MAAV;AAAiB,IAAA,OAAO,EAAC,SAAzB;AAAmC,IAAA,EAAE,EAAC,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADQ,eAKR,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,IAAI,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,IAAI,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,IAAI,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,CALQ,CAhBN,CAFF;AAoCD;;AAAA;;AAID,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChCC,EAAAA,YAAY,EAAED,KAAK,CAACE,IAAN,CAAWD,YADO;AAEhCE,EAAAA,OAAO,EAAEH,KAAK,CAACE,IAAN,CAAWE,KAFY;AAGhCC,EAAAA,aAAa,EAAEL,KAAK,CAACE,IAAN,CAAWG,aAHM;AAIhCT,EAAAA,UAAU,EAAEI,KAAK,CAACE,IAAN,CAAWP;AAJS,CAAL,CAA7B;;AAMA,eAAeV,OAAO,CACpBc,eADoB,EAEpB;AAAEZ,EAAAA,kBAAF;AAAsBD,EAAAA,kBAAtB;AAA0CE,EAAAA;AAA1C,CAFoB,CAAP,CAGbG,UAHa,CAAf","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\";\nimport { changeOrderPosts } from \"../store/actions/postActions\";\nimport Select from '@material-ui/core/Select';\nimport { Dropdown } from 'react-bootstrap';\n\n\nfunction OrderPosts(props) {\n\n  \n  const [orderBy,setOrderBy] = useState({\n\n    order:props.orderPosts\n \n   })\n\n\n  useEffect(() => {\n   \n   \n  props.changeOrderPosts(orderBy.order)\n  props.fetchFilteredPosts(\"AllPosts\",`${orderBy.order}`)\n  }, [orderBy.order]);\n\n\n\n  //  const handleChange = name => event => {\n  //   setOrderBy({\n  //     ...orderBy,\n  //     [name]: event.target.value,\n  //   });\n  \n  // };\n\n\n  console.log(props.orderPosts,'coming corm redux orderf')\n\n  return (\n\n    <>\n    {/* <Select\n            native\n            name=\"order\"\n            value={orderBy.order}\n            onChange={handleChange('order')}\n            inputProps={{\n              name: 'type',\n              id: 'outlined-type-native-simple',\n            }}\n          >\n             <option value=\"\" />\n            <option value={\"date\"}>date</option>\n            <option value={\"likes\"}>likes</option>\n          \n          </Select> */}\n          <Dropdown>\n  <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n    Dropdown Button\n  </Dropdown.Toggle>\n\n  <Dropdown.Menu>\n    <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n    <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n    <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n  </Dropdown.Menu>\n</Dropdown>\n\n    </>\n\n  );\n\n\n\n};\n\n\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts,\n  orderPosts: state.post.order\n});\nexport default connect(\n  mapStateToProps,\n  { toggleSearchToTrue, fetchFilteredPosts, changeOrderPosts }\n)(OrderPosts);\n\n"]},"metadata":{},"sourceType":"module"}