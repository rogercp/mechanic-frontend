{"ast":null,"code":"import _slicedToArray from \"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/Posts.js\";\nimport React, { useState, useEffect } from \"react\";\nimport DashSideNav from './DashSideNav';\nimport { axiosWithAuth } from '../helpers/index';\nimport IndividualPost from './IndividualPost';\nimport { connect } from 'react-redux';\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport search from './Search';\nimport Search from \"./Search\";\n\nfunction Posts(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchPosts = _useState2[0],\n        setsearchPosts = _useState2[1];\n\n  async function searchPostsHandler(term) {\n    axiosWithAuth().post('/post/search', {\n      searchTerm: term\n    }).then(res => {\n      setsearchPosts(res.data);\n      props.toggleSearchToTrue();\n    }).catch(err => {});\n  }\n\n  ;\n  useEffect(() => {\n    props.fetchPosts();\n    onFirstLoad();\n  }, []);\n\n  function onFirstLoad() {\n    props.fetchFilteredPosts(All);\n  }\n\n  if (props.searchToggle === true) {\n    return React.createElement(React.Fragment, null, React.createElement(Search, {\n      searchPostsHandler: searchPostsHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, searchPosts.map(p => {\n      return React.createElement(React.Fragment, null, React.createElement(IndividualPost, {\n        post: p,\n        key: caches.uid,\n        fetchPosts: props.fetchPosts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }));\n    }), React.createElement(ExpandMoreIcon, {\n      style: {\n        fontSize: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })));\n  } else {\n    return React.createElement(React.Fragment, null, React.createElement(Search, {\n      searchPostsHandler: searchPostsHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, props.filteredPosts.map(p => {\n      return React.createElement(React.Fragment, null, React.createElement(IndividualPost, {\n        post: p,\n        key: caches.uid,\n        fetchPosts: props.fetchPosts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }));\n    }), React.createElement(ExpandMoreIcon, {\n      style: {\n        fontSize: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })));\n  }\n}\n\n;\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts\n});\n\nexport default connect(mapStateToProps, {\n  fetchPosts,\n  toggleSearchToTrue,\n  fetchFilteredPosts\n})(Posts);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/Posts.js"],"names":["React","useState","useEffect","DashSideNav","axiosWithAuth","IndividualPost","connect","fetchFilteredPosts","toggleSearchToTrue","ExpandMoreIcon","search","Search","Posts","props","searchPosts","setsearchPosts","searchPostsHandler","term","post","searchTerm","then","res","data","catch","err","fetchPosts","onFirstLoad","All","searchToggle","display","flexDirection","alignItems","map","p","caches","uid","fontSize","filteredPosts","mapStateToProps","state","myposts","posts"],"mappings":"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","sourcesContent":["\n\nimport React, { useState, useEffect } from \"react\";\nimport DashSideNav from './DashSideNav';\nimport { axiosWithAuth } from '../helpers/index';\nimport IndividualPost from './IndividualPost'\nimport { connect } from 'react-redux';\nimport {  fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport search from './Search';\nimport Search from \"./Search\";\n\n\n\nfunction Posts(props) {\n\n  const [searchPosts, setsearchPosts] = useState([])\n \n\n  async function searchPostsHandler(term) {\n\n    axiosWithAuth()\n      .post('/post/search', { searchTerm: term })\n      .then(res => {\n        setsearchPosts(res.data)\n       props.toggleSearchToTrue()\n      })\n      .catch(err => {\n      });\n  };\n\n\n  useEffect(() => {\n    props.fetchPosts()\n\n    onFirstLoad()\n  }, []);\n\n\n  function onFirstLoad(){\n\n    props.fetchFilteredPosts(All)\n\n\n  }\n\n\n\n  if (props.searchToggle === true) {\n\n    return (\n\n      <>\n\n        <Search searchPostsHandler={searchPostsHandler} />\n\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n\n\n          {\n\n            searchPosts.map(p => {\n              return (\n                <>\n                  <IndividualPost post={p} key={caches.uid} fetchPosts={props.fetchPosts} />\n                </>\n              );\n            })\n\n\n          }\n\n\n          <ExpandMoreIcon style={{ fontSize: \"100px\" }} />\n\n        </div>\n      </>\n\n    )\n  } \n  else {\n    return (\n      <>\n\n        <Search searchPostsHandler={searchPostsHandler} />\n\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n\n      \n            {props.filteredPosts.map(p => {\n              return (\n                <>\n                  <IndividualPost post={p} key={caches.uid} fetchPosts={props.fetchPosts} />\n                </>\n              );\n            })}\n\n          \n\n          <ExpandMoreIcon style={{ fontSize: \"100px\" }} />\n\n        </div>\n      </>\n    );\n  }\n\n\n};\n\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts\n});\nexport default connect(\n  mapStateToProps,\n  { fetchPosts,toggleSearchToTrue,fetchFilteredPosts }\n)(Posts);\n"]},"metadata":{},"sourceType":"module"}