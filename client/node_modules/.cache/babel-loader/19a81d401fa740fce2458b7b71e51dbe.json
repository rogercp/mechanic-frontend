{"ast":null,"code":"import _slicedToArray from \"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/CarImgUpload.js\";\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport axiosWithAuth from '../helpers/axiosWithAuth';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CarImgShow from './CarImgShow';\nimport CarImageFixShow from './CarImageFixShow';\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction CarImgUpload(props) {\n  const classes = useStyles();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        carImages = _useState2[0],\n        setCarImages = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        carFixImages = _useState4[0],\n        setCarFixImages = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        file = _useState6[0],\n        setFile = _useState6[1];\n\n  useEffect(() => {\n    if (props.car) {\n      fetchCarImages();\n    }\n\n    if (props.carFix) {\n      fetchFixDocuments();\n    }\n  }, [file]);\n  console.log(carImages, \"carImages\");\n\n  async function fetchCarImages() {\n    let images = await axiosWithAuth().get(\"/cars/\".concat(props.car.id, \"/images\"));\n    setCarImages(images.data);\n    return images;\n  }\n\n  async function fetchFixDocuments() {\n    let fixImages = await axiosWithAuth().get(\"/car_fix/\".concat(props.carFix.id, \"/car_fix_images\"));\n    setCarFixImages(fixImages.data);\n    return fixImages;\n  }\n\n  function handleInputChanges(e) {\n    e.preventDefault();\n    const file = e.target.files[0];\n\n    if (!file) {\n      return;\n    }\n\n    if (file && file.size > 1e8) {\n      alert(\"File is too large. Maximum limit is 100MB.\");\n      e.target.value = '';\n    } else {\n      setFile(file);\n    }\n  }\n\n  function handleSubmitUploader(e) {\n    e.preventDefault(); // Create file ref (Example: /documents/:car_id/:file_name)\n\n    const fileRef = imagesRef.child(\"\".concat(props.car.id, \"/\").concat(file.name)); // Upload file\n\n    fileRef.put(file).then(snapshot => {\n      // console.log('Upload success!', snapshot.constructor, snapshot);\n      axiosWithAuth().post(\"/cars/\".concat(props.car.id, \"/images\"), {\n        file_name: file.name\n      }).then(res => {\n        fetchCarImages();\n        window.location.reload();\n      }).catch(error => {\n        console.error(error);\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleSubmitUploaderFixDocuments(e) {\n    e.preventDefault(); // Create file ref (Example: /documents/:car_id/:file_name)\n\n    const fileRef = imagesRef.child(\"\".concat(props.carFix.id, \"/\").concat(file.name)); // Upload file\n\n    fileRef.put(file).then(snapshot => {\n      // console.log('Upload success!', snapshot.constructor, snapshot);\n      axiosWithAuth().post(\"/car_fix/\".concat(props.carFix.id, \"/car_fix_images\"), {\n        file_name: file.name\n      }).then(res => {\n        fetchFixDocuments();\n        window.location.reload();\n      }).catch(error => {\n        console.error(error);\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  if (carImages.length > 0) {\n    return React.createElement(React.Fragment, null, carImages.map((image, index) => {\n      return React.createElement(CarImgShow, {\n        key: index,\n        car: props.car,\n        image: image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      });\n    }));\n  } else if (carFixImages.length > 0) {\n    return React.createElement(React.Fragment, null, carFixImages.map((image, index) => {\n      return React.createElement(CarImageFixShow, {\n        key: index,\n        carFix: props.carFix,\n        image: image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      });\n    }));\n  } else {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      style: {\n        height: \"200px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, props.car ? React.createElement(DriveEtaIcon, {\n      style: {\n        fontSize: \"100px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: \"column\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: props.car ? handleSubmitUploader : handleSubmitUploaderFixDocuments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      required: true,\n      id: \"uploader\",\n      type: \"file\",\n      accept: \"image/*,.pdf,.doc\",\n      onChange: handleInputChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      name: \"car_type\",\n      color: \"default\",\n      className: classes.button,\n      startIcon: React.createElement(CloudUploadIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Upload\")))));\n  }\n}\n\nexport default CarImgUpload;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/CarImgUpload.js"],"names":["React","useEffect","useState","imagesRef","axiosWithAuth","Button","makeStyles","CloudUploadIcon","CarImgShow","CarImageFixShow","DriveEtaIcon","useStyles","theme","button","margin","spacing","CarImgUpload","props","classes","carImages","setCarImages","carFixImages","setCarFixImages","file","setFile","car","fetchCarImages","carFix","fetchFixDocuments","console","log","images","get","id","data","fixImages","handleInputChanges","e","preventDefault","target","files","size","alert","value","handleSubmitUploader","fileRef","child","name","put","then","snapshot","post","file_name","res","window","location","reload","catch","error","err","handleSubmitUploaderFixDocuments","length","map","image","index","height","fontSize","display","flexDirection"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport axiosWithAuth from '../helpers/axiosWithAuth';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CarImgShow from './CarImgShow';\nimport CarImageFixShow from './CarImageFixShow';\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n      margin: theme.spacing(1),\n    },\n  }));\n\n\nfunction CarImgUpload(props) {\n\n    const classes = useStyles();\n    const [carImages, setCarImages] = useState([]);\n    const [carFixImages, setCarFixImages] = useState([]);\n    const [file, setFile] = useState({});\n\n    useEffect(() => {\n        if(props.car){\n        fetchCarImages();\n        }if(props.carFix){\n        fetchFixDocuments();\n        }\n    }, [file]);\n\n    console.log(carImages,\"carImages\")\n    \n    async function fetchCarImages() {\n        let images = await axiosWithAuth().get(`/cars/${props.car.id}/images`)\n        setCarImages(images.data);\n        return images;\n    }\n\n    async function fetchFixDocuments() {\n        let fixImages = await axiosWithAuth().get(`/car_fix/${props.carFix.id}/car_fix_images`)\n        setCarFixImages(fixImages.data);\n        return fixImages;\n    }\n\n    function handleInputChanges(e) {\n        e.preventDefault();\n        const file = e.target.files[0]\n        if (!file) {\n            return;\n        }\n        if (file && file.size > 1e8) {\n            alert(\"File is too large. Maximum limit is 100MB.\")\n            e.target.value = ''\n        } else {\n            setFile(file);\n        }\n    }\n\n    function handleSubmitUploader(e) {\n        e.preventDefault()\n        // Create file ref (Example: /documents/:car_id/:file_name)\n        const fileRef = imagesRef.child(`${props.car.id}/${file.name}`)\n        // Upload file\n        fileRef.put(file).then((snapshot) => {\n            // console.log('Upload success!', snapshot.constructor, snapshot);\n            axiosWithAuth().post(`/cars/${props.car.id}/images`, { file_name: file.name })\n                .then(res => {\n                    fetchCarImages();\n                    window.location.reload();               \n                 })\n                .catch(error => {\n                    console.error(error);\n                })\n        }).catch(err => {\n            console.error(err)\n        });\n    }\n\n    function handleSubmitUploaderFixDocuments(e) {\n        e.preventDefault()\n        // Create file ref (Example: /documents/:car_id/:file_name)\n        const fileRef = imagesRef.child(`${props.carFix.id}/${file.name}`)\n        // Upload file\n        fileRef.put(file).then((snapshot) => {\n            // console.log('Upload success!', snapshot.constructor, snapshot);\n            axiosWithAuth().post(`/car_fix/${props.carFix.id}/car_fix_images`, { file_name: file.name })\n                .then(res => {\n                    fetchFixDocuments();\n                    window.location.reload();               \n                 })\n                .catch(error => {\n                    console.error(error);\n                })\n        }).catch(err => {\n            console.error(err)\n        });\n    }\n    \n\n\n    if(carImages.length > 0 ){\n        return (\n        <>\n                    {carImages.map((image, index) => {\n                        return <CarImgShow key={index} car={props.car} image={image}/>\n                    })} \n        </>\n        )\n    } \n    else if(carFixImages.length > 0 ){\n        return (\n        <>\n                    {carFixImages.map((image, index) => {\n                        return <CarImageFixShow  key={index}  carFix={props.carFix} image={image}/>\n                    })} \n        </>\n        )\n    }else{\n        return (\n            <>\n                <div style={{height:\"200px\"}}>\n                {(props.car ? <DriveEtaIcon style={{fontSize:\"100px\"}}/> : null)} \n                <div style={{display:'flex',flexDirection:\"column\"}}>\n                 <form onSubmit={(props.car ? handleSubmitUploader : handleSubmitUploaderFixDocuments)}> \n                <input required id=\"uploader\" type=\"file\" accept=\"image/*,.pdf,.doc\" onChange={handleInputChanges}></input>\n                    <Button\n                    variant=\"contained\"\n                    name=\"car_type\"\n                    color=\"default\"\n                    className={classes.button}\n                    startIcon={<CloudUploadIcon />}\n                    type =\"submit\"\n                    >\n                    Upload\n                </Button>\n                </form>\n                </div>\n                </div>\n                \n            </>\n        )\n    }\n   \n        \n    \n}\n\n\n\nexport default CarImgUpload;\n"]},"metadata":{},"sourceType":"module"}