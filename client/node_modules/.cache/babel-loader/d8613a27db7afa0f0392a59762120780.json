{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/Posts.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { axiosWithAuth } from '../helpers/index';\nimport IndividualPost from './IndividualPost';\nimport { connect } from 'react-redux';\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\"; // import { fetchPosts } from \"../store/actions/postActions\";\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Search from \"./Search\";\n\nfunction Posts(props) {\n  const [searchPosts, setsearchPosts] = useState([]);\n  const [filteredPosts, setFilteredposts] = useState({\n    posts: [props.filteredPosts]\n  });\n\n  async function searchPostsHandler(term) {\n    axiosWithAuth().post('/post/search', {\n      searchTerm: term\n    }).then(res => {\n      setsearchPosts(res.data);\n      props.toggleSearchToTrue();\n    }).catch(err => {});\n  }\n\n  ;\n  useEffect(() => {\n    onFirstLoad(); // onLoad()\n  }, []);\n\n  async function onFirstLoad() {\n    await props.fetchFilteredPosts(\"AllPosts\"); //  setFilteredposts(props.filteredPosts)\n  } //  function onLoad() {\n  //    setFilteredposts({props.filteredPosts})\n  //  }\n\n\n  console.log(filteredPosts.posts, \"filtered posts posts\");\n\n  if (props.searchToggle === true) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Search, {\n      searchPostsHandler: searchPostsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, searchPosts.map(p => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IndividualPost, {\n        post: p,\n        key: caches.uid,\n        fetchPosts: props.fetchFilteredPosts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }\n      }));\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Search, {\n      searchPostsHandler: searchPostsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, filteredPosts.posts.map(p => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IndividualPost, {\n        post: p,\n        key: caches.uid,\n        fetchPosts: props.fetchFilteredPosts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      }));\n    })));\n  }\n}\n\n;\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts\n});\n\nexport default connect(mapStateToProps, {\n  toggleSearchToTrue,\n  fetchFilteredPosts\n})(Posts);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/Posts.js"],"names":["React","useState","useEffect","axiosWithAuth","IndividualPost","connect","fetchFilteredPosts","toggleSearchToTrue","ExpandMoreIcon","Search","Posts","props","searchPosts","setsearchPosts","filteredPosts","setFilteredposts","posts","searchPostsHandler","term","post","searchTerm","then","res","data","catch","err","onFirstLoad","console","log","searchToggle","display","flexDirection","alignItems","map","p","caches","uid","mapStateToProps","state","myposts"],"mappings":"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","sourcesContent":["\n\nimport React, { useState, useEffect } from \"react\";\nimport { axiosWithAuth } from '../helpers/index';\nimport IndividualPost from './IndividualPost'\nimport { connect } from 'react-redux';\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\";\n// import { fetchPosts } from \"../store/actions/postActions\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Search from \"./Search\";\n\nfunction Posts(props) {\n\n  const [searchPosts, setsearchPosts] = useState([])\n\n  const [filteredPosts,setFilteredposts] = useState({\n    posts:[props.filteredPosts]\n  })\n\n  async function searchPostsHandler(term) {\n\n    axiosWithAuth()\n      .post('/post/search', { searchTerm: term })\n      .then(res => {\n        setsearchPosts(res.data)\n        props.toggleSearchToTrue()\n      })\n      .catch(err => {\n      });\n  };\n\n\n  useEffect(() => {\n    onFirstLoad()\n    // onLoad()\n  }, []);\n\n\n  async function onFirstLoad() {\n\n   await props.fetchFilteredPosts(\"AllPosts\")\n  //  setFilteredposts(props.filteredPosts)\n  }\n  //  function onLoad() {\n\n    \n  //    setFilteredposts({props.filteredPosts})\n\n  //  }\n \n\n  console.log(filteredPosts.posts,\"filtered posts posts\")\n\n  if (props.searchToggle === true) {\n\n    return (\n\n      <>\n\n        <Search searchPostsHandler={searchPostsHandler} />\n\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n\n          {\n\n            searchPosts.map(p => {\n              return (\n                <>\n                  <IndividualPost post={p} key={caches.uid} fetchPosts={props.fetchFilteredPosts} />\n                </>\n              );\n            })\n\n\n          }\n\n\n          {/* <ExpandMoreIcon style={{ fontSize: \"100px\" }} /> */}\n\n        </div>\n      </>\n\n    )\n  }\n  else {\n    return (\n      <>\n\n        <Search searchPostsHandler={searchPostsHandler} />\n\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n\n       \n              {filteredPosts.posts.map(p => {\n                return (\n                  <>\n                    <IndividualPost post={p} key={caches.uid} fetchPosts={props.fetchFilteredPosts} />\n                  </>\n                );\n              })}\n          \n    \n\n          {/* <ExpandMoreIcon style={{ fontSize: \"100px\" }} /> */}\n\n        </div>\n      </>\n    );\n  }\n\n\n};\n\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts\n});\nexport default connect(\n  mapStateToProps,\n  { toggleSearchToTrue, fetchFilteredPosts }\n)(Posts);\n"]},"metadata":{},"sourceType":"module"}