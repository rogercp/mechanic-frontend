{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar react_1 = require(\"react\");\n\nvar ReactCardFlip = function (props) {\n  var flipDirection = props.flipDirection,\n      infinite = props.infinite,\n      flipSpeedFrontToBack = props.flipSpeedFrontToBack,\n      flipSpeedBackToFront = props.flipSpeedBackToFront,\n      _a = props.cardStyles,\n      front = _a.front,\n      back = _a.back,\n      containerStyle = props.containerStyle,\n      cardZIndex = props.cardZIndex;\n\n  var _b = react_1.useState(props.isFlipped),\n      isFlipped = _b[0],\n      setFlipped = _b[1];\n\n  var _c = react_1.useState(0),\n      rotation = _c[0],\n      setRotation = _c[1];\n\n  react_1.useEffect(function () {\n    if (props.isFlipped !== isFlipped) {\n      setFlipped(props.isFlipped);\n      setRotation(function (c) {\n        return c + 180;\n      });\n    }\n  }, [props.isFlipped]);\n\n  var getComponent = function (key) {\n    if (props.children.length !== 2) {\n      throw new Error('Component ReactCardFlip requires 2 children to function');\n    }\n\n    return props.children[key];\n  };\n\n  var frontRotateY = \"rotateY(\" + (infinite ? rotation : isFlipped ? 180 : 0) + \"deg)\";\n  var backRotateY = \"rotateY(\" + (infinite ? rotation + 180 : isFlipped ? 0 : -180) + \"deg)\";\n  var frontRotateX = \"rotateX(\" + (infinite ? rotation : isFlipped ? 180 : 0) + \"deg)\";\n  var backRotateX = \"rotateX(\" + (infinite ? rotation + 180 : isFlipped ? 0 : -180) + \"deg)\";\n  var styles = {\n    container: {\n      perspective: '1000px',\n      zIndex: \"\" + cardZIndex\n    },\n    flipper: {\n      position: 'relative',\n      width: '100%',\n      height: '100%'\n    },\n    front: __assign({\n      WebkitBackfaceVisibility: 'hidden',\n      backfaceVisibility: 'hidden',\n      left: '0',\n      position: isFlipped ? 'absolute' : 'relative',\n      top: '0',\n      transform: flipDirection === 'horizontal' ? frontRotateY : frontRotateX,\n      transformStyle: 'preserve-3d',\n      width: '100%',\n      height: '100%',\n      zIndex: '2',\n      transition: flipSpeedBackToFront + \"s\"\n    }, front),\n    back: __assign({\n      WebkitBackfaceVisibility: 'hidden',\n      backfaceVisibility: 'hidden',\n      left: '0',\n      position: isFlipped ? 'relative' : 'absolute',\n      transform: flipDirection === 'horizontal' ? backRotateY : backRotateX,\n      transformStyle: 'preserve-3d',\n      top: '0',\n      width: '100%',\n      height: '100%',\n      transition: flipSpeedFrontToBack + \"s\"\n    }, back)\n  };\n  return React.createElement(\"div\", {\n    className: \"react-card-flip\",\n    style: __assign(__assign({}, styles.container), containerStyle)\n  }, React.createElement(\"div\", {\n    className: \"react-card-flipper\",\n    style: styles.flipper\n  }, React.createElement(\"div\", {\n    className: \"react-card-front\",\n    style: styles.front\n  }, getComponent(0)), React.createElement(\"div\", {\n    className: \"react-card-back\",\n    style: styles.back\n  }, getComponent(1))));\n};\n\nReactCardFlip.defaultProps = {\n  containerStyle: {},\n  cardStyles: {\n    front: {},\n    back: {}\n  },\n  cardZIndex: 'auto',\n  flipDirection: 'horizontal',\n  flipSpeedBackToFront: 0.6,\n  flipSpeedFrontToBack: 0.6,\n  infinite: false,\n  isFlipped: false\n};\nexports.default = ReactCardFlip;","map":null,"metadata":{},"sourceType":"script"}