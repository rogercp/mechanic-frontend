{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-front/mechanic-frontend/mechanic/src/components/CarShow.js\";\n\n/**\n * Dependencies\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport UpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { green, red } from '@material-ui/core/colors';\nimport Box from '@material-ui/core/Box';\nimport CarAddModal from './CarAddModal';\n/**\n *  Import styles\n */\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n    position: 'relative',\n    minHeight: 200\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  },\n  fabGreen: {\n    color: theme.palette.common.white,\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[600]\n    }\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n/**\n * Define component\n */\n\nfunction CarShow(props) {\n  const classes = useStyles();\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"My Cars\"), React.createElement(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    className: classes.margin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(CarAddModal, {\n    open: open,\n    onClose: handleClose,\n    titleText: \"Invoice created\",\n    bodyText: \"\",\n    redirect: \"/mediator-cases\",\n    redirectText: \"Mediator Cases\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(CarAddModal, {\n    open: errorOpen,\n    onClose: handleErrorClose,\n    titleText: \"Error creating invoice\",\n    bodyText: \"Please try again\",\n    redirect: \"\",\n    redirectText: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }));\n}\n\n;\n/**\n * Export component\n */\n\nexport default CarShow;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-front/mechanic-frontend/mechanic/src/components/CarShow.js"],"names":["React","PropTypes","clsx","makeStyles","useTheme","AppBar","Tabs","Tab","Typography","Zoom","Fab","AddIcon","EditIcon","UpIcon","green","red","Box","CarAddModal","useStyles","theme","root","backgroundColor","palette","background","paper","width","position","minHeight","fab","bottom","spacing","right","fabGreen","color","common","white","margin","CarShow","props","classes","open","handleClose","errorOpen","handleErrorClose"],"mappings":";;AAAA;;;AAIA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,0BAArC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,SAASC,KAAT,EAAgBC,GAAhB,QAA2B,0BAA3B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA;;;;AAKA,MAAMC,SAAS,GAAGf,UAAU,CAACgB,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcC,UAAd,CAAyBC,KADtC;AAEJC,IAAAA,KAAK,EAAE,GAFH;AAGJC,IAAAA,QAAQ,EAAE,UAHN;AAIJC,IAAAA,SAAS,EAAE;AAJP,GAD+B;AAOrCC,EAAAA,GAAG,EAAE;AACHF,IAAAA,QAAQ,EAAE,UADP;AAEHG,IAAAA,MAAM,EAAEV,KAAK,CAACW,OAAN,CAAc,CAAd,CAFL;AAGHC,IAAAA,KAAK,EAAEZ,KAAK,CAACW,OAAN,CAAc,CAAd;AAHJ,GAPgC;AAYrCE,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAEd,KAAK,CAACG,OAAN,CAAcY,MAAd,CAAqBC,KADpB;AAERd,IAAAA,eAAe,EAAEP,KAAK,CAAC,GAAD,CAFd;AAGR,eAAW;AACTO,MAAAA,eAAe,EAAEP,KAAK,CAAC,GAAD;AADb;AAHH,GAZ2B;AAmBrCsB,EAAAA,MAAM,EAAE;AACNA,IAAAA,MAAM,EAAEjB,KAAK,CAACW,OAAN,CAAc,CAAd;AADF;AAnB6B,CAAL,CAAN,CAA5B;AAuBA;;;;AAOA,SAASO,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAMC,OAAO,GAAGrB,SAAS,EAAzB;AAIE,SACE,0CAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAIE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC,SAAX;AAAqB,kBAAW,KAAhC;AAAsC,IAAA,SAAS,EAAEqB,OAAO,CAACH,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAQE,oBAAC,WAAD;AACQ,IAAA,IAAI,EAAEI,IADd;AAEQ,IAAA,OAAO,EAAEC,WAFjB;AAGQ,IAAA,SAAS,EAAE,iBAHnB;AAIQ,IAAA,QAAQ,EAAE,EAJlB;AAKQ,IAAA,QAAQ,EAAE,iBALlB;AAMQ,IAAA,YAAY,EAAE,gBANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAiBM,oBAAC,WAAD;AACI,IAAA,IAAI,EAAEC,SADV;AAEI,IAAA,OAAO,EAAEC,gBAFb;AAGI,IAAA,SAAS,EAAE,wBAHf;AAII,IAAA,QAAQ,EAAE,kBAJd;AAKI,IAAA,QAAQ,EAAE,EALd;AAMI,IAAA,YAAY,EAAE,EANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBN,CADF;AA8BH;;AAAA;AAED;;;;AAIA,eAAeN,OAAf","sourcesContent":["/**\n * Dependencies\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport UpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { green, red } from '@material-ui/core/colors';\nimport Box from '@material-ui/core/Box';\nimport CarAddModal from './CarAddModal';\n/**\n *  Import styles\n */\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n    position: 'relative',\n    minHeight: 200,\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  fabGreen: {\n    color: theme.palette.common.white,\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[600],\n    },\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n/**\n * Define component\n */\n\n\n\n\nfunction CarShow(props) {\n  const classes = useStyles();\n\n\n  \n    return (\n      <>\n        \n        <h1>My Cars</h1>\n\n        <Fab color=\"primary\" aria-label=\"add\" className={classes.margin}>\n          <AddIcon />\n        </Fab>\n\n        <CarAddModal\n                open={open}\n                onClose={handleClose}\n                titleText={\"Invoice created\"}\n                bodyText={\"\"}\n                redirect={\"/mediator-cases\"}\n                redirectText={\"Mediator Cases\"}\n            />\n\n            <CarAddModal\n                open={errorOpen}\n                onClose={handleErrorClose}\n                titleText={\"Error creating invoice\"}\n                bodyText={\"Please try again\"}\n                redirect={\"\"}\n                redirectText={\"\"}\n            />\n\n\n      </>\n    );\n};\n\n/**\n * Export component\n */\n\nexport default CarShow;\n"]},"metadata":{},"sourceType":"module"}