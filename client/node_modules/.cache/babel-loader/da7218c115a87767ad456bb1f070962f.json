{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/Posts.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { axiosWithAuth } from '../helpers/index';\nimport IndividualPost from './IndividualPost';\nimport { connect } from 'react-redux';\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\"; // import { changeOrderPosts } from \"../store/actions/postActions\";\n// import { fetchPosts } from \"../store/actions/postActions\";\n\nimport Pagination from './Pagination';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Search from \"./Search\";\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/Select';\nimport OrderPosts from './OrderPosts';\nimport axios from 'axios';\n\nfunction Posts(props) {\n  const [searchPosts, setsearchPosts] = useState([]);\n  const [initalLoadPosts, setInitialLoadPosts] = useState([]);\n  const [numPages, setNumPages] = useState(); //  const [orderBy,setOrderBy] = useState({\n  //    order:props.orderPosts\n  //   })\n\n  async function searchPostsHandler(term) {\n    axiosWithAuth().post('/post/search', {\n      searchTerm: term\n    }).then(res => {\n      setsearchPosts(res.data);\n      props.toggleSearchToTrue();\n    }).catch(err => {});\n  }\n\n  ;\n  useEffect(() => {\n    onFirstLoad();\n  }, [props.currentPage]); // useEffect(()=>{\n  //   props.fetchFilteredPosts(\"AllPosts\",'date')\n  // },[])\n\n  function onFirstLoad() {\n    axios.post(`${process.env.REACT_APP_API_URL}/post/filterCategory`, {\n      category: 'AllPosts',\n      order: 'date',\n      currentPage: props.currentPage\n    }).then(res => {\n      setInitialLoadPosts(res.data.data);\n      setNumPages(res.data.pagination.lastPage);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  console.log(props.currentPage, \"currentPage from redux in posts copnoent\");\n  console.log(numPages, \"pages num in posts\"); // useEffect(() => {\n  //   props.fetchFilteredPosts(\"AllPosts\",'date')\n  // });\n  // const handleChange = name => event => {\n  //   setOrderBy({\n  //     ...orderBy,\n  //     [name]: event.target.value,\n  //   });\n  // };\n\n  if (props.searchToggle === true) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Search, {\n      searchPostsHandler: searchPostsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Pagination, {\n      numPages: numPages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(OrderPosts, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, searchPosts.map(p => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IndividualPost, {\n        post: p,\n        key: caches.uid,\n        fetchPosts: props.fetchFilteredPosts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 19\n        }\n      }));\n    })));\n  } else if (props.filteredPosts.length < 1 && props.searchToggle === false) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Search, {\n      searchPostsHandler: searchPostsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Pagination, {\n      numPages: numPages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(OrderPosts, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }\n    }, initalLoadPosts.map(p => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IndividualPost, {\n        post: p,\n        key: caches.uid,\n        fetchPosts: props.fetchFilteredPosts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 19\n        }\n      }));\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Search, {\n      searchPostsHandler: searchPostsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Pagination, {\n      numPages: props.filteredPosts.pagination.lastPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(OrderPosts, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, props.filteredPosts.data.map(p => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IndividualPost, {\n        post: p,\n        numPages: props.filteredPosts.pagination.lastPage,\n        fetchPosts: props.fetchFilteredPosts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }\n      }));\n    })));\n  }\n}\n\n;\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts,\n  orderPosts: state.post.order,\n  currentPage: state.post.currentpage\n});\n\nexport default connect(mapStateToProps, {\n  toggleSearchToTrue,\n  fetchFilteredPosts\n})(Posts);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/Posts.js"],"names":["React","useState","useEffect","axiosWithAuth","IndividualPost","connect","fetchFilteredPosts","toggleSearchToTrue","Pagination","ExpandMoreIcon","Search","Select","InputLabel","OrderPosts","axios","Posts","props","searchPosts","setsearchPosts","initalLoadPosts","setInitialLoadPosts","numPages","setNumPages","searchPostsHandler","term","post","searchTerm","then","res","data","catch","err","onFirstLoad","currentPage","process","env","REACT_APP_API_URL","category","order","pagination","lastPage","console","log","searchToggle","display","flexDirection","alignItems","map","p","caches","uid","filteredPosts","length","mapStateToProps","state","myposts","posts","orderPosts","currentpage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,SAASC,kBAAT,QAAmC,8BAAnC,C,CACA;AACA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAEpB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAM,CAACkB,eAAD,EAAkBC,mBAAlB,IAAyCnB,QAAQ,CAAC,EAAD,CAAvD;AAEA,QAAM,CAACoB,QAAD,EAAUC,WAAV,IAAyBrB,QAAQ,EAAvC,CANoB,CAQtB;AAEA;AAEA;;AAEE,iBAAesB,kBAAf,CAAkCC,IAAlC,EAAwC;AAEtCrB,IAAAA,aAAa,GACVsB,IADH,CACQ,cADR,EACwB;AAAEC,MAAAA,UAAU,EAAEF;AAAd,KADxB,EAEGG,IAFH,CAEQC,GAAG,IAAI;AACXV,MAAAA,cAAc,CAACU,GAAG,CAACC,IAAL,CAAd;AACAb,MAAAA,KAAK,CAACT,kBAAN;AACD,KALH,EAMGuB,KANH,CAMSC,GAAG,IAAI,CACb,CAPH;AAQD;;AAAA;AAGA7B,EAAAA,SAAS,CAAC,MAAM;AACf8B,IAAAA,WAAW;AACZ,GAFS,EAEP,CAAChB,KAAK,CAACiB,WAAP,CAFO,CAAT,CA3BmB,CAiCtB;AACA;AACA;;AAIE,WAASD,WAAT,GAAsB;AAEnBlB,IAAAA,KAAK,CACHW,IADF,CACQ,GAAES,OAAO,CAACC,GAAR,CAAYC,iBAAkB,sBADxC,EAC+D;AAAEC,MAAAA,QAAQ,EAAE,UAAZ;AAAyBC,MAAAA,KAAK,EAAE,MAAhC;AAAwCL,MAAAA,WAAW,EAACjB,KAAK,CAACiB;AAA1D,KAD/D,EAEEN,IAFF,CAEOC,GAAG,IAAI;AACXR,MAAAA,mBAAmB,CAACQ,GAAG,CAACC,IAAJ,CAASA,IAAV,CAAnB;AACAP,MAAAA,WAAW,CAACM,GAAG,CAACC,IAAJ,CAASU,UAAT,CAAoBC,QAArB,CAAX;AAED,KANF,EAOEV,KAPF,CAOQC,GAAG,IAAI;AACZU,MAAAA,OAAO,CAACC,GAAR,CAAYX,GAAZ;AACD,KATF;AAYF;;AAEDU,EAAAA,OAAO,CAACC,GAAR,CAAY1B,KAAK,CAACiB,WAAlB,EAA8B,0CAA9B;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYrB,QAAZ,EAAqB,oBAArB,EAxDoB,CA0DpB;AACA;AACA;AACF;AACA;AACA;AACA;AACA;AAEA;;AAOE,MAAIL,KAAK,CAAC2B,YAAN,KAAuB,IAA3B,EAAiC;AAE/B,wBAEE,uDAEE,oBAAC,MAAD;AAAQ,MAAA,kBAAkB,EAAEpB,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAIE,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAEF,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAQE;AAAK,MAAA,KAAK,EAAE;AAAEuB,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,aAAa,EAAE,QAAlC;AAA4CC,QAAAA,UAAU,EAAE;AAAxD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII7B,WAAW,CAAC8B,GAAZ,CAAgBC,CAAC,IAAI;AACnB,0BACE,uDACE,oBAAC,cAAD;AAAgB,QAAA,IAAI,EAAEA,CAAtB;AAAyB,QAAA,GAAG,EAAEC,MAAM,CAACC,GAArC;AAA2C,QAAA,UAAU,EAAElC,KAAK,CAACV,kBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD,KAND,CAJJ,CARF,CAFF;AAgCD,GAlCD,MAmCG,IAAIU,KAAK,CAACmC,aAAN,CAAoBC,MAApB,GAA6B,CAA7B,IAAkCpC,KAAK,CAAC2B,YAAN,KAAuB,KAA7D,EAAmE;AAEtE,wBACE,uDAEE,oBAAC,MAAD;AAAQ,MAAA,kBAAkB,EAAEpB,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAIE,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAEF,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAOE;AAAK,MAAA,KAAK,EAAE;AAAEuB,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,aAAa,EAAE,QAAlC;AAA4CC,QAAAA,UAAU,EAAE;AAAxD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGO3B,eAAe,CAAC4B,GAAhB,CAAoBC,CAAC,IAAI;AAExB,0BACE,uDACE,oBAAC,cAAD;AAAgB,QAAA,IAAI,EAAEA,CAAtB;AAAyB,QAAA,GAAG,EAAEC,MAAM,CAACC,GAArC;AAA2C,QAAA,UAAU,EAAElC,KAAK,CAACV,kBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD,KAPA,CAHP,CAPF,CADF;AA0BD,GA5BI,MA8BG;AACJ,wBACE,uDAEE,oBAAC,MAAD;AAAQ,MAAA,kBAAkB,EAAEiB,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAKE,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAEP,KAAK,CAACmC,aAAN,CAAoBZ,UAApB,CAA+BC,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAME,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAQE;AAAK,MAAA,KAAK,EAAE;AAAEI,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,aAAa,EAAE,QAAlC;AAA4CC,QAAAA,UAAU,EAAE;AAAxD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGO9B,KAAK,CAACmC,aAAN,CAAoBtB,IAApB,CAAyBkB,GAAzB,CAA6BC,CAAC,IAAI;AACjC,0BACE,uDACE,oBAAC,cAAD;AAAgB,QAAA,IAAI,EAAEA,CAAtB;AAA0B,QAAA,QAAQ,EAAEhC,KAAK,CAACmC,aAAN,CAAoBZ,UAApB,CAA+BC,QAAnE;AAA6E,QAAA,UAAU,EAAExB,KAAK,CAACV,kBAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD,KANA,CAHP,CARF,CADF;AA2BD;AAIF;;AAAA;;AAGD,MAAM+C,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,YAAY,EAAEW,KAAK,CAAC7B,IAAN,CAAWkB,YADO;AAEhCY,EAAAA,OAAO,EAAED,KAAK,CAAC7B,IAAN,CAAW+B,KAFY;AAGhCL,EAAAA,aAAa,EAAEG,KAAK,CAAC7B,IAAN,CAAW0B,aAHM;AAIhCM,EAAAA,UAAU,EAAEH,KAAK,CAAC7B,IAAN,CAAWa,KAJS;AAKhCL,EAAAA,WAAW,EAAEqB,KAAK,CAAC7B,IAAN,CAAWiC;AALQ,CAAL,CAA7B;;AAOA,eAAerD,OAAO,CACpBgD,eADoB,EAEpB;AAAE9C,EAAAA,kBAAF;AAAsBD,EAAAA;AAAtB,CAFoB,CAAP,CAGbS,KAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { axiosWithAuth } from '../helpers/index';\nimport IndividualPost from './IndividualPost'\nimport { connect } from 'react-redux';\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\";\n// import { changeOrderPosts } from \"../store/actions/postActions\";\n// import { fetchPosts } from \"../store/actions/postActions\";\nimport Pagination from './Pagination'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Search from \"./Search\";\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/Select';\nimport OrderPosts from './OrderPosts'\nimport axios from 'axios';\n\n\n\nfunction Posts(props) {\n\n  const [searchPosts, setsearchPosts] = useState([])\n\n  const [initalLoadPosts, setInitialLoadPosts] = useState([])\n\n  const [numPages,setNumPages] = useState()\n  \n//  const [orderBy,setOrderBy] = useState({\n\n//    order:props.orderPosts\n\n//   })\n  \n  async function searchPostsHandler(term) {\n\n    axiosWithAuth()\n      .post('/post/search', { searchTerm: term })\n      .then(res => {\n        setsearchPosts(res.data)\n        props.toggleSearchToTrue()\n      })\n      .catch(err => {\n      });\n  };\n\n\n   useEffect(() => {\n    onFirstLoad()\n  }, [props.currentPage]);\n\n\n\n// useEffect(()=>{\n//   props.fetchFilteredPosts(\"AllPosts\",'date')\n// },[])\n\n\n\n  function onFirstLoad(){\n\n     axios\n      .post(`${process.env.REACT_APP_API_URL}/post/filterCategory`, { category: 'AllPosts' , order: 'date', currentPage:props.currentPage })\n      .then(res => {\n        setInitialLoadPosts(res.data.data)\n        setNumPages(res.data.pagination.lastPage)\n        \n      })\n      .catch(err => {\n        console.log(err)\n      });\n\n  \n  }\n\n  console.log(props.currentPage,\"currentPage from redux in posts copnoent\")\n  console.log(numPages,\"pages num in posts\")\n\n  // useEffect(() => {\n  //   props.fetchFilteredPosts(\"AllPosts\",'date')\n  // });\n// const handleChange = name => event => {\n//   setOrderBy({\n//     ...orderBy,\n//     [name]: event.target.value,\n//   });\n\n// };\n\n\n\n  \n\n\n  if (props.searchToggle === true) {\n\n    return (\n\n      <>\n\n        <Search searchPostsHandler={searchPostsHandler} />\n       \n        <Pagination numPages={numPages}/>\n        <OrderPosts/>\n\n\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n\n          {\n\n            searchPosts.map(p => {\n              return (\n                <>\n                  <IndividualPost post={p} key={caches.uid}  fetchPosts={props.fetchFilteredPosts} />\n                </>\n              );\n            })\n\n\n          }\n\n\n\n        </div>\n        {/* <Pagination numPages={numPages}/> */}\n      </>\n\n    )\n  }\nelse if( props.filteredPosts.length < 1 && props.searchToggle === false){\n\n  return (\n    <>\n\n      <Search searchPostsHandler={searchPostsHandler} />\n\n      <Pagination numPages={numPages}/>\n      <OrderPosts/>\n     \n      <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n\n     \n            {initalLoadPosts.map(p => {\n\n              return (\n                <>\n                  <IndividualPost post={p} key={caches.uid}  fetchPosts={props.fetchFilteredPosts} />\n                </>\n              );\n            })}\n        \n\n\n      </div>\n      {/* <Pagination numPages={numPages}/> */}\n    </>\n  );\n}\n\n  else  {\n    return (\n      <>\n\n        <Search searchPostsHandler={searchPostsHandler} />\n\n        \n        <Pagination numPages={props.filteredPosts.pagination.lastPage}/>\n        <OrderPosts />\n\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n\n       \n              {props.filteredPosts.data.map(p => {\n                return (\n                  <>\n                    <IndividualPost post={p}  numPages={props.filteredPosts.pagination.lastPage} fetchPosts={props.fetchFilteredPosts} />\n                  </>\n                );\n              })}\n          \n  \n\n        </div>\n        {/* <Pagination numPages={numPages}/> */}\n\n      </>\n    );\n  }\n  \n\n\n};\n\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts,\n  orderPosts: state.post.order,\n  currentPage :state.post.currentpage\n});\nexport default connect(\n  mapStateToProps,\n  { toggleSearchToTrue, fetchFilteredPosts }\n)(Posts);"]},"metadata":{},"sourceType":"module"}