{"ast":null,"code":"import _slicedToArray from \"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/ProfileImageUpload.js\";\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport axiosWithAuth from '../helpers/axiosWithAuth';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport ProfileImageShow from './ProfileImageShow';\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\nimport { connect } from 'react-redux';\nimport { fetchProfileImage } from \"../store/actions/settingsActions\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction ProfileImageUpload(props) {\n  const classes = useStyles(); // const [userImage, setUserImage] = useState({});\n\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        file = _useState2[0],\n        setFile = _useState2[1];\n\n  const userId = localStorage.getItem('id');\n  useEffect(() => {\n    props.fetchProfileImage(userId);\n  }, [file]); // async function fetchProfileImage() {\n  //     let userImages = await axiosWithAuth().get(`/users/image/${userId}`)\n  //     setUserImage(userImages.data);\n  //     return userImages;\n  // }\n\n  function handleInputChanges(e) {\n    e.preventDefault();\n    const file = e.target.files[0];\n\n    if (!file) {\n      return;\n    }\n\n    if (file && file.size > 1e8) {\n      alert(\"File is too large. Maximum limit is 100MB.\");\n      e.target.value = '';\n    } else {\n      setFile(file);\n    }\n  }\n\n  function handleSubmitUploaderProfilePicture(e) {\n    e.preventDefault(); // Create file ref (Example: /documents/:car_id/:file_name)\n\n    const fileRef = imagesRef.child(\"\".concat(userId, \"/\").concat(file.name)); // Upload file\n\n    fileRef.put(file).then(snapshot => {\n      // console.log('Upload success!', snapshot.constructor, snapshot);\n      axiosWithAuth().post(\"/users/image/\".concat(userId), {\n        file_name: file.name\n      }).then(res => {\n        props.fetchProfileImage(userId);\n        window.location.reload();\n      }).catch(error => {\n        console.error(error);\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  if (props.userImage.length > 0) {\n    return React.createElement(React.Fragment, null, userImage.map((image, index) => {\n      return React.createElement(ProfileImageShow, {\n        key: index,\n        userId: userId,\n        image: props.userImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      });\n    }));\n  } else {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      style: {\n        height: \"200px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, props.carFix ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"no image\") : null, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: \"column\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: handleSubmitUploaderProfilePicture,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      required: true,\n      id: \"uploader\",\n      type: \"file\",\n      accept: \"image/*,.pdf,.doc\",\n      onChange: handleInputChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      name: \"car_type\",\n      color: \"default\",\n      className: classes.button,\n      startIcon: React.createElement(CloudUploadIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Upload\")))));\n  }\n}\n\nconst mapStateToProps = state => ({\n  userImage: state.setting.userImage\n});\n\nexport default connect(mapStateToProps, {\n  fetchProfileImage\n})(ProfileImageUpload);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/ProfileImageUpload.js"],"names":["React","useEffect","useState","imagesRef","axiosWithAuth","Button","makeStyles","CloudUploadIcon","ProfileImageShow","DriveEtaIcon","connect","fetchProfileImage","useStyles","theme","button","margin","spacing","ProfileImageUpload","props","classes","file","setFile","userId","localStorage","getItem","handleInputChanges","e","preventDefault","target","files","size","alert","value","handleSubmitUploaderProfilePicture","fileRef","child","name","put","then","snapshot","post","file_name","res","window","location","reload","catch","error","console","err","userImage","length","map","image","index","height","carFix","display","flexDirection","mapStateToProps","state","setting"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport axiosWithAuth from '../helpers/axiosWithAuth';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport ProfileImageShow from './ProfileImageShow';\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\nimport { connect } from 'react-redux';\nimport { fetchProfileImage } from \"../store/actions/settingsActions\";\n\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n      margin: theme.spacing(1),\n    },\n  }));\n\nfunction ProfileImageUpload(props) {\n\n    const classes = useStyles();\n\n    \n    \n    // const [userImage, setUserImage] = useState({});\n    const [file, setFile] = useState({});\n    const userId = localStorage.getItem('id');\n\n    useEffect(() => {\n\n      \n        props.fetchProfileImage(userId);\n        \n    }, [file]);\n\n\n    // async function fetchProfileImage() {\n    //     let userImages = await axiosWithAuth().get(`/users/image/${userId}`)\n    //     setUserImage(userImages.data);\n    //     return userImages;\n    // }\n\n    function handleInputChanges(e) {\n        e.preventDefault();\n        const file = e.target.files[0]\n        if (!file) {\n            return;\n        }\n        if (file && file.size > 1e8) {\n            alert(\"File is too large. Maximum limit is 100MB.\")\n            e.target.value = ''\n        } else {\n            setFile(file);\n        }\n    }\n\n\n    function handleSubmitUploaderProfilePicture(e) {\n        e.preventDefault()\n        // Create file ref (Example: /documents/:car_id/:file_name)\n        const fileRef = imagesRef.child(`${userId}/${file.name}`)\n        // Upload file\n        fileRef.put(file).then((snapshot) => {\n            // console.log('Upload success!', snapshot.constructor, snapshot);\n            axiosWithAuth().post(`/users/image/${userId}`, { file_name: file.name })\n                .then(res => {\n                    props.fetchProfileImage(userId);\n                    window.location.reload();               \n                 })\n                .catch(error => {\n                    console.error(error);\n                })\n        }).catch(err => {\n            console.error(err)\n        });\n    }\n\n\n    if(props.userImage.length >0 ){\n        return (\n        <>\n                    {userImage.map((image, index) => {\n                        return <ProfileImageShow key={index} userId={userId} image={props.userImage}/>\n                    })} \n        </>\n        )\n    }\n      \n    else{\n        return (\n            <>\n                <div style={{height:\"200px\"}}>\n                {(props.carFix ? <p>no image</p>: null)} \n                <div style={{display:'flex',flexDirection:\"column\"}}>\n                 <form onSubmit={handleSubmitUploaderProfilePicture}> \n                <input required id=\"uploader\" type=\"file\" accept=\"image/*,.pdf,.doc\" onChange={handleInputChanges}></input>\n                    <Button\n                    variant=\"contained\"\n                    name=\"car_type\"\n                    color=\"default\"\n                    className={classes.button}\n                    startIcon={<CloudUploadIcon />}\n                    type =\"submit\"\n                    >\n                    Upload\n                </Button>\n                </form>\n                </div>\n                </div>                \n            </>\n        )\n\n    }\n  \n        \n    \n   \n        \n    \n}\n\n\nconst mapStateToProps = state => ({\n    userImage : state.setting.userImage\n  });\n  export default connect(\n    mapStateToProps,\n    {fetchProfileImage}\n  )(ProfileImageUpload);\n  \n"]},"metadata":{},"sourceType":"module"}