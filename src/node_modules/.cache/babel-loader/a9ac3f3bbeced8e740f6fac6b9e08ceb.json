{"ast":null,"code":"/** @preserve\n  * package: sweetalert2-react-content v3.0.0\n  * file: dist/sweetalert2-react-content.umd.js\n  * homepage: https://github.com/sweetalert2/sweetalert2-react-content#readme\n  * license: MIT\n  **/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('react'), require('react-dom')) : typeof define === 'function' && define.amd ? define(['react', 'react-dom'], factory) : (global = global || self, global.sweetalert2ReactContent = factory(global.React, global.ReactDOM));\n})(this, function (React, ReactDOM) {\n  'use strict';\n\n  React = React && React.hasOwnProperty('default') ? React['default'] : React;\n  ReactDOM = ReactDOM && ReactDOM.hasOwnProperty('default') ? ReactDOM['default'] : ReactDOM;\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n  }\n\n  function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    return _assertThisInitialized(self);\n  }\n\n  function _superPropBase(object, property) {\n    while (!Object.prototype.hasOwnProperty.call(object, property)) {\n      object = _getPrototypeOf(object);\n      if (object === null) break;\n    }\n\n    return object;\n  }\n\n  function _get(target, property, receiver) {\n    if (typeof Reflect !== \"undefined\" && Reflect.get) {\n      _get = Reflect.get;\n    } else {\n      _get = function _get(target, property, receiver) {\n        var base = _superPropBase(target, property);\n\n        if (!base) return;\n        var desc = Object.getOwnPropertyDescriptor(base, property);\n\n        if (desc.get) {\n          return desc.get.call(receiver);\n        }\n\n        return desc.value;\n      };\n    }\n\n    return _get(target, property, receiver || target);\n  }\n\n  var mounts = [{\n    key: 'title',\n    getter: function getter(swal) {\n      return swal.getTitle();\n    }\n  }, {\n    key: 'html',\n    getter: function getter(swal) {\n      return swal.getHtmlContainer();\n    }\n  }, {\n    key: 'confirmButtonText',\n    getter: function getter(swal) {\n      return swal.getConfirmButton();\n    }\n  }, {\n    key: 'cancelButtonText',\n    getter: function getter(swal) {\n      return swal.getCancelButton();\n    }\n  }, {\n    key: 'footer',\n    getter: function getter(swal) {\n      return swal.getFooter();\n    }\n  }];\n\n  var noop = function noop() {}; // eslint-disable-line @typescript-eslint/no-empty-function\n\n\n  var error = function error(message) {\n    return new Error(\"sweetalert2-react-content: \".concat(message));\n  };\n\n  function withReactContent(ParentSwal) {\n    return (\n      /*#__PURE__*/\n      function (_ParentSwal) {\n        _inherits(_class, _ParentSwal);\n\n        function _class() {\n          _classCallCheck(this, _class);\n\n          return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n        }\n\n        _createClass(_class, [{\n          key: \"_main\",\n          value: function _main(params) {\n            params = Object.assign({}, params);\n            params.onOpen = params.onOpen || noop;\n            params.onDestroy = params.onDestroy || noop;\n            mounts.forEach(function (_ref) {\n              var key = _ref.key,\n                  getter = _ref.getter;\n\n              if (React.isValidElement(params[key])) {\n                var reactElement = params[key];\n                params[key] = ' ';\n                var domElement;\n                var superOnOpen = params.onOpen;\n\n                params.onOpen = function (element) {\n                  domElement = getter(ParentSwal);\n                  ReactDOM.render(reactElement, domElement);\n                  superOnOpen(element);\n                };\n\n                var superOnDestroy = params.onDestroy;\n\n                params.onDestroy = function (element) {\n                  superOnDestroy(element);\n                  ReactDOM.unmountComponentAtNode(domElement);\n                };\n              }\n            });\n            return _get(_getPrototypeOf(_class.prototype), \"_main\", this).call(this, params);\n          }\n        }, {\n          key: \"update\",\n          value: function update() {\n            throw error('Swal.update() is not yet supported. See https://github.com/sweetalert2/sweetalert2-react-content/issues/73');\n          }\n        }], [{\n          key: \"argsToParams\",\n          value: function argsToParams(args) {\n            if (React.isValidElement(args[0]) || React.isValidElement(args[1])) {\n              var params = {};\n              ['title', 'html', 'icon'].forEach(function (name, index) {\n                if (args[index] !== undefined) {\n                  params[name] = args[index];\n                }\n              });\n              return params;\n            } else {\n              return ParentSwal.argsToParams(args);\n            }\n          }\n        }]);\n\n        return _class;\n      }(ParentSwal)\n    );\n  }\n\n  return withReactContent;\n});","map":null,"metadata":{},"sourceType":"script"}