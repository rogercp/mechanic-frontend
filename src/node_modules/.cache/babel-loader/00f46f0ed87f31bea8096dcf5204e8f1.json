{"ast":null,"code":"import _slicedToArray from \"/Users/roger/Projects/mechanic-frontend/mechanic/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/mechanic/src/components/CarImgUpload.js\";\n\n/**\n * Dependencies\n */\nimport React, { useEffect, useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { imagesRef } from '../helpers/firebase';\nimport axiosWithAuth from '../helpers/axiosithAuth';\n/**\n * Define component\n */\n\nfunction CarImgUpload(props) {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        file = _useState2[0],\n        setFile = _useState2[1];\n\n  function handleInputChanges(e) {\n    e.preventDefault();\n    const file = e.target.files[0];\n\n    if (!file) {\n      return;\n    }\n\n    if (file && file.size > 1e8) {\n      alert(\"File is too large. Maximum limit is 100MB.\");\n      e.target.value = '';\n    } else {\n      setFile(file);\n    }\n  }\n\n  function handleSubmitUploader(e) {\n    e.preventDefault(); // Create file ref (Example: /documents/:car_id/:file_name)\n\n    const fileRef = imagesRef.child(\"\".concat(props.case.id, \"/\").concat(file.name)); // Upload file\n\n    fileRef.put(file).then(snapshot => {\n      console.log('Upload success!', snapshot.constructor, snapshot);\n      axiosWithAuth().post(\"/cars/\".concat(props.car.id), {\n        file_name: file.name\n      }).then(res => {\n        console.log(\"success\");\n      }).catch(error => {\n        console.error(error);\n      });\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"There are no documents currently uploaded. Upload relevant case documents by clicking the button below.\"), React.createElement(\"form\", {\n    onSubmit: handleSubmitUploader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    required: true,\n    id: \"uploader\",\n    type: \"file\",\n    accept: \"image/*,.pdf,.doc\",\n    onChange: handleInputChanges,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Upload\")));\n}\n/**\n *  Export component\n */\n\n\nexport default CarImgUpload;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/mechanic/src/components/CarImgUpload.js"],"names":["React","useEffect","useState","Typography","imagesRef","axiosWithAuth","CarImgUpload","props","file","setFile","handleInputChanges","e","preventDefault","target","files","size","alert","value","handleSubmitUploader","fileRef","child","case","id","name","put","then","snapshot","console","log","constructor","post","car","file_name","res","catch","error"],"mappings":";;;AAAA;;;AAIA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AAEA;;;;AAIA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,oBACDL,QAAQ,CAAC,EAAD,CADP;AAAA;AAAA,QAClBM,IADkB;AAAA,QACZC,OADY;;AAGzB,WAASC,kBAAT,CAA4BC,CAA5B,EAA+B;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMJ,IAAI,GAAGG,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;;AACA,QAAI,CAACN,IAAL,EAAW;AACP;AACH;;AACD,QAAIA,IAAI,IAAIA,IAAI,CAACO,IAAL,GAAY,GAAxB,EAA6B;AACzBC,MAAAA,KAAK,CAAC,4CAAD,CAAL;AACAL,MAAAA,CAAC,CAACE,MAAF,CAASI,KAAT,GAAiB,EAAjB;AACH,KAHD,MAGO;AACHR,MAAAA,OAAO,CAACD,IAAD,CAAP;AACH;AACJ;;AAED,WAASU,oBAAT,CAA8BP,CAA9B,EAAiC;AAC7BA,IAAAA,CAAC,CAACC,cAAF,GAD6B,CAG7B;;AACA,UAAMO,OAAO,GAAGf,SAAS,CAACgB,KAAV,WAAmBb,KAAK,CAACc,IAAN,CAAWC,EAA9B,cAAoCd,IAAI,CAACe,IAAzC,EAAhB,CAJ6B,CAM7B;;AACAJ,IAAAA,OAAO,CAACK,GAAR,CAAYhB,IAAZ,EAAkBiB,IAAlB,CAAwBC,QAAD,IAAc;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,QAAQ,CAACG,WAAxC,EAAqDH,QAArD;AACArB,MAAAA,aAAa,GAAGyB,IAAhB,iBAA8BvB,KAAK,CAACwB,GAAN,CAAUT,EAAxC,GAA8C;AAAEU,QAAAA,SAAS,EAAExB,IAAI,CAACe;AAAlB,OAA9C,EACKE,IADL,CACUQ,GAAG,IAAI;AACTN,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,OAHL,EAIKM,KAJL,CAIWC,KAAK,IAAI;AACZR,QAAAA,OAAO,CAACQ,KAAR,CAAcA,KAAd;AACH,OANL;AAOH,KATD;AAUH;;AAGG,SACI,0CACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+GADJ,EAGI;AAAM,IAAA,QAAQ,EAAEjB,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,QAAQ,MAAf;AAAgB,IAAA,EAAE,EAAC,UAAnB;AAA8B,IAAA,IAAI,EAAC,MAAnC;AAA0C,IAAA,MAAM,EAAC,mBAAjD;AAAqE,IAAA,QAAQ,EAAER,kBAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CAHJ,CADJ;AAWP;AAED;;;;;AAIA,eAAeJ,YAAf","sourcesContent":["/**\n * Dependencies\n */\n\nimport React, { useEffect, useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { imagesRef } from '../helpers/firebase';\nimport axiosWithAuth from '../helpers/axiosithAuth';\n\n/**\n * Define component\n */\n\nfunction CarImgUpload(props) {\n    const [file, setFile] = useState({});\n\n    function handleInputChanges(e) {\n        e.preventDefault();\n        const file = e.target.files[0]\n        if (!file) {\n            return;\n        }\n        if (file && file.size > 1e8) {\n            alert(\"File is too large. Maximum limit is 100MB.\")\n            e.target.value = ''\n        } else {\n            setFile(file);\n        }\n    }\n\n    function handleSubmitUploader(e) {\n        e.preventDefault()\n\n        // Create file ref (Example: /documents/:car_id/:file_name)\n        const fileRef = imagesRef.child(`${props.case.id}/${file.name}`)\n\n        // Upload file\n        fileRef.put(file).then((snapshot) => {\n            console.log('Upload success!', snapshot.constructor, snapshot);\n            axiosWithAuth().post(`/cars/${props.car.id}`, { file_name: file.name })\n                .then(res => {\n                    console.log(\"success\")\n                })\n                .catch(error => {\n                    console.error(error);\n                })\n        })\n    }\n\n   \n        return (\n            <>\n                <Typography>There are no documents currently uploaded. Upload relevant case documents by clicking the button below.</Typography>\n\n                <form onSubmit={handleSubmitUploader}>\n                    <input required id=\"uploader\" type=\"file\" accept=\"image/*,.pdf,.doc\" onChange={handleInputChanges}></input>\n                    <button type=\"submit\">Upload</button>\n                </form>\n            </>\n        )\n    \n}\n\n/**\n *  Export component\n */\n\nexport default CarImgUpload;\n"]},"metadata":{},"sourceType":"module"}