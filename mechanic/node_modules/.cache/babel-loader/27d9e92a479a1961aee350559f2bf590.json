{"ast":null,"code":"/**\n * Dependencies\n */\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport firebase from 'firebase';\nimport uuid from 'uuid';\nimport axios from 'axios';\n/**\n * Define route component\n */\n\nconst PrivateRoute = ({\n  component: Component,\n  errorBoundary: ErrorBoundary,\n  path,\n  exact\n}) => {\n  firebase.auth().onAuthStateChanged(async user => {\n    if (user) {\n      let displayName = user.displayName;\n      let email = user.email;\n      let emailVerified = user.emailVerified;\n      let photoURL = user.photoURL;\n      let isAnonymous = user.isAnonymous;\n      let uid = user.uid;\n      let providerData = user.providerData;\n      let token = await user.getIdToken();\n      localStorage.setItem('token', token);\n      axios.post(\"\".concat(process.env.REACT_APP_API_URL, \"/users/auth\"), {\n        user: user,\n        token: token\n      }).then(res => {\n        localStorage.setItem('id', res.data.id);\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {// User is signed out.\n      // ...\n    }\n  }); // if (exact) {\n  //     return <Route key={uuid.v4()} exact path={path} render={props => (\n  //       <ErrorBoundary>\n  //         <Component {...props} />\n  //       </ErrorBoundary>\n  //     )} />\n  //   } else {\n  //     return <Route key={uuid.v4()} path={path} render={props => (\n  //       <ErrorBoundary>\n  //         <Component {...props} />\n  //       </ErrorBoundary>\n  //     )} />\n  //   }\n};\n/**\n * Export route component\n */\n\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-front/mechanic-frontend/mechanic/src/routes/helpers/PrivateRoute.js"],"names":["React","Route","firebase","uuid","axios","PrivateRoute","component","Component","errorBoundary","ErrorBoundary","path","exact","auth","onAuthStateChanged","user","displayName","email","emailVerified","photoURL","isAnonymous","uid","providerData","token","getIdToken","localStorage","setItem","post","process","env","REACT_APP_API_URL","then","res","data","id","catch","err","console","log"],"mappings":"AAAA;;;AAIA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;;;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,aAAa,EAAEC,aAAvC;AAAsDC,EAAAA,IAAtD;AAA4DC,EAAAA;AAA5D,CAAD,KAAyE;AAE1FT,EAAAA,QAAQ,CAACU,IAAT,GAAgBC,kBAAhB,CAAmC,MAAOC,IAAP,IAAc;AAE7C,QAAGA,IAAH,EAAQ;AAGN,UAAIC,WAAW,GAAGD,IAAI,CAACC,WAAvB;AACA,UAAIC,KAAK,GAAGF,IAAI,CAACE,KAAjB;AACA,UAAIC,aAAa,GAAGH,IAAI,CAACG,aAAzB;AACA,UAAIC,QAAQ,GAAGJ,IAAI,CAACI,QAApB;AACA,UAAIC,WAAW,GAAGL,IAAI,CAACK,WAAvB;AACA,UAAIC,GAAG,GAAGN,IAAI,CAACM,GAAf;AACA,UAAIC,YAAY,GAAGP,IAAI,CAACO,YAAxB;AAGE,UAAIC,KAAK,GAAG,MAAMR,IAAI,CAACS,UAAL,EAAlB;AAEAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BH,KAA7B;AAEAlB,MAAAA,KAAK,CAACsB,IAAN,WAAcC,OAAO,CAACC,GAAR,CAAYC,iBAA1B,kBAAyD;AACrDf,QAAAA,IAAI,EAACA,IADgD;AAErDQ,QAAAA,KAAK,EAACA;AAF+C,OAAzD,EAGGQ,IAHH,CAGQC,GAAG,IAAG;AACVP,QAAAA,YAAY,CAACC,OAAb,CAAqB,IAArB,EAA0BM,GAAG,CAACC,IAAJ,CAASC,EAAnC;AACH,OALD,EAKGC,KALH,CAKSC,GAAG,IAAG;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OAPD;AAQH,KAxBD,MAwBM,CACJ;AACA;AACD;AACJ,GA9BD,EAF0F,CAkC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,CAhDD;AAkDA;;;;;AAIA,eAAe9B,YAAf","sourcesContent":["/**\n * Dependencies\n */\n\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport firebase from 'firebase';\nimport uuid from 'uuid';\nimport axios from 'axios';\n\n/**\n * Define route component\n */\nconst PrivateRoute = ({ component: Component, errorBoundary: ErrorBoundary, path, exact }) => {\n\n    firebase.auth().onAuthStateChanged(async (user)=>{\n\n        if(user){\n            \n\n          let displayName = user.displayName;\n          let email = user.email;\n          let emailVerified = user.emailVerified;\n          let photoURL = user.photoURL;\n          let isAnonymous = user.isAnonymous;\n          let uid = user.uid;\n          let providerData = user.providerData;\n    \n\n            let token = await user.getIdToken()\n\n            localStorage.setItem('token',token)\n\n            axios.post(`${process.env.REACT_APP_API_URL}/users/auth`,{\n                user:user,\n                token:token\n            }).then(res =>{\n                localStorage.setItem('id',res.data.id)\n            }).catch(err =>{\n                console.log(err)\n            });\n        }else {\n          // User is signed out.\n          // ...\n        }\n    })\n\n    // if (exact) {\n    //     return <Route key={uuid.v4()} exact path={path} render={props => (\n    //       <ErrorBoundary>\n    //         <Component {...props} />\n    //       </ErrorBoundary>\n    //     )} />\n    //   } else {\n    //     return <Route key={uuid.v4()} path={path} render={props => (\n    //       <ErrorBoundary>\n    //         <Component {...props} />\n    //       </ErrorBoundary>\n    //     )} />\n    //   }\n\n}\n\n/**\n * Export route component\n */\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}