{"version":3,"file":"sweetalert2-react-content.cjs.min.js","sources":["../src/mounts.js","../src/index.js"],"sourcesContent":["export const mounts = [\n  {\n    key: 'title',\n    getter: swal => swal.getTitle(),\n  },\n  {\n    key: 'html',\n    getter: swal => swal.getHtmlContainer(),\n  },\n  {\n    key: 'confirmButtonText',\n    getter: swal => swal.getConfirmButton(),\n  },\n  {\n    key: 'cancelButtonText',\n    getter: swal => swal.getCancelButton(),\n  },\n  {\n    key: 'footer',\n    getter: swal => swal.getFooter(),\n  },\n]\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { mounts } from './mounts'\n\nconst noop = () => {} // eslint-disable-line @typescript-eslint/no-empty-function\nconst error = message => new Error(`sweetalert2-react-content: ${message}`)\n\nexport default function withReactContent (ParentSwal) {\n  return class extends ParentSwal {\n    static argsToParams (args) {\n      if (React.isValidElement(args[0]) || React.isValidElement(args[1])) {\n        const params = {}\n        ;['title', 'html', 'icon'].forEach((name, index) => {\n          if (args[index] !== undefined) {\n            params[name] = args[index]\n          }\n        })\n        return params\n      } else {\n        return ParentSwal.argsToParams(args)\n      }\n    }\n\n    _main (params) {\n      params = Object.assign({}, params)\n\n      params.onOpen = params.onOpen || noop\n      params.onDestroy = params.onDestroy || noop\n\n      mounts.forEach(({ key, getter }) => {\n        if (React.isValidElement(params[key])) {\n          const reactElement = params[key]\n          params[key] = ' '\n\n          let domElement\n\n          const superOnOpen = params.onOpen\n          params.onOpen = (element) => {\n            domElement = getter(ParentSwal)\n            ReactDOM.render(reactElement, domElement)\n            superOnOpen(element)\n          }\n\n          const superOnDestroy = params.onDestroy\n          params.onDestroy = (element) => {\n            superOnDestroy(element)\n            ReactDOM.unmountComponentAtNode(domElement)\n          }\n        }\n      })\n\n      return super._main(params)\n    }\n\n    update () {\n      throw error(\n        'Swal.update() is not yet supported. See https://github.com/sweetalert2/sweetalert2-react-content/issues/73',\n      )\n    }\n  }\n}\n"],"names":["mounts","key","getter","swal","getTitle","getHtmlContainer","getConfirmButton","getCancelButton","getFooter","noop","error","message","Error","withReactContent","ParentSwal","params","Object","assign","onOpen","onDestroy","forEach","React","isValidElement","domElement","reactElement","superOnOpen","element","ReactDOM","render","superOnDestroy","unmountComponentAtNode","args","name","index","undefined","argsToParams"],"mappings":";;;;;;irDAAO,IAAMA,OAAS,CACpB,CACEC,IAAK,QACLC,OAAQ,SAAAC,UAAQA,EAAKC,aAEvB,CACEH,IAAK,OACLC,OAAQ,SAAAC,UAAQA,EAAKE,qBAEvB,CACEJ,IAAK,oBACLC,OAAQ,SAAAC,UAAQA,EAAKG,qBAEvB,CACEL,IAAK,mBACLC,OAAQ,SAAAC,UAAQA,EAAKI,oBAEvB,CACEN,IAAK,SACLC,OAAQ,SAAAC,UAAQA,EAAKK,eCfnBC,KAAO,aACPC,MAAQ,SAAAC,UAAW,IAAIC,2CAAoCD,KAElD,SAASE,iBAAkBC,8MAgB/BC,UACLA,EAASC,OAAOC,OAAO,GAAIF,IAEpBG,OAASH,EAAOG,QAAUT,KACjCM,EAAOI,UAAYJ,EAAOI,WAAaV,KAEvCT,OAAOoB,SAAQ,gBAAGnB,IAAAA,IAAKC,IAAAA,UACjBmB,MAAMC,eAAeP,EAAOd,IAAO,KAIjCsB,EAHEC,EAAeT,EAAOd,GAC5Bc,EAAOd,GAAO,QAIRwB,EAAcV,EAAOG,OAC3BH,EAAOG,OAAS,SAACQ,GACfH,EAAarB,EAAOY,GACpBa,SAASC,OAAOJ,EAAcD,GAC9BE,EAAYC,QAGRG,EAAiBd,EAAOI,UAC9BJ,EAAOI,UAAY,SAACO,GAClBG,EAAeH,GACfC,SAASG,uBAAuBP,kEAKnBR,0CAIbL,MACJ,qJA/CiBqB,MACfV,MAAMC,eAAeS,EAAK,KAAOV,MAAMC,eAAeS,EAAK,IAAK,KAC5DhB,EAAS,UACb,QAAS,OAAQ,QAAQK,SAAQ,SAACY,EAAMC,QACpBC,IAAhBH,EAAKE,KACPlB,EAAOiB,GAAQD,EAAKE,OAGjBlB,SAEAD,EAAWqB,aAAaJ,UAXhBjB"}