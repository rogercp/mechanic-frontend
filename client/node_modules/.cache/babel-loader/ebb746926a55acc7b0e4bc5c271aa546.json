{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/CarFixImgUpload.js\";\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport axiosWithAuth from '../helpers/axiosWithAuth';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport ImageCarousel from './ImageCarousel';\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction CarFixImgUpload(props) {\n  const classes = useStyles();\n  const [carFixImages, setCarFixImages] = useState([]);\n  const [file, setFile] = useState({});\n  const [fullopen, setFullOpen] = useState(false);\n  const [errorOpen, setErrorOpen] = useState(false);\n\n  const handlefullOpen = () => {\n    setFullOpen(true);\n  };\n\n  const handlefullClose = () => {\n    setFullOpen(false);\n  };\n\n  function handleErrorClose() {\n    setErrorOpen(false);\n  }\n\n  function handleErrorOpen() {\n    setErrorOpen(true);\n  } // React.useCallback (()=>{\n  //     async function fetchFixDocuments() {\n  //            let fixImages = await axiosWithAuth().get(`/car_fix/${props.carFix.id}/car_fix_images`)\n  //             setCarFixImages(fixImages.data);\n  //             return fixImages;\n  //          }\n  // },[])\n\n\n  useEffect(() => {\n    fetchFixDocuments();\n  }, [file]);\n\n  async function fetchFixDocuments() {\n    let fixImages = await axiosWithAuth().get(`/car_fix/${props.carFix.id}/car_fix_images`);\n    setCarFixImages(fixImages.data);\n    return fixImages;\n  }\n\n  function handleInputChanges(e) {\n    e.preventDefault();\n    const file = e.target.files[0];\n\n    if (!file) {\n      return;\n    }\n\n    if (file && file.size > 1e8) {\n      alert(\"File is too large. Maximum limit is 100MB.\");\n      e.target.value = '';\n    } else {\n      setFile(file);\n    }\n  }\n\n  function handleSubmitUploaderFixDocuments(e) {\n    e.preventDefault(); // Create file ref (Example: /documents/:car_id/:file_name)\n\n    const fileRef = imagesRef.child(`${props.carFix.id}/${file.name}`); // Upload file\n\n    fileRef.put(file).then(snapshot => {\n      // console.log('Upload success!', snapshot.constructor, snapshot);\n      axiosWithAuth().post(`/car_fix/${props.carFix.id}/car_fix_images`, {\n        file_name: file.name\n      }).then(res => {\n        fetchFixDocuments();\n        window.location.reload();\n      }).catch(error => {\n        console.error(error);\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  if (props.isCarousel && carFixImages.length > 0) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        color: \"darkcyan\",\n        outline: '0'\n      },\n      onClick: handlefullOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, \"Images\"), /*#__PURE__*/React.createElement(ImageCarousel, {\n      isCarFixImages: true,\n      open: fullopen,\n      handleClose: handlefullClose,\n      onClose: handlefullClose,\n      carFixImages: carFixImages,\n      carFix: props.carFix,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"200px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, \"Add Image\"), /*#__PURE__*/React.createElement(ImageCarousel, {\n      style: {\n        backgroundColor: \"red\",\n        maxWidth: \"100px\"\n      },\n      isImageDelShowFor: true,\n      carFixImages: carFixImages,\n      carFix: props.carFix,\n      fetchFixDocuments: fetchFixDocuments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: \"column\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmitUploaderFixDocuments,\n      style: {\n        display: 'flex',\n        flexDirection: \"column\",\n        maxWidth: \"200px\",\n        justifyContent: \"Center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      required: true,\n      id: \"uploader\",\n      type: \"file\",\n      accept: \"image/*,.pdf,.doc\",\n      onChange: handleInputChanges,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      name: \"car_type\",\n      color: \"default\",\n      className: classes.button,\n      startIcon: /*#__PURE__*/React.createElement(CloudUploadIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 44\n        }\n      }),\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }\n    }, \"Upload\")))));\n  }\n}\n\nexport default CarFixImgUpload;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/CarFixImgUpload.js"],"names":["React","useEffect","useState","imagesRef","axiosWithAuth","Button","makeStyles","CloudUploadIcon","ImageCarousel","useStyles","theme","button","margin","spacing","CarFixImgUpload","props","classes","carFixImages","setCarFixImages","file","setFile","fullopen","setFullOpen","errorOpen","setErrorOpen","handlefullOpen","handlefullClose","handleErrorClose","handleErrorOpen","fetchFixDocuments","fixImages","get","carFix","id","data","handleInputChanges","e","preventDefault","target","files","size","alert","value","handleSubmitUploaderFixDocuments","fileRef","child","name","put","then","snapshot","post","file_name","res","window","location","reload","catch","error","console","err","isCarousel","length","color","outline","height","backgroundColor","maxWidth","display","flexDirection","justifyContent"],"mappings":"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","sourcesContent":["\n\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport axiosWithAuth from '../helpers/axiosWithAuth';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport ImageCarousel from './ImageCarousel';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        margin: theme.spacing(1),\n    },\n}));\n\nfunction CarFixImgUpload(props) {\n\n\n    const classes = useStyles();\n    const [carFixImages, setCarFixImages] = useState([]);\n    const [file, setFile] = useState({});\n\n    const [fullopen, setFullOpen] = useState(false);\n    const [errorOpen, setErrorOpen] = useState(false);\n\n\n    const handlefullOpen = () => {\n        setFullOpen(true);\n    };\n    const handlefullClose = () => {\n        setFullOpen(false);\n    };\n\n    function handleErrorClose() {\n        setErrorOpen(false);\n    }\n\n    function handleErrorOpen() {\n        setErrorOpen(true);\n    }\n\n\n    // React.useCallback (()=>{\n\n    //     async function fetchFixDocuments() {\n    //            let fixImages = await axiosWithAuth().get(`/car_fix/${props.carFix.id}/car_fix_images`)\n    //             setCarFixImages(fixImages.data);\n    //             return fixImages;\n    //          }\n\n    // },[])\n\n\n\n    useEffect(() => {\n\n\n        fetchFixDocuments()\n\n    }, [file]);\n\n    async function fetchFixDocuments() {\n        let fixImages = await axiosWithAuth().get(`/car_fix/${props.carFix.id}/car_fix_images`)\n        setCarFixImages(fixImages.data);\n        return fixImages;\n    }\n\n    function handleInputChanges(e) {\n        e.preventDefault();\n        const file = e.target.files[0]\n        if (!file) {\n            return;\n        }\n        if (file && file.size > 1e8) {\n            alert(\"File is too large. Maximum limit is 100MB.\")\n            e.target.value = ''\n        } else {\n            setFile(file);\n        }\n    }\n\n\n    function handleSubmitUploaderFixDocuments(e) {\n        e.preventDefault()\n        // Create file ref (Example: /documents/:car_id/:file_name)\n        const fileRef = imagesRef.child(`${props.carFix.id}/${file.name}`)\n        // Upload file\n        fileRef.put(file).then((snapshot) => {\n            // console.log('Upload success!', snapshot.constructor, snapshot);\n            axiosWithAuth().post(`/car_fix/${props.carFix.id}/car_fix_images`, { file_name: file.name })\n                .then(res => {\n                    fetchFixDocuments();\n                    window.location.reload();\n                })\n                .catch(error => {\n                    console.error(error);\n                })\n        }).catch(err => {\n            console.error(err)\n        });\n    }\n\n\n\n    if (props.isCarousel && carFixImages.length > 0) {\n        return (\n            <>\n\n                <Button\n                    style={{ color: \"darkcyan\", outline: '0' }}\n                    onClick={handlefullOpen}\n                >\n                    Images\n        </Button>\n\n                <ImageCarousel\n                    isCarFixImages={true}\n                    open={fullopen}\n                    handleClose={handlefullClose}\n                    onClose={handlefullClose}\n                    carFixImages={carFixImages}\n                    carFix={props.carFix}\n                />\n\n            </>\n        )\n    }\n\nelse{\n        \n        return (\n            <>\n                <div style={{ height: \"200px\" }}>\n                    <h4>Add Image</h4>\n\n                    <ImageCarousel\n                    style={{ backgroundColor: \"red\", maxWidth: \"100px\" }}\n                    isImageDelShowFor={true}\n                    carFixImages={carFixImages}\n                    carFix={props.carFix}\n                    fetchFixDocuments={fetchFixDocuments}\n\n                />\n                    <div style={{ display: 'flex', flexDirection: \"column\" }}>\n                        <form onSubmit={handleSubmitUploaderFixDocuments} style={{ display: 'flex', flexDirection: \"column\", maxWidth: \"200px\", justifyContent: \"Center\" }}>\n                            <input required id=\"uploader\" type=\"file\" accept=\"image/*,.pdf,.doc\" onChange={handleInputChanges}></input>\n                            <Button\n                                variant=\"contained\"\n                                name=\"car_type\"\n                                color=\"default\"\n                                className={classes.button}\n                                startIcon={<CloudUploadIcon />}\n                                type=\"submit\"\n                            >\n                                Upload\n                </Button>\n                        </form>\n                    </div>\n                </div>\n\n\n            </>\n        )\n    }\n\n\n\n\n}\n\n\n\nexport default CarFixImgUpload;\n"]},"metadata":{},"sourceType":"module"}