{"ast":null,"code":"import _slicedToArray from\"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{makeStyles}from'@material-ui/core/styles';import TextField from'@material-ui/core/TextField';import Fab from'@material-ui/core/Fab';import EditIcon from'@material-ui/icons/Add';import PostAddModal from'./PostAddModal';var useStyles=makeStyles(function(theme){return{root:{backgroundColor:theme.palette.background.paper,width:500,position:'relative',minHeight:200},fab:{position:'absolute',bottom:theme.spacing(2),right:theme.spacing(2)},margin:{margin:theme.spacing(1),boxShadow:\"0 16px 19px rgba(0,0,0,0.2), 0 15px 15px rgba(0,0,0,0.2)\",'&:hover':{boxShadow:\"0 2px 4px rgba(0,0,0,0.25), 0 2px 2px rgba(0,0,0,0.22)\"}}};});function Question(props){var classes=useStyles();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),cars=_useState2[0],setCars=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),open=_useState4[0],setOpen=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),errorOpen=_useState6[0],setErrorOpen=_useState6[1];/**\n   * Modal Methods\n   */function handleOpen(){setOpen(true);}function handleErrorOpen(){setErrorOpen(true);}function handleClose(){setOpen(false);}function handleErrorClose(){setErrorOpen(false);}return React.createElement(React.Fragment,null,React.createElement(Fab,{color:\"none\",\"aria-label\":\"add\",style:{color:\"darkcyan\",outline:'0'},className:classes.margin},React.createElement(EditIcon,{onClick:handleOpen})),React.createElement(PostAddModal,{open:open,onClose:handleClose,titleText:\"Post Form\",bodyText:\"\",redirect:\"/mycars\",redirectText:\"cars\"}));};export default Question;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/Question.js"],"names":["React","useState","useEffect","makeStyles","TextField","Fab","EditIcon","PostAddModal","useStyles","theme","root","backgroundColor","palette","background","paper","width","position","minHeight","fab","bottom","spacing","right","margin","boxShadow","Question","props","classes","cars","setCars","open","setOpen","errorOpen","setErrorOpen","handleOpen","handleErrorOpen","handleClose","handleErrorClose","color","outline"],"mappings":"iIAEA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA0C,OAA1C,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAGA,GAAMC,CAAAA,SAAS,CAAGL,UAAU,CAAC,SAAAM,KAAK,QAAK,CACnCC,IAAI,CAAE,CACFC,eAAe,CAAEF,KAAK,CAACG,OAAN,CAAcC,UAAd,CAAyBC,KADxC,CAEFC,KAAK,CAAE,GAFL,CAGFC,QAAQ,CAAE,UAHR,CAIFC,SAAS,CAAE,GAJT,CAD6B,CAOjCC,GAAG,CAAE,CACHF,QAAQ,CAAE,UADP,CAEHG,MAAM,CAAEV,KAAK,CAACW,OAAN,CAAc,CAAd,CAFL,CAGHC,KAAK,CAAEZ,KAAK,CAACW,OAAN,CAAc,CAAd,CAHJ,CAP4B,CAYjCE,MAAM,CAAE,CACNA,MAAM,CAAEb,KAAK,CAACW,OAAN,CAAc,CAAd,CADF,CAENG,SAAS,CAAE,0DAFL,CAGN,UAAU,CACNA,SAAS,CAAE,wDADL,CAHJ,CAZyB,CAAL,EAAN,CAA5B,CAyBA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CAExB,GAAMC,CAAAA,OAAO,CAAGlB,SAAS,EAAzB,CAFwB,cAIAP,QAAQ,CAAC,EAAD,CAJR,wCAIhB0B,IAJgB,eAIXC,OAJW,8BAKC3B,QAAQ,CAAC,KAAD,CALT,yCAKhB4B,IALgB,eAKVC,OALU,8BAMW7B,QAAQ,CAAC,KAAD,CANnB,yCAMhB8B,SANgB,eAMLC,YANK,eAQvB;;KAIA,QAASC,CAAAA,UAAT,EAAsB,CAClBH,OAAO,CAAC,IAAD,CAAP,CACH,CACD,QAASI,CAAAA,eAAT,EAA2B,CACvBF,YAAY,CAAC,IAAD,CAAZ,CACH,CACD,QAASG,CAAAA,WAAT,EAAuB,CACnBL,OAAO,CAAC,KAAD,CAAP,CACH,CACD,QAASM,CAAAA,gBAAT,EAA4B,CACxBJ,YAAY,CAAC,KAAD,CAAZ,CACH,CAGC,MACE,yCACE,oBAAC,GAAD,EAAK,KAAK,CAAC,MAAX,CAAkB,aAAW,KAA7B,CAAmC,KAAK,CAAE,CAACK,KAAK,CAAC,UAAP,CAAoBC,OAAO,CAAC,GAA5B,CAA1C,CAA4E,SAAS,CAAEZ,OAAO,CAACJ,MAA/F,EACE,oBAAC,QAAD,EACA,OAAO,CAAEW,UADT,EADF,CADF,CAQE,oBAAC,YAAD,EACE,IAAI,CAAEJ,IADR,CAEE,OAAO,CAAEM,WAFX,CAGE,SAAS,CAAE,WAHb,CAIE,QAAQ,CAAE,EAJZ,CAKE,QAAQ,CAAE,SALZ,CAME,YAAY,CAAE,MANhB,EARF,CADF,CAoBH,EAID,cAAeX,CAAAA,QAAf","sourcesContent":["\n\nimport React, { useState, useEffect} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport EditIcon from '@material-ui/icons/Add';\nimport PostAddModal from './PostAddModal';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n        position: 'relative',\n        minHeight: 200,\n      },\n      fab: {\n        position: 'absolute',\n        bottom: theme.spacing(2),\n        right: theme.spacing(2),\n      }, \n      margin: {\n        margin: theme.spacing(1),\n        boxShadow: \"0 16px 19px rgba(0,0,0,0.2), 0 15px 15px rgba(0,0,0,0.2)\",\n        '&:hover':{\n            boxShadow: \"0 2px 4px rgba(0,0,0,0.25), 0 2px 2px rgba(0,0,0,0.22)\"\n          },\n      },\n     \n  }));\n\n\n\n\nfunction Question(props) {\n\n const classes = useStyles();\n\n  const [cars,setCars] = useState([])\n  const [open, setOpen] = useState(false);\n  const [errorOpen, setErrorOpen] = useState(false);\n\n  /**\n   * Modal Methods\n   */\n\n  function handleOpen() {\n      setOpen(true);\n  }\n  function handleErrorOpen() {\n      setErrorOpen(true);\n  }\n  function handleClose() {\n      setOpen(false);\n  }\n  function handleErrorClose() {\n      setErrorOpen(false);\n  }\n  \n  \n    return (\n      <>\n        <Fab color=\"none\" aria-label=\"add\" style={{color:\"darkcyan\",  outline:'0'}} className={classes.margin}>\n          <EditIcon \n          onClick={handleOpen}\n          />\n           \n        </Fab>\n\n        <PostAddModal\n          open={open}\n          onClose={handleClose}\n          titleText={\"Post Form\"}\n          bodyText={\"\"}\n          redirect={\"/mycars\"}\n          redirectText={\"cars\"}\n          />\n\n      </>\n    );\n};\n\n\n\nexport default Question;\n"]},"metadata":{},"sourceType":"module"}