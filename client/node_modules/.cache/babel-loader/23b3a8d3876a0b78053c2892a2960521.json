{"ast":null,"code":"import { axiosWithAuth } from '../../helpers/index';\nexport const GET_IMG_START = 'GET_IMG_START';\nexport const GET_IMG_SUCCESS = 'GET_IMG_SUCCESS';\nexport const GET_IMG_FAILURE = 'GET_IMG_FAILURE';\nexport const fetchProfileImage = userid => dispatch => {\n  dispatch({\n    type: GET_IMG_START\n  });\n  return axiosWithAuth().get(`/users/image/${userid}`).then(res => {\n    console.log(res.data, \"usresettings\");\n    dispatch({\n      type: GET_IMG_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: GET_IMG_FAILURE,\n      payload: err.response\n    });\n  });\n};","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/store/actions/settingsActions.js"],"names":["axiosWithAuth","GET_IMG_START","GET_IMG_SUCCESS","GET_IMG_FAILURE","fetchProfileImage","userid","dispatch","type","get","then","res","console","log","data","payload","catch","err","response"],"mappings":"AAAA,SAASA,aAAT,QAA8B,qBAA9B;AAEA,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,MAAMC,iBAAiB,GAAGC,MAAM,IAAIC,QAAQ,IAAI;AAErDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR;AACA,SAAOD,aAAa,GACjBQ,GADI,CACC,gBAAeH,MAAO,EADvB,EAEJI,IAFI,CAECC,GAAG,IAAI;AAEXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,EAAqB,cAArB;AACAP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,eAAR;AAAyBY,MAAAA,OAAO,EAAEJ,GAAG,CAACG;AAAtC,KAAD,CAAR;AACD,GANI,EAOJE,KAPI,CAOEC,GAAG,IAAI;AACZV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,eAAR;AAAyBW,MAAAA,OAAO,EAAEE,GAAG,CAACC;AAAtC,KAAD,CAAR;AACD,GATI,CAAP;AAUD,CAbM","sourcesContent":["import { axiosWithAuth } from '../../helpers/index';\n\nexport const GET_IMG_START = 'GET_IMG_START';\nexport const GET_IMG_SUCCESS = 'GET_IMG_SUCCESS';\nexport const GET_IMG_FAILURE = 'GET_IMG_FAILURE';\n\nexport const fetchProfileImage = userid => dispatch => {\n\n  dispatch({ type: GET_IMG_START });\n  return axiosWithAuth()\n    .get(`/users/image/${userid}`)\n    .then(res => {\n\n      console.log(res.data,\"usresettings\")\n      dispatch({ type: GET_IMG_SUCCESS, payload: res.data });\n    })\n    .catch(err => {\n      dispatch({ type: GET_IMG_FAILURE, payload: err.response });\n    });\n};\n"]},"metadata":{},"sourceType":"module"}