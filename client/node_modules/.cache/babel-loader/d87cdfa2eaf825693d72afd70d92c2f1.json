{"ast":null,"code":"import _slicedToArray from \"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/CarImgUpload.js\";\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport axiosWithAuth from '../helpers/axiosWithAuth';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CarImgShow from './CarImgShow';\nimport CarImageFixShow from './CarImageFixShow';\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction CarImgUpload(props) {\n  const classes = useStyles();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        carImages = _useState2[0],\n        setCarImages = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        carFixImages = _useState4[0],\n        setCarFixImages = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        file = _useState6[0],\n        setFile = _useState6[1];\n\n  useEffect(() => {\n    if (props.car) {\n      fetchCarImages();\n    }\n\n    if (props.carFix) {\n      fetchFixDocuments();\n    }\n  }, [file]);\n  console.log(carImages, \"carImages\");\n\n  async function fetchCarImages() {\n    let images = await axiosWithAuth().get(\"/cars/\".concat(props.car.id, \"/images\"));\n    setCarImages(images.data);\n    return images;\n  } // async function fetchFixDocuments() {\n  //     let fixImages = await axiosWithAuth().get(`/car_fix/${props.carFix.id}/car_fix_images`)\n  //     setCarFixImages(fixImages.data);\n  //     return fixImages;\n  // }\n\n\n  function handleInputChanges(e) {\n    e.preventDefault();\n    const file = e.target.files[0];\n\n    if (!file) {\n      return;\n    }\n\n    if (file && file.size > 1e8) {\n      alert(\"File is too large. Maximum limit is 100MB.\");\n      e.target.value = '';\n    } else {\n      setFile(file);\n    }\n  }\n\n  function handleSubmitUploader(e) {\n    e.preventDefault(); // Create file ref (Example: /documents/:car_id/:file_name)\n\n    const fileRef = imagesRef.child(\"\".concat(props.car.id, \"/\").concat(file.name)); // Upload file\n\n    fileRef.put(file).then(snapshot => {\n      // console.log('Upload success!', snapshot.constructor, snapshot);\n      axiosWithAuth().post(\"/cars/\".concat(props.car.id, \"/images\"), {\n        file_name: file.name\n      }).then(res => {\n        fetchCarImages();\n        window.location.reload();\n      }).catch(error => {\n        console.error(error);\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  } // function handleSubmitUploaderFixDocuments(e) {\n  //     e.preventDefault()\n  //     // Create file ref (Example: /documents/:car_id/:file_name)\n  //     const fileRef = imagesRef.child(`${props.carFix.id}/${file.name}`)\n  //     // Upload file\n  //     fileRef.put(file).then((snapshot) => {\n  //         // console.log('Upload success!', snapshot.constructor, snapshot);\n  //         axiosWithAuth().post(`/car_fix/${props.carFix.id}/car_fix_images`, { file_name: file.name })\n  //             .then(res => {\n  //                 fetchFixDocuments();\n  //                 window.location.reload();               \n  //              })\n  //             .catch(error => {\n  //                 console.error(error);\n  //             })\n  //     }).catch(err => {\n  //         console.error(err)\n  //     });\n  // }\n\n\n  if (carImages.length > 0) {\n    return React.createElement(React.Fragment, null, carImages.map((image, index) => {\n      return React.createElement(CarImgShow, {\n        key: index,\n        car: props.car,\n        image: image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      });\n    }));\n  } // else if(carFixImages.length > 0 ){\n  //     return (\n  //     <>\n  //                 {carFixImages.map((image, index) => {\n  //                     return <CarImageFixShow  key={index}  carFix={props.carFix} image={image}/>\n  //                 })} \n  //     </>\n  //     )\n  // }\n  else {\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        style: {\n          height: \"200px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, props.car ? React.createElement(DriveEtaIcon, {\n        style: {\n          fontSize: \"100px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }) : null, React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: \"column\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: props.car ? handleSubmitUploader : handleSubmitUploaderFixDocuments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        required: true,\n        id: \"uploader\",\n        type: \"file\",\n        accept: \"image/*,.pdf,.doc\",\n        onChange: handleInputChanges,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        name: \"car_type\",\n        color: \"default\",\n        className: classes.button,\n        startIcon: React.createElement(CloudUploadIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }),\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Upload\")))));\n    }\n}\n\nexport default CarImgUpload;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/CarImgUpload.js"],"names":["React","useEffect","useState","imagesRef","axiosWithAuth","Button","makeStyles","CloudUploadIcon","CarImgShow","CarImageFixShow","DriveEtaIcon","useStyles","theme","button","margin","spacing","CarImgUpload","props","classes","carImages","setCarImages","carFixImages","setCarFixImages","file","setFile","car","fetchCarImages","carFix","fetchFixDocuments","console","log","images","get","id","data","handleInputChanges","e","preventDefault","target","files","size","alert","value","handleSubmitUploader","fileRef","child","name","put","then","snapshot","post","file_name","res","window","location","reload","catch","error","err","length","map","image","index","height","fontSize","display","flexDirection","handleSubmitUploaderFixDocuments"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport axiosWithAuth from '../helpers/axiosWithAuth';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport CarImgShow from './CarImgShow';\nimport CarImageFixShow from './CarImageFixShow';\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n      margin: theme.spacing(1),\n    },\n  }));\n\n\nfunction CarImgUpload(props) {\n\n    const classes = useStyles();\n    const [carImages, setCarImages] = useState([]);\n    const [carFixImages, setCarFixImages] = useState([]);\n    const [file, setFile] = useState({});\n\n    useEffect(() => {\n        if(props.car){\n        fetchCarImages();\n        }\n        if(props.carFix){\n        fetchFixDocuments();\n        }\n    }, [file]);\n\n    console.log(carImages,\"carImages\")\n    \n    async function fetchCarImages() {\n        let images = await axiosWithAuth().get(`/cars/${props.car.id}/images`)\n        setCarImages(images.data);\n        return images;\n    }\n\n    // async function fetchFixDocuments() {\n    //     let fixImages = await axiosWithAuth().get(`/car_fix/${props.carFix.id}/car_fix_images`)\n    //     setCarFixImages(fixImages.data);\n    //     return fixImages;\n    // }\n\n    function handleInputChanges(e) {\n        e.preventDefault();\n        const file = e.target.files[0]\n        if (!file) {\n            return;\n        }\n        if (file && file.size > 1e8) {\n            alert(\"File is too large. Maximum limit is 100MB.\")\n            e.target.value = ''\n        } else {\n            setFile(file);\n        }\n    }\n\n    function handleSubmitUploader(e) {\n        e.preventDefault()\n        // Create file ref (Example: /documents/:car_id/:file_name)\n        const fileRef = imagesRef.child(`${props.car.id}/${file.name}`)\n        // Upload file\n        fileRef.put(file).then((snapshot) => {\n            // console.log('Upload success!', snapshot.constructor, snapshot);\n            axiosWithAuth().post(`/cars/${props.car.id}/images`, { file_name: file.name })\n                .then(res => {\n                    fetchCarImages();\n                    window.location.reload();               \n                 })\n                .catch(error => {\n                    console.error(error);\n                })\n        }).catch(err => {\n            console.error(err)\n        });\n    }\n\n    // function handleSubmitUploaderFixDocuments(e) {\n    //     e.preventDefault()\n    //     // Create file ref (Example: /documents/:car_id/:file_name)\n    //     const fileRef = imagesRef.child(`${props.carFix.id}/${file.name}`)\n    //     // Upload file\n    //     fileRef.put(file).then((snapshot) => {\n    //         // console.log('Upload success!', snapshot.constructor, snapshot);\n    //         axiosWithAuth().post(`/car_fix/${props.carFix.id}/car_fix_images`, { file_name: file.name })\n    //             .then(res => {\n    //                 fetchFixDocuments();\n    //                 window.location.reload();               \n    //              })\n    //             .catch(error => {\n    //                 console.error(error);\n    //             })\n    //     }).catch(err => {\n    //         console.error(err)\n    //     });\n    // }\n    \n\n\n    if(carImages.length > 0 ){\n        return (\n        <>\n                    {carImages.map((image, index) => {\n                        return <CarImgShow key={index} car={props.car} image={image}/>\n                    })} \n        </>\n        )\n    } \n    // else if(carFixImages.length > 0 ){\n    //     return (\n    //     <>\n    //                 {carFixImages.map((image, index) => {\n    //                     return <CarImageFixShow  key={index}  carFix={props.carFix} image={image}/>\n    //                 })} \n    //     </>\n    //     )\n    // }\n    else{\n        return (\n            <>\n                <div style={{height:\"200px\"}}>\n                {(props.car ? <DriveEtaIcon style={{fontSize:\"100px\"}}/> : null)} \n                <div style={{display:'flex',flexDirection:\"column\"}}>\n                 <form onSubmit={(props.car ? handleSubmitUploader : handleSubmitUploaderFixDocuments)}> \n                <input required id=\"uploader\" type=\"file\" accept=\"image/*,.pdf,.doc\" onChange={handleInputChanges}></input>\n                    <Button\n                    variant=\"contained\"\n                    name=\"car_type\"\n                    color=\"default\"\n                    className={classes.button}\n                    startIcon={<CloudUploadIcon />}\n                    type =\"submit\"\n                    >\n                    Upload\n                </Button>\n                </form>\n                </div>\n                </div>\n                \n            </>\n        )\n    }\n   \n        \n    \n}\n\n\n\nexport default CarImgUpload;\n"]},"metadata":{},"sourceType":"module"}