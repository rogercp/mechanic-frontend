{"ast":null,"code":"import _slicedToArray from \"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/CarImgShow.js\";\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\n\nfunction CarImgShow(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        thisImage = _useState2[0],\n        setThisimage = _useState2[1];\n\n  let fileRef;\n\n  if (props.car.file_name) {\n    let fileRef = imagesRef.child(\"\".concat(props.car.id, \"/\").concat(props.image.file_name));\n  }\n\n  useEffect(() => {\n    getImg();\n  }, []);\n\n  function getImg() {\n    fileRef.getMetadata().then(metadata => {\n      fileRef.getDownloadURL().then(url => {\n        setThisimage(url); // let img = document.getElementById('document-image');\n        // if (metadata.contentType === 'application/pdf') {\n        //     img.src = '';\n        //     // TODO handle PDFs\n        //   } else {\n        //     img.src = url;\n        //   }\n      }).catch(err => {\n        console.error(err);\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  return React.createElement(React.Fragment, null, !thisImage ? React.createElement(DriveEtaIcon, {\n    style: {\n      fontSize: \"100px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    id: \"reg-image\",\n    height: \"200px\",\n    style: {\n      maxWidth: '100%',\n      maxHeight: '100%'\n    },\n    src: \"\".concat(thisImage),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })\n  /* {props.image.file_name} */\n  );\n}\n\nexport default CarImgShow;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/CarImgShow.js"],"names":["React","useEffect","useState","imagesRef","DriveEtaIcon","CarImgShow","props","thisImage","setThisimage","fileRef","car","file_name","child","id","image","getImg","getMetadata","then","metadata","getDownloadURL","url","catch","err","console","error","fontSize","maxWidth","maxHeight"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;AAIA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA,oBAESJ,QAAQ,CAAC,EAAD,CAFjB;AAAA;AAAA,QAElBK,SAFkB;AAAA,QAEPC,YAFO;;AAIzB,MAAIC,OAAJ;;AAEA,MAAGH,KAAK,CAACI,GAAN,CAAUC,SAAb,EAAuB;AACrB,QAAIF,OAAO,GAAGN,SAAS,CAACS,KAAV,WAAmBN,KAAK,CAACI,GAAN,CAAUG,EAA7B,cAAmCP,KAAK,CAACQ,KAAN,CAAYH,SAA/C,EAAd;AACD;;AAIDV,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,MAAM;AACP,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASA,MAAT,GAAkB;AAChBN,IAAAA,OAAO,CAACO,WAAR,GAAsBC,IAAtB,CAA4BC,QAAD,IAAc;AACvCT,MAAAA,OAAO,CAACU,cAAR,GAAyBF,IAAzB,CAA8BG,GAAG,IAAI;AAEnCZ,QAAAA,YAAY,CAACY,GAAD,CAAZ,CAFmC,CAInC;AACA;AACA;AACA;AACA;AACA;AACA;AACD,OAXD,EAYGC,KAZH,CAYSC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,OAdH;AAeD,KAhBD,EAgBGD,KAhBH,CAgBUC,GAAD,IAAS;AAChBC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,KAlBD;AAmBD;;AAED,SACE,0CAEG,CAACf,SAAD,GAAY,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEkB,MAAAA,QAAQ,EAAE;AAAZ,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAZ,GAED;AAAK,IAAA,EAAE,EAAC,WAAR;AAAoB,IAAA,MAAM,EAAC,OAA3B;AAAmC,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,MAAZ;AAAoBC,MAAAA,SAAS,EAAE;AAA/B,KAA1C;AAAmF,IAAA,GAAG,YAAKpB,SAAL,CAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALF,GADF;AAcD;;AAGD,eAAeF,UAAf","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\n\n\n\nfunction CarImgShow(props) {\n\n  const [thisImage, setThisimage] = useState('')\n\n  let fileRef\n\n  if(props.car.file_name){\n    let fileRef = imagesRef.child(`${props.car.id}/${props.image.file_name}`);\n  }\n  \n\n\n  useEffect(() => {\n    getImg()\n  }, []);\n\n  function getImg() {\n    fileRef.getMetadata().then((metadata) => {\n      fileRef.getDownloadURL().then(url => {\n\n        setThisimage(url)\n\n        // let img = document.getElementById('document-image');\n        // if (metadata.contentType === 'application/pdf') {\n        //     img.src = '';\n        //     // TODO handle PDFs\n        //   } else {\n        //     img.src = url;\n        //   }\n      })\n        .catch(err => {\n          console.error(err);\n        })\n    }).catch((err) => {\n      console.error(err);\n    });\n  }\n\n  return (\n    <>\n      {/* {(metadata.contentType === 'application/pdf')? <div id=\"div-pdf\" src={`${thisImage}`}></div> :  <img id=\"reg-image\" height=\"200px\" src={`${thisImage}`}></img>} */}\n      {!thisImage? <DriveEtaIcon style={{ fontSize: \"100px\" }} />:\n      \n      <img id=\"reg-image\" height=\"200px\" style={{ maxWidth: '100%', maxHeight: '100%' }} src={`${thisImage}`}></img>\n      /* {props.image.file_name} */\n\n      }\n\n      \n     \n    </>\n  )\n}\n\n\nexport default CarImgShow;\n"]},"metadata":{},"sourceType":"module"}