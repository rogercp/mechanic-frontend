{"ast":null,"code":"import _slicedToArray from \"/Users/roger/Projects/mechanic-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/src/components/ProfileImageUpload.js\";\n\n/**\n * Dependencies\n */\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport axiosWithAuth from '../helpers/axiosWithAuth';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport ProfileImageShow from './ProfileImageShow';\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n/**\n * Define component\n */\n\nfunction ProfileImageUpload(props) {\n  const classes = useStyles();\n  const userId = localStorage.getItem('id');\n\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        userImage = _useState2[0],\n        setUserImage = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        file = _useState4[0],\n        setFile = _useState4[1];\n\n  useEffect(() => {\n    fetchProfileImage();\n  }, [file]);\n\n  async function fetchProfileImage() {\n    let userImages = await axiosWithAuth().get(\"/users/image/\".concat(userId));\n    setUserImage(userImages.data);\n    return userImages;\n  }\n\n  function handleInputChanges(e) {\n    e.preventDefault();\n    const file = e.target.files[0];\n\n    if (!file) {\n      return;\n    }\n\n    if (file && file.size > 1e8) {\n      alert(\"File is too large. Maximum limit is 100MB.\");\n      e.target.value = '';\n    } else {\n      setFile(file);\n    }\n  }\n\n  function handleSubmitUploaderProfilePicture(e) {\n    e.preventDefault(); // Create file ref (Example: /documents/:car_id/:file_name)\n\n    const fileRef = imagesRef.child(\"\".concat(userId, \"/\").concat(file.name)); // Upload file\n\n    fileRef.put(file).then(snapshot => {\n      // console.log('Upload success!', snapshot.constructor, snapshot);\n      axiosWithAuth().post(\"/users/image/\".concat(userId), {\n        file_name: file.name\n      }).then(res => {\n        fetchProfileImage();\n        window.location.reload();\n      }).catch(error => {\n        console.error(error);\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  if (userImage.length > 0) {\n    return React.createElement(React.Fragment, null, React.createElement(ProfileImageShow, {\n      userId: userId,\n      userImage: userImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }));\n  }\n\n  if (userImage.length > 0) {\n    return React.createElement(React.Fragment, null, carImages.map((image, index) => {\n      return React.createElement(ProfileImageShow, {\n        key: index,\n        car: props.car,\n        image: image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      });\n    }));\n  } else {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      style: {\n        height: \"200px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, props.carFix ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"no image\") : null, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: \"column\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: handleSubmitUploaderProfilePicture,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      required: true,\n      id: \"uploader\",\n      type: \"file\",\n      accept: \"image/*,.pdf,.doc\",\n      onChange: handleInputChanges,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      name: \"car_type\",\n      color: \"default\",\n      className: classes.button,\n      startIcon: React.createElement(CloudUploadIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Upload\")))));\n  }\n}\n/**\n *  Export component\n */\n\n\nexport default ProfileImageUpload;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/src/components/ProfileImageUpload.js"],"names":["React","useEffect","useState","imagesRef","axiosWithAuth","Button","makeStyles","CloudUploadIcon","ProfileImageShow","DriveEtaIcon","useStyles","theme","button","margin","spacing","ProfileImageUpload","props","classes","userId","localStorage","getItem","userImage","setUserImage","file","setFile","fetchProfileImage","userImages","get","data","handleInputChanges","e","preventDefault","target","files","size","alert","value","handleSubmitUploaderProfilePicture","fileRef","child","name","put","then","snapshot","post","file_name","res","window","location","reload","catch","error","console","err","length","carImages","map","image","index","car","height","carFix","display","flexDirection"],"mappings":"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","sourcesContent":["/**\n * Dependencies\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport axiosWithAuth from '../helpers/axiosWithAuth';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport ProfileImageShow from './ProfileImageShow';\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n      margin: theme.spacing(1),\n    },\n  }));\n/**\n * Define component\n */\n\nfunction ProfileImageUpload(props) {\n\n    const classes = useStyles();\n\n    const userId = localStorage.getItem('id');\n    \n    const [userImage, setUserImage] = useState({});\n    const [file, setFile] = useState({});\n\n    useEffect(() => {\n    \n        fetchProfileImage();\n        \n    }, [file]);\n\n    async function fetchProfileImage() {\n        let userImages = await axiosWithAuth().get(`/users/image/${userId}`)\n        setUserImage(userImages.data);\n        return userImages;\n    }\n\n    function handleInputChanges(e) {\n        e.preventDefault();\n        const file = e.target.files[0]\n        if (!file) {\n            return;\n        }\n        if (file && file.size > 1e8) {\n            alert(\"File is too large. Maximum limit is 100MB.\")\n            e.target.value = ''\n        } else {\n            setFile(file);\n        }\n    }\n\n\n    function handleSubmitUploaderProfilePicture(e) {\n        e.preventDefault()\n        // Create file ref (Example: /documents/:car_id/:file_name)\n        const fileRef = imagesRef.child(`${userId}/${file.name}`)\n        // Upload file\n        fileRef.put(file).then((snapshot) => {\n            // console.log('Upload success!', snapshot.constructor, snapshot);\n            axiosWithAuth().post(`/users/image/${userId}`, { file_name: file.name })\n                .then(res => {\n                    fetchProfileImage();\n                    window.location.reload();               \n                 })\n                .catch(error => {\n                    console.error(error);\n                })\n        }).catch(err => {\n            console.error(err)\n        });\n    }\n    \n\n    if(userImage.length > 0){\n        return (\n        <>\n                   \n         <ProfileImageShow  userId={userId} userImage={userImage}/>\n                \n        </>\n        )   \n    } \n\n    if(userImage.length > 0 ){\n        return (\n        <>\n                    {carImages.map((image, index) => {\n                        return <ProfileImageShow key={index} car={props.car} image={image}/>\n                    })} \n        </>\n        )\n    }\n      \n    else{\n        return (\n            <>\n                <div style={{height:\"200px\"}}>\n                {(props.carFix ? <p>no image</p>: null)} \n                <div style={{display:'flex',flexDirection:\"column\"}}>\n                 <form onSubmit={handleSubmitUploaderProfilePicture}> \n                <input required id=\"uploader\" type=\"file\" accept=\"image/*,.pdf,.doc\" onChange={handleInputChanges}></input>\n                    <Button\n                    variant=\"contained\"\n                    name=\"car_type\"\n                    color=\"default\"\n                    className={classes.button}\n                    startIcon={<CloudUploadIcon />}\n                    type =\"submit\"\n                    >\n                    Upload\n                </Button>\n                </form>\n                </div>\n                </div>                \n            </>\n        )\n\n    }\n  \n        \n    \n   \n        \n    \n}\n\n/**\n *  Export component\n */\n\nexport default ProfileImageUpload;\n"]},"metadata":{},"sourceType":"module"}