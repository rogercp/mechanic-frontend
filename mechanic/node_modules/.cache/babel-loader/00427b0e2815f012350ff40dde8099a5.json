{"ast":null,"code":"import _slicedToArray from \"/Users/roger/Projects/mechanic-frontend/mechanic/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/mechanic/src/components/CarImgShow.js\";\n\n/**\n * Dependencies\n */\nimport React, { useEffect, useState } from 'react';\nimport { mixpanel } from \"../helpers/index\";\nimport { imagesRef } from '../helpers/firebase';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axiosWithAuth from '../helpers/axiosWithAuth';\n/**\n * Define component\n */\n\nfunction CarImgShow(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        images = _useState2[0],\n        setImages = _useState2[1];\n\n  const fileRef = imagesRef.child(\"\".concat(props.car.id, \"/\").concat(props.car.file_name));\n  useEffect(() => {\n    fetchDocuments();\n  }, []);\n\n  async function fetchDocuments() {\n    let images = await axiosWithAuth().get(\"/cars/\".concat(props.case.id, \"/images\"));\n    setImages(images.data);\n    return images;\n  }\n\n  function handleClick(e) {\n    e.preventDefault();\n    fileRef.getMetadata().then(metadata => {\n      fileRef.getDownloadURL().then(url => {\n        let img = document.getElementById('document-image');\n\n        if (metadata.contentType === 'application/pdf') {\n          img.src = ''; // TODO handle PDFs\n        } else {\n          img.src = url;\n        }\n      }).catch(err => {\n        console.error(err);\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    id: \"view-button\",\n    onClick: handleClick,\n    variant: \"outlined\",\n    className: \"my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"View\"), \" \", props.car.file_name);\n}\n/**\n * Export component\n */\n\n\nexport default CarImgShow;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/mechanic/src/components/CarImgShow.js"],"names":["React","useEffect","useState","mixpanel","imagesRef","Typography","Button","axiosWithAuth","CarImgShow","props","images","setImages","fileRef","child","car","id","file_name","fetchDocuments","get","case","data","handleClick","e","preventDefault","getMetadata","then","metadata","getDownloadURL","url","img","document","getElementById","contentType","src","catch","err","console","error"],"mappings":";;;AAAA;;;AAIA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AAGA;;;;AAIA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA,oBACKP,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,QAChBQ,MADgB;AAAA,QACRC,SADQ;;AAEvB,QAAMC,OAAO,GAAGR,SAAS,CAACS,KAAV,WAAmBJ,KAAK,CAACK,GAAN,CAAUC,EAA7B,cAAmCN,KAAK,CAACK,GAAN,CAAUE,SAA7C,EAAhB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,cAAc;AACjB,GAFQ,EAEP,EAFO,CAAT;;AAIA,iBAAeA,cAAf,GAAgC;AAC5B,QAAIP,MAAM,GAAG,MAAMH,aAAa,GAAGW,GAAhB,iBAA6BT,KAAK,CAACU,IAAN,CAAWJ,EAAxC,aAAnB;AACAJ,IAAAA,SAAS,CAACD,MAAM,CAACU,IAAR,CAAT;AACA,WAAOV,MAAP;AACH;;AAGD,WAASW,WAAT,CAAqBC,CAArB,EAAwB;AACpBA,IAAAA,CAAC,CAACC,cAAF;AAEAX,IAAAA,OAAO,CAACY,WAAR,GAAsBC,IAAtB,CAA4BC,QAAD,IAAc;AACvCd,MAAAA,OAAO,CAACe,cAAR,GAAyBF,IAAzB,CAA8BG,GAAG,IAAI;AACnC,YAAIC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAAV;;AAEA,YAAIL,QAAQ,CAACM,WAAT,KAAyB,iBAA7B,EAAgD;AAC9CH,UAAAA,GAAG,CAACI,GAAJ,GAAU,EAAV,CAD8C,CAE9C;AACD,SAHD,MAGO;AACLJ,UAAAA,GAAG,CAACI,GAAJ,GAAUL,GAAV;AACD;AACF,OATD,EAUCM,KAVD,CAUOC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,OAZD;AAaD,KAdD,EAcGD,KAdH,CAcUC,GAAD,IAAS;AAChBC,MAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD,KAhBD;AAiBH;;AAED,SACI,0CACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAEd,WAAlC;AAA+C,IAAA,OAAO,EAAC,UAAvD;AAAkE,IAAA,SAAS,EAAC,MAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,OACoGZ,KAAK,CAACK,GAAN,CAAUE,SAD9G,CADJ;AAMH;AAED;;;;;AAIA,eAAeR,UAAf","sourcesContent":["/**\n * Dependencies\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { mixpanel } from \"../helpers/index\";\nimport { imagesRef } from '../helpers/firebase';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axiosWithAuth from '../helpers/axiosWithAuth';\n\n\n/**\n * Define component\n */\n\nfunction CarImgShow(props) {\n    const [images, setImages] = useState([]);\n    const fileRef = imagesRef.child(`${props.car.id}/${props.car.file_name}`);\n\n    useEffect(() => {\n        fetchDocuments();\n    },[]);\n\n    async function fetchDocuments() {\n        let images = await axiosWithAuth().get(`/cars/${props.case.id}/images`)\n        setImages(images.data);\n        return images;\n    }\n\n\n    function handleClick(e) {\n        e.preventDefault();\n\n        fileRef.getMetadata().then((metadata) => {\n          fileRef.getDownloadURL().then(url => {\n            let img = document.getElementById('document-image');\n\n            if (metadata.contentType === 'application/pdf') {\n              img.src = '';\n              // TODO handle PDFs\n            } else {\n              img.src = url;\n            }\n          })\n          .catch(err => {\n            console.error(err);\n          })\n        }).catch((err) => {\n          console.error(err);\n        });\n    }\n\n    return(\n        <>\n          <Button id=\"view-button\" onClick={handleClick} variant=\"outlined\" className=\"my-1\">View</Button> {props.car.file_name}\n\n        </>\n    )\n}\n\n/**\n * Export component\n */\n\nexport default CarImgShow;\n"]},"metadata":{},"sourceType":"module"}