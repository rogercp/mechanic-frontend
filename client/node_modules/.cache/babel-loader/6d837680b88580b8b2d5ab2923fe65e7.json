{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/ImageCarousel.js\";\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { Carousel, Image } from 'react-bootstrap';\nimport CarImageFixShow from './CarImageFixShow';\nimport PostImageShow from './PostImageShow';\n\nfunction ImageCarousel(props) {\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  if (props.isImageDelShow) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, props.postImages.map((image, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          overflow: \"auto\",\n          width: \"75px\",\n          margin: \"1px\",\n          overflow: \"hidden\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(PostImageShow, {\n        style: {\n          backgroundColor: \"black\"\n        },\n        key: index,\n        post: props.post,\n        isDeleteableOnClick: true,\n        fetchPostImage: props.fetchPostImage,\n        image: image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }\n      }));\n    })));\n  } else if (props.isPostImageCarousel) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"300px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Carousel, {\n      interval: 50000000000000000,\n      style: {\n        backgroundColor: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 3\n      }\n    }, props.postImages.map((image, index) => {\n      return /*#__PURE__*/React.createElement(Carousel.Item, {\n        style: {\n          overflow: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(PostImageShow, {\n        style: {\n          backgroundColor: \"black\"\n        },\n        onClick: props.open,\n        key: index,\n        post: props.post,\n        image: image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }));\n    })));\n  } else if (props.isCarFixImages) {\n    return /*#__PURE__*/React.createElement(Dialog, {\n      style: {\n        backgroundColor: \"black\"\n      },\n      open: props.open,\n      onClose: props.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Carousel, {\n      style: {\n        backgroundColor: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, props.carFixImages.map((image, index) => {\n      return /*#__PURE__*/React.createElement(Carousel.Item, {\n        style: {\n          overflow: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CarImageFixShow, {\n        style: {\n          backgroundColor: \"black\"\n        },\n        carFix: props.carFix,\n        key: index,\n        image: image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Carousel.Caption, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }\n      }));\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(Dialog, {\n      style: {\n        backgroundColor: \"black\"\n      },\n      open: props.open,\n      onClose: props.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Carousel, {\n      style: {\n        backgroundColor: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, props.postImages.map((image, index) => {\n      return /*#__PURE__*/React.createElement(Carousel.Item, {\n        style: {\n          overflow: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(PostImageShow, {\n        style: {\n          backgroundColor: \"black\"\n        },\n        key: index,\n        post: props.post,\n        image: image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Carousel.Caption, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }));\n    })));\n  }\n}\n\nexport default ImageCarousel;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/ImageCarousel.js"],"names":["React","makeStyles","useTheme","MobileStepper","Button","KeyboardArrowLeft","KeyboardArrowRight","Dialog","Carousel","Image","CarImageFixShow","PostImageShow","ImageCarousel","props","theme","activeStep","setActiveStep","useState","handleNext","prevActiveStep","handleBack","isImageDelShow","postImages","map","image","index","overflow","width","margin","backgroundColor","post","fetchPostImage","isPostImageCarousel","open","isCarFixImages","handleClose","carFixImages","carFix"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { Carousel, Image } from 'react-bootstrap';\nimport CarImageFixShow from './CarImageFixShow';\nimport PostImageShow from './PostImageShow';\n\n\n\nfunction ImageCarousel(props) {\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n \nif(props.isImageDelShow){\n  return (\n    <>\n      <div>\n        {props.postImages.map((image, index) => {\n\n          return (\n       \n            <div style={{ overflow: \"auto\",width:\"75px\",margin:\"1px\",overflow:\"hidden\"}} >\n              <PostImageShow style={{ backgroundColor: \"black\" }} key={index} post={props.post} isDeleteableOnClick={true} fetchPostImage={props.fetchPostImage} image={image} />\n             \n            </div>\n         \n          )\n\n        })}\n      </div>\n</>\n\n  );\n}else if(props.isPostImageCarousel){\n  return (\n    <div style={{width:\"300px\"}}  >\n  <Carousel interval={50000000000000000} style={{ backgroundColor: \"black\"}}>\n  {props.postImages.map((image, index) => {\n    return (\n      \n      <Carousel.Item style={{ overflow: \"auto\" }} >\n        <PostImageShow style={{ backgroundColor: \"black\" }} onClick={props.open} key={index} post={props.post} image={image} />\n      </Carousel.Item>\n    \n    )\n  })}\n</Carousel>\n</div>\n\n  )\n}else if(props.isCarFixImages){\n  return (\n    <Dialog style={{ backgroundColor: \"black\" }} open={props.open} onClose={props.handleClose} >\n      <Carousel style={{ backgroundColor: \"black\" }}>\n        {props.carFixImages.map((image, index) => {\n          return (\n            <Carousel.Item style={{ overflow: \"auto\" }} >\n              <CarImageFixShow style={{ backgroundColor: \"black\" }} carFix={props.carFix} key={index} image={image} />\n              <Carousel.Caption>\n                {/* <h3>First slide label</h3> */}\n              </Carousel.Caption>\n            </Carousel.Item>\n          )\n\n        })}\n      </Carousel>\n\n    </Dialog>\n  );\n\n}\nelse {\n  return (\n    <Dialog style={{ backgroundColor: \"black\" }} open={props.open} onClose={props.handleClose} >\n      <Carousel style={{ backgroundColor: \"black\" }}>\n        {props.postImages.map((image, index) => {\n          return (\n            <Carousel.Item style={{ overflow: \"auto\" }} >\n              <PostImageShow style={{ backgroundColor: \"black\" }} key={index} post={props.post} image={image} />\n              <Carousel.Caption>\n                {/* <h3>First slide label</h3> */}\n              </Carousel.Caption>\n            </Carousel.Item>\n          )\n\n        })}\n      </Carousel>\n\n    </Dialog>\n  );\n}\n  \n}\n\nexport default ImageCarousel;\n"]},"metadata":{},"sourceType":"module"}