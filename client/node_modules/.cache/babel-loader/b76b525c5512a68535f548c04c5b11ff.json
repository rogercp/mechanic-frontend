{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/Posts.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { axiosWithAuth } from '../helpers/index';\nimport IndividualPost from './IndividualPost';\nimport { connect } from 'react-redux';\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\";\nimport { changeOrderPosts } from \"../store/actions/postActions\"; // import { fetchPosts } from \"../store/actions/postActions\";\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Search from \"./Search\";\nimport { Dropdown } from 'react-bootstrap';\n\nfunction Posts(props) {\n  const [searchPosts, setsearchPosts] = useState([]);\n  const [orderBy, setOrderBy] = useState(props.orderPosts);\n\n  async function searchPostsHandler(term) {\n    axiosWithAuth().post('/post/search', {\n      searchTerm: term\n    }).then(res => {\n      setsearchPosts(res.data);\n      props.toggleSearchToTrue();\n    }).catch(err => {});\n  }\n\n  ;\n  useEffect(() => {\n    onFirstLoad();\n  }, []);\n\n  function onFirstLoad() {\n    props.fetchFilteredPosts(\"AllPosts\", \"date\");\n  }\n\n  const handleChange = name => event => {\n    setOrderBy({ ...orderBy,\n      [name]: event.target.value\n    });\n  };\n\n  console.log(orderBy, \"ordersssssssssssssssssss\");\n\n  if (props.searchToggle === true) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Search, {\n      searchPostsHandler: searchPostsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Dropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, \"Order By\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"Action\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"Another action\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, searchPosts.map(p => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IndividualPost, {\n        post: p,\n        key: caches.uid,\n        fetchPosts: props.fetchFilteredPosts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 19\n        }\n      }));\n    })));\n  } else if (props.filteredPosts.length > 0) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Search, {\n      searchPostsHandler: searchPostsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Dropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      variant: \"seconday\",\n      id: \"dropdown-basic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, \"Order By\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n      href: \"#/action-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n      href: \"#/action-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, \"Likes\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, props.filteredPosts.map(p => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IndividualPost, {\n        post: p,\n        key: caches.uid,\n        fetchPosts: props.fetchFilteredPosts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }));\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }, \"ayyyyy\"));\n  }\n}\n\n;\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts,\n  orderPosts: state.post.order\n});\n\nexport default connect(mapStateToProps, {\n  toggleSearchToTrue,\n  fetchFilteredPosts,\n  changeOrderPosts\n})(Posts);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/Posts.js"],"names":["React","useState","useEffect","axiosWithAuth","IndividualPost","connect","fetchFilteredPosts","toggleSearchToTrue","changeOrderPosts","ExpandMoreIcon","Search","Dropdown","Posts","props","searchPosts","setsearchPosts","orderBy","setOrderBy","orderPosts","searchPostsHandler","term","post","searchTerm","then","res","data","catch","err","onFirstLoad","handleChange","name","event","target","value","console","log","searchToggle","display","flexDirection","alignItems","map","p","caches","uid","filteredPosts","length","mapStateToProps","state","myposts","posts","order"],"mappings":"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","sourcesContent":["\n\nimport React, { useState, useEffect } from \"react\";\nimport { axiosWithAuth } from '../helpers/index';\nimport IndividualPost from './IndividualPost'\nimport { connect } from 'react-redux';\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\";\nimport { changeOrderPosts } from \"../store/actions/postActions\";\n// import { fetchPosts } from \"../store/actions/postActions\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Search from \"./Search\";\nimport { Dropdown } from 'react-bootstrap';\n\n\n\nfunction Posts(props) {\n\n  const [searchPosts, setsearchPosts] = useState([])\n\n const [orderBy,setOrderBy] = useState(props.orderPosts)\n  \n  async function searchPostsHandler(term) {\n\n    axiosWithAuth()\n      .post('/post/search', { searchTerm: term })\n      .then(res => {\n        setsearchPosts(res.data)\n        props.toggleSearchToTrue()\n      })\n      .catch(err => {\n      });\n  };\n\n\n   useEffect(() => {\n    onFirstLoad()\n  }, []);\n\nfunction onFirstLoad(){\n  props.fetchFilteredPosts(\"AllPosts\",\"date\")\n\n}\n\nconst handleChange = name => event => {\n  setOrderBy({\n    ...orderBy,\n    [name]: event.target.value,\n  });\n};\n\n  console.log(orderBy,\"ordersssssssssssssssssss\")\n\n  if (props.searchToggle === true) {\n\n    return (\n\n      <>\n\n        <Search searchPostsHandler={searchPostsHandler} />\n\n        <Dropdown>\n      <Dropdown.Toggle \n      variant=\"success\" \n      id=\"dropdown-basic\"\n      >\n        Order By\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu>\n        <Dropdown.Item >Action</Dropdown.Item>\n        <Dropdown.Item >Another action</Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n\n          {\n\n            searchPosts.map(p => {\n              return (\n                <>\n                  <IndividualPost post={p} key={caches.uid} fetchPosts={props.fetchFilteredPosts} />\n                </>\n              );\n            })\n\n\n          }\n\n\n          {/* <ExpandMoreIcon style={{ fontSize: \"100px\" }} /> */}\n\n        </div>\n      </>\n\n    )\n  }\n  else if(props.filteredPosts.length>0) {\n    return (\n      <>\n\n        <Search searchPostsHandler={searchPostsHandler} />\n\n\n            <Dropdown>\n          <Dropdown.Toggle variant=\"seconday\" id=\"dropdown-basic\">\n          Order By\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n            <Dropdown.Item href=\"#/action-1\">Date</Dropdown.Item>\n            <Dropdown.Item href=\"#/action-2\">Likes</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n\n       \n              {props.filteredPosts.map(p => {\n                return (\n                  <>\n                    <IndividualPost post={p} key={caches.uid} fetchPosts={props.fetchFilteredPosts} />\n                  </>\n                );\n              })}\n          \n    \n\n          {/* <ExpandMoreIcon style={{ fontSize: \"100px\" }} /> */}\n\n        </div>\n      </>\n    );\n  }else{\n\n    return (\n\n\n      <>\n      <h1>ayyyyy</h1>\n      </>\n    )\n  }\n\n\n};\n\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts,\n  orderPosts: state.post.order\n});\nexport default connect(\n  mapStateToProps,\n  { toggleSearchToTrue, fetchFilteredPosts, changeOrderPosts }\n)(Posts);\n"]},"metadata":{},"sourceType":"module"}