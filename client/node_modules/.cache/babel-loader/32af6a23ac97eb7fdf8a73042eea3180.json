{"ast":null,"code":"import _slicedToArray from \"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/ProfileImageShow.js\";\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport { Image } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { fetchProfileImage } from \"../store/actions/settingsActions\";\n\nfunction ProfileImageShow(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        thisImage = _useState2[0],\n        setThisimage = _useState2[1];\n\n  const userId = localStorage.getItem('id');\n  useEffect(() => {\n    props.fetchProfileImage(userId);\n\n    if (props.userImage > 0) {\n      console.log(props.userImage);\n      const fileRef = imagesRef.child(\"\".concat(userId, \"/\").concat(props.userImage.file_name));\n    }\n\n    function getImg() {\n      fileRef.getMetadata().then(metadata => {\n        fileRef.getDownloadURL().then(url => {\n          setThisimage(url); // let img = document.getElementById('document-image');\n          // if (metadata.contentType === 'application/pdf') {\n          //     img.src = '';\n          //     // TODO handle PDFs\n          //   } else {\n          //     img.src = url;\n          //   }\n        }).catch(err => {\n          console.error(err);\n        });\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Image, {\n    src: \"holder.js/171x180\",\n    rounded: true,\n    id: \"reg-image\",\n    style: {\n      height: \"200px\"\n    },\n    src: \"\".concat(thisImage),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = state => ({\n  userImage: state.setting.userImage\n});\n\nexport default connect(mapStateToProps, {\n  fetchProfileImage\n})(ProfileImageShow);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/ProfileImageShow.js"],"names":["React","useEffect","useState","imagesRef","Image","connect","fetchProfileImage","ProfileImageShow","props","thisImage","setThisimage","userId","localStorage","getItem","userImage","console","log","fileRef","child","file_name","getImg","getMetadata","then","metadata","getDownloadURL","url","catch","err","error","height","mapStateToProps","state","setting"],"mappings":";;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,kCAAlC;;AAIA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA,oBAEGN,QAAQ,CAAC,EAAD,CAFX;AAAA;AAAA,QAEtBO,SAFsB;AAAA,QAEZC,YAFY;;AAI7B,QAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAf;AAGAZ,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAACF,iBAAN,CAAwBK,MAAxB;;AAEA,QAAGH,KAAK,CAACM,SAAN,GAAgB,CAAnB,EAAqB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACM,SAAlB;AACA,YAAMG,OAAO,GAAGd,SAAS,CAACe,KAAV,WAAmBP,MAAnB,cAA6BH,KAAK,CAACM,SAAN,CAAgBK,SAA7C,EAAhB;AACD;;AACH,aAASC,MAAT,GAAkB;AAChBH,MAAAA,OAAO,CAACI,WAAR,GAAsBC,IAAtB,CAA4BC,QAAD,IAAc;AACvCN,QAAAA,OAAO,CAACO,cAAR,GAAyBF,IAAzB,CAA8BG,GAAG,IAAI;AAEnCf,UAAAA,YAAY,CAACe,GAAD,CAAZ,CAFmC,CAInC;AACA;AACA;AACA;AACA;AACA;AACA;AACD,SAXD,EAYCC,KAZD,CAYOC,GAAG,IAAI;AACZZ,UAAAA,OAAO,CAACa,KAAR,CAAcD,GAAd;AACD,SAdD;AAeD,OAhBD,EAgBGD,KAhBH,CAgBUC,GAAD,IAAS;AAChBZ,QAAAA,OAAO,CAACa,KAAR,CAAcD,GAAd;AACD,OAlBD;AAoBD;AAEA,GA9BQ,EA8BN,EA9BM,CAAT;AAmCA,SACI,0CAEI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,mBAAX;AAA+B,IAAA,OAAO,MAAtC;AAAuC,IAAA,EAAE,EAAC,WAA1C;AAAuD,IAAA,KAAK,EAAE;AAACE,MAAAA,MAAM,EAAC;AAAR,KAA9D;AAAgF,IAAA,GAAG,YAAKpB,SAAL,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAQH;;AAKD,MAAMqB,eAAe,GAAGC,KAAK,KAAK;AAChCjB,EAAAA,SAAS,EAAGiB,KAAK,CAACC,OAAN,CAAclB;AADM,CAAL,CAA7B;;AAGA,eAAeT,OAAO,CACpByB,eADoB,EAEpB;AAACxB,EAAAA;AAAD,CAFoB,CAAP,CAGbC,gBAHa,CAAf","sourcesContent":["\n\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport { Image } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { fetchProfileImage } from \"../store/actions/settingsActions\";\n\n\n\nfunction ProfileImageShow(props) {\n\n    const [thisImage,setThisimage]= useState('')\n\n    const userId = localStorage.getItem('id');\n\n    \n    useEffect(() => {\n      props.fetchProfileImage(userId)\n\n      if(props.userImage>0){\n        console.log(props.userImage)\n        const fileRef = imagesRef.child(`${userId}/${props.userImage.file_name}`);\n      }\n    function getImg() {\n      fileRef.getMetadata().then((metadata) => {\n        fileRef.getDownloadURL().then(url => {\n\n          setThisimage(url)\n\n          // let img = document.getElementById('document-image');\n          // if (metadata.contentType === 'application/pdf') {\n          //     img.src = '';\n          //     // TODO handle PDFs\n          //   } else {\n          //     img.src = url;\n          //   }\n        })\n        .catch(err => {\n          console.error(err);\n        })\n      }).catch((err) => {\n        console.error(err);\n      });\n  \n    }\n      \n    }, []);\n\n\n\n\n    return(\n        <>\n            {/* {(metadata.contentType === 'application/pdf')? <div id=\"div-pdf\" src={`${thisImage}`}></div> :  <img id=\"reg-image\" height=\"200px\" src={`${thisImage}`}></img>} */}\n            <Image src=\"holder.js/171x180\" rounded id=\"reg-image\"  style={{height:\"200px\"}} src={`${thisImage}`}/>\n            {/* {props.image.file_name} */}\n\n        </>\n    )\n}\n\n\n\n\nconst mapStateToProps = state => ({\n  userImage : state.setting.userImage\n});\nexport default connect(\n  mapStateToProps,\n  {fetchProfileImage}\n)(ProfileImageShow);\n"]},"metadata":{},"sourceType":"module"}