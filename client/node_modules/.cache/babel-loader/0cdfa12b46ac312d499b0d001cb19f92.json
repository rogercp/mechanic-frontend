{"ast":null,"code":"import _slicedToArray from \"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/Posts.js\";\nimport React, { useState, useEffect } from \"react\";\nimport DashSideNav from './DashSideNav';\nimport { axiosWithAuth } from '../helpers/index';\nimport IndividualPost from './IndividualPost';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from \"../store/actions/postActions\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport search from './Search';\nimport Search from \"./Search\";\n\nfunction Posts(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchTerm = _useState2[0],\n        setSearchTerm = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        filteredRecipes = _useState4[0],\n        setFilteredRecipes = _useState4[1]; // searchPostsHandler=e=>{\n  //   const data = Array.from(props.myposts);\n  //   const recipes=data.filter((recipe)=>{if(recipe.title.includes(e.target.value)){return recipe;}\n  //   })\n  //   setState({filteredRecipes:recipes});\n  // }\n\n\n  async function searchPostsHandler(term) {\n    console.log(term, \"term\");\n    await setSearchTerm(term);\n    console.log(sear, \"term\");\n    axiosWithAuth().post('/post/search', searchTerm).then(res => {\n      setFilteredRecipes(res.data);\n    }).catch(err => {});\n  }\n\n  ;\n  useEffect(() => {\n    props.fetchPosts();\n    console.log(props.myposts, \"usersposts\");\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Search, {\n    searchPostsHandler: searchPostsHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, filteredRecipes.length > 0 ? filteredRecipes.map(p => {\n    return React.createElement(React.Fragment, null, React.createElement(IndividualPost, {\n      post: p,\n      key: caches.uid,\n      fetchPosts: props.fetchPosts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }) : props.myposts.map(p => {\n    return React.createElement(React.Fragment, null, React.createElement(IndividualPost, {\n      post: p,\n      key: caches.uid,\n      fetchPosts: props.fetchPosts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }));\n  }), React.createElement(ExpandMoreIcon, {\n    style: {\n      fontSize: \"100px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })));\n}\n\n;\n\nconst mapStateToProps = state => ({\n  myposts: state.post.posts\n});\n\nexport default connect(mapStateToProps, {\n  fetchPosts\n})(Posts);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/Posts.js"],"names":["React","useState","useEffect","DashSideNav","axiosWithAuth","IndividualPost","connect","fetchPosts","ExpandMoreIcon","search","Search","Posts","props","searchTerm","setSearchTerm","filteredRecipes","setFilteredRecipes","searchPostsHandler","term","console","log","sear","post","then","res","data","catch","err","myposts","display","flexDirection","alignItems","length","map","p","caches","uid","fontSize","mapStateToProps","state","posts"],"mappings":"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","sourcesContent":["\n\nimport React, { useState, useEffect} from \"react\";\nimport DashSideNav from './DashSideNav';\nimport { axiosWithAuth } from '../helpers/index';\nimport IndividualPost from './IndividualPost'\nimport { connect } from 'react-redux';\nimport { fetchPosts } from \"../store/actions/postActions\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport search from './Search';\nimport Search from \"./Search\";\n\n\n\n\nfunction Posts(props) {\n  \nconst [searchTerm,setSearchTerm] = useState('')\nconst [filteredRecipes,setFilteredRecipes] = useState([])\n\n\n\n  // searchPostsHandler=e=>{\n  //   const data = Array.from(props.myposts);\n  //   const recipes=data.filter((recipe)=>{if(recipe.title.includes(e.target.value)){return recipe;}\n  //   })\n  //   setState({filteredRecipes:recipes});\n  // }\n\n\n  async function searchPostsHandler (term) {\n    console.log(term,\"term\")\n   await setSearchTerm(term)\n   console.log(sear,\"term\")\n\n    axiosWithAuth()\n        .post('/post/search', searchTerm)\n        .then(res => {  \n          setFilteredRecipes(res.data)\n        })\n        .catch(err => {      \n        });\n  };\n  \n\n    useEffect(() => {\n      props.fetchPosts()\n      console.log(props.myposts,\"usersposts\")\n    }, []);\n\n\n\n    return (\n      <>\n\n        <Search  searchPostsHandler={searchPostsHandler} />\n \n      <div style={{display:\"flex\", flexDirection:\"column\",alignItems:\"center\"}}>\n        \n        {filteredRecipes.length>0 ?\n\n          filteredRecipes.map(p => {\n          return (\n              <>\n              <IndividualPost   post={p}  key={caches.uid} fetchPosts={props.fetchPosts} />\n              </>\n          );\n      })\n        \n        :\n        \n        props.myposts.map(p => {\n            return (\n                <>\n                <IndividualPost   post={p}  key={caches.uid} fetchPosts={props.fetchPosts} />\n                </>\n            );\n        })\n  \n        }\n        \n        \n         <ExpandMoreIcon style={{fontSize:\"100px\"}} />\n\n        </div> \n      </>\n    );\n};\n\n\nconst mapStateToProps = state => ({\n  myposts: state.post.posts,\n});\nexport default connect(\n  mapStateToProps,\n  {fetchPosts}\n)(Posts);\n"]},"metadata":{},"sourceType":"module"}