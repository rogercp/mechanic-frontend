{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _FlippyFooter = _interopRequireDefault(require(\"./FlippyFooter\"));\n\nrequire(\"./styles.css\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Flippy =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Flippy, _React$Component);\n\n  function Flippy(props) {\n    var _this;\n\n    _classCallCheck(this, Flippy);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Flippy).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"toggle\", function () {\n      _this.setState({\n        isFlipped: !_this.state.isFlipped\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFooterDotClick\", function (newCardIndex, event) {\n      _this.setState({\n        isFlipped: newCardIndex === 0\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleHoverOn\", function (event) {\n      _this.setState({\n        isFlipped: true\n      });\n\n      _this.props.onMouseEnter(event);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTouchStart\", function (event) {\n      _this.setState({\n        isFlipped: true,\n        isTouchDevice: true\n      });\n\n      _this.props.onTouchStart(event);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTouchEnd\", function (event) {\n      _this.setState({\n        isFlipped: false\n      });\n\n      _this.props.onTouchEnd(event);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleHoverOff\", function (event) {\n      _this.setState({\n        isFlipped: false\n      });\n\n      _this.props.onMouseLeave(event);\n    });\n\n    _this.state = {\n      isFlipped: false,\n      isTouchDevice: false\n    };\n    return _this;\n  }\n\n  _createClass(Flippy, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          style = _this$props.style,\n          flipDirection = _this$props.flipDirection,\n          flipOnHover = _this$props.flipOnHover,\n          flipOnClick = _this$props.flipOnClick;\n      var _this$state = this.state,\n          isFlipped = _this$state.isFlipped,\n          activeCardIndex = _this$state.activeCardIndex,\n          isTouchDevice = _this$state.isTouchDevice;\n      var methods = !!flipOnHover ? {\n        onMouseEnter: this.handleHoverOn,\n        onMouseLeave: this.handleHoverOff,\n        onTouchStart: this.handleTouchStart,\n        onTouchEnd: this.handleTouchEnd\n      } : flipOnClick ? {\n        onClick: this.toggle\n      } : {};\n      return _react.default.createElement(\"div\", _extends({\n        className: \"flippy-container\",\n        style: _objectSpread({}, style)\n      }, methods), _react.default.createElement(\"div\", {\n        className: \"flippy-cardContainer-wrapper \".concat(flipDirection)\n      }, _react.default.createElement(\"div\", {\n        className: \"flippy-cardContainer \".concat(isFlipped ? 'isActive' : '', \" \").concat(isTouchDevice ? 'istouchdevice' : '')\n      }, children), this.props.showNavigation && _react.default.createElement(_FlippyFooter.default, {\n        onDotClick: this.handleFooterDotClick,\n        activeCardIndex: activeCardIndex,\n        cards: this.props.children\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      return _objectSpread({}, state, {\n        isFlipped: typeof props.isFlipped === 'boolean' ? props.isFlipped : state.isFlipped\n      });\n    }\n  }]);\n\n  return Flippy;\n}(_react.default.Component);\n\nexports.default = Flippy;\nFlippy.defaultProps = {\n  showNavigation: false,\n  flipDirection: 'horizontal',\n  flipOnHover: false,\n  flipOnClick: true,\n  usePrettyStyle: true,\n  onMouseEnter: function onMouseEnter() {},\n  onMouseLeave: function onMouseLeave() {},\n  onTouchStart: function onTouchStart() {},\n  onTouchEnd: function onTouchEnd() {},\n  onClick: function onClick() {}\n};","map":null,"metadata":{},"sourceType":"script"}