{"ast":null,"code":"import _defineProperty from \"/Users/roger/Projects/mechanic-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_POST_START, ADD_POST_SUCCESS, ADD_POST_FAILURE, FETCH_POST_START, FETCH_POST_SUCCESS, FETCH_POST_FAILURE } from '../actions/postActions';\nconst initialState = {\n  addingPost: false,\n  posts: []\n};\n\nconst postReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_POST_START:\n      return _objectSpread({}, state, {\n        posts: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/src/store/reducers/postReducer.js"],"names":["ADD_POST_START","ADD_POST_SUCCESS","ADD_POST_FAILURE","FETCH_POST_START","FETCH_POST_SUCCESS","FETCH_POST_FAILURE","initialState","addingPost","posts","postReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SACAA,cADA,EAECC,gBAFD,EAGCC,gBAHD,EAICC,gBAJD,EAKAC,kBALA,EAMCC,kBAND,QAOM,wBAPN;AASA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAC,KADM;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAElD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKT,gBAAL;AACA,+BACKO,KADL;AAEEF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFhB;;AAMA;AACA,aAAOH,KAAP;AAVJ;AAaD,CAfH;;AAiBE,eAAeD,WAAf","sourcesContent":["import {\nADD_POST_START ,\n ADD_POST_SUCCESS,\n ADD_POST_FAILURE,\n FETCH_POST_START,\nFETCH_POST_SUCCESS,\n FETCH_POST_FAILURE,\n}from '../actions/postActions';\n\nconst initialState = {\n    addingPost:false,\n    posts: [],\n\n}\n\n\nconst postReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case FETCH_POST_START:\n        return {\n          ...state,\n          posts: action.payload\n        };\n\n\n        default: \n        return state \n    }\n\n  };\n\n  export default postReducer;"]},"metadata":{},"sourceType":"module"}