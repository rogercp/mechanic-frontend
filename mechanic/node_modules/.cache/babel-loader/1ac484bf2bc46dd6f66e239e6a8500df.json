{"ast":null,"code":"// /**\n//  * Dependencies\n//  */\n// import React from 'react';\n// import { Route } from 'react-router-dom';\n// import firebase from 'firebase';\n// import uuid from 'uuid';\n// import axios from 'axios';\n// /**\n//  * Define route component\n//  */\n// const PrivateRoute = ({ component: Component, errorBoundary: ErrorBoundary, path, exact }) => {\n//     firebase.auth().onAuthStateChanged(async (user)=>{\n//         if(user){\n//           let displayName = user.displayName;\n//           let email = user.email;\n//           let emailVerified = user.emailVerified;\n//           let photoURL = user.photoURL;\n//           let isAnonymous = user.isAnonymous;\n//           let uid = user.uid;\n//           let providerData = user.providerData;\n//             let token = await user.getIdToken()\n//             localStorage.setItem('token',token)\n//             axios.post(`${process.env.REACT_APP_API_URL}/users/auth`,{\n//                 user:user,\n//                 token:token\n//             }).then(res =>{\n//                 localStorage.setItem('id',res.data.id)\n//             }).catch(err =>{\n//                 console.log(err)\n//             });\n//         }\n//     })\n//     if (exact) {\n//         return <Route key={uuid.v4()} exact path={path} render={props => (\n//           <ErrorBoundary>\n//             <Component {...props} />\n//           </ErrorBoundary>\n//         )} />\n//       } else {\n//         return <Route key={uuid.v4()} path={path} render={props => (\n//           <ErrorBoundary>\n//             <Component {...props} />\n//           </ErrorBoundary>\n//         )} />\n//       }\n// }\n// /**\n//  * Export route component\n//  */\n// export default PrivateRoute;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-front/mechanic-frontend/mechanic/src/routes/helpers/PrivateRoute.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA","sourcesContent":["// /**\n//  * Dependencies\n//  */\n\n// import React from 'react';\n// import { Route } from 'react-router-dom';\n// import firebase from 'firebase';\n// import uuid from 'uuid';\n// import axios from 'axios';\n\n// /**\n//  * Define route component\n//  */\n// const PrivateRoute = ({ component: Component, errorBoundary: ErrorBoundary, path, exact }) => {\n\n//     firebase.auth().onAuthStateChanged(async (user)=>{\n\n//         if(user){\n            \n\n//           let displayName = user.displayName;\n//           let email = user.email;\n//           let emailVerified = user.emailVerified;\n//           let photoURL = user.photoURL;\n//           let isAnonymous = user.isAnonymous;\n//           let uid = user.uid;\n//           let providerData = user.providerData;\n    \n\n//             let token = await user.getIdToken()\n\n//             localStorage.setItem('token',token)\n\n//             axios.post(`${process.env.REACT_APP_API_URL}/users/auth`,{\n//                 user:user,\n//                 token:token\n//             }).then(res =>{\n//                 localStorage.setItem('id',res.data.id)\n//             }).catch(err =>{\n//                 console.log(err)\n//             });\n//         }\n//     })\n\n//     if (exact) {\n//         return <Route key={uuid.v4()} exact path={path} render={props => (\n//           <ErrorBoundary>\n//             <Component {...props} />\n//           </ErrorBoundary>\n//         )} />\n//       } else {\n//         return <Route key={uuid.v4()} path={path} render={props => (\n//           <ErrorBoundary>\n//             <Component {...props} />\n//           </ErrorBoundary>\n//         )} />\n//       }\n\n// }\n\n// /**\n//  * Export route component\n//  */\n\n// export default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}