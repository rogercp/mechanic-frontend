{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/Posts.js\";\nimport React, { useState, useEffect } from \"react\";\nimport DashSideNav from './DashSideNav';\nimport { axiosWithAuth } from '../helpers/index';\nimport IndividualPost from './IndividualPost';\nimport { connect } from 'react-redux';\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\";\nimport { fetchPosts } from \"../store/actions/postActions\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport search from './Search';\nimport Search from \"./Search\";\n\nfunction Posts(props) {\n  const [searchPosts, setsearchPosts] = useState([]);\n\n  async function searchPostsHandler(term) {\n    axiosWithAuth().post('/post/search', {\n      searchTerm: term\n    }).then(res => {\n      setsearchPosts(res.data);\n      props.toggleSearchToTrue();\n    }).catch(err => {});\n  }\n\n  ;\n  useEffect(() => {\n    onFirstLoad();\n  });\n\n  function onFirstLoad() {\n    props.fetchFilteredPosts(\"AllPosts\");\n  }\n\n  if (props.searchToggle === true) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Search, {\n      searchPostsHandler: searchPostsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, searchPosts.map(p => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IndividualPost, {\n        post: p,\n        key: caches.uid,\n        fetchPosts: props.fetchPosts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      style: {\n        fontSize: \"100px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Search, {\n      searchPostsHandler: searchPostsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, props.filteredPosts.map(p => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IndividualPost, {\n        post: p,\n        key: caches.uid,\n        fetchPosts: props.fetchPosts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 19\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(ExpandMoreIcon, {\n      style: {\n        fontSize: \"100px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    })));\n  }\n}\n\n;\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts\n});\n\nexport default connect(mapStateToProps, {\n  toggleSearchToTrue,\n  fetchFilteredPosts,\n  fetchPosts\n})(Posts);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/Posts.js"],"names":["React","useState","useEffect","DashSideNav","axiosWithAuth","IndividualPost","connect","fetchFilteredPosts","toggleSearchToTrue","fetchPosts","ExpandMoreIcon","search","Search","Posts","props","searchPosts","setsearchPosts","searchPostsHandler","term","post","searchTerm","then","res","data","catch","err","onFirstLoad","searchToggle","display","flexDirection","alignItems","map","p","caches","uid","fontSize","filteredPosts","mapStateToProps","state","myposts","posts"],"mappings":"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","sourcesContent":["\n\nimport React, { useState, useEffect } from \"react\";\nimport DashSideNav from './DashSideNav';\nimport { axiosWithAuth } from '../helpers/index';\nimport IndividualPost from './IndividualPost'\nimport { connect } from 'react-redux';\nimport {  fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { toggleSearchToTrue } from \"../store/actions/postActions\";\nimport {fetchPosts} from \"../store/actions/postActions\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport search from './Search';\nimport Search from \"./Search\";\n\nfunction Posts(props) {\n\n  const [searchPosts, setsearchPosts] = useState([])\n \n\n  async function searchPostsHandler(term) {\n\n    axiosWithAuth()\n      .post('/post/search', { searchTerm: term })\n      .then(res => {\n        setsearchPosts(res.data)\n       props.toggleSearchToTrue()\n      })\n      .catch(err => {\n      });\n  };\n\n\n  useEffect(() => {\n    onFirstLoad()\n  },);\n\n\n  function onFirstLoad(){\n\n    props.fetchFilteredPosts(\"AllPosts\")\n\n  }\n\n\n  if (props.searchToggle === true) {\n\n    return (\n\n      <>\n\n        <Search searchPostsHandler={searchPostsHandler} />\n\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n\n\n          {\n\n            searchPosts.map(p => {\n              return (\n                <>\n                  <IndividualPost   post={p} key={caches.uid} fetchPosts={props.fetchPosts} />\n                </>\n              );\n            })\n\n\n          }\n\n\n          <ExpandMoreIcon style={{ fontSize: \"100px\" }} />\n\n        </div>\n      </>\n\n    )\n  } \n  else {\n    return (\n      <>\n\n        <Search searchPostsHandler={searchPostsHandler} />\n\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n\n      \n            {props.filteredPosts.map(p => {\n              return (\n                <>\n                  <IndividualPost   post={p} key={caches.uid} fetchPosts={props.fetchPosts} />\n                </>\n              );\n            })}\n\n          \n\n          <ExpandMoreIcon style={{ fontSize: \"100px\" }} />\n\n        </div>\n      </>\n    );\n  }\n\n\n};\n\n\nconst mapStateToProps = state => ({\n  searchToggle: state.post.searchToggle,\n  myposts: state.post.posts,\n  filteredPosts: state.post.filteredPosts\n});\nexport default connect(\n  mapStateToProps,\n  {toggleSearchToTrue,fetchFilteredPosts,fetchPosts }\n)(Posts);\n"]},"metadata":{},"sourceType":"module"}