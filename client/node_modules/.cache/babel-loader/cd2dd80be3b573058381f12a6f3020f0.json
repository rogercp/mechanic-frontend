{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/PostForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { addPost } from \"../store/actions/postActions\";\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { fetchProfileImage } from \"../store/actions/settingsActions\";\nimport moment from 'moment';\nimport PostImageFormModal from './PostImageFormModal';\nimport { withRouter } from 'react-router-dom';\nimport '../styles/navbar.scss';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: 200\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  },\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction PostForm(props) {\n  const time = moment().format(\"MMMM Do YYYY, h:mma\");\n  const userId = localStorage.getItem('id');\n  const username = localStorage.getItem('username');\n  const classes = useStyles(); // const [currentPost,setCurrentPost] = useState()\n\n  const [state, setState] = React.useState({\n    displayName: username,\n    user_id: userId,\n    category: '',\n    post_text: '',\n    post_date: time\n  });\n  const [fullopen, setFullOpen] = useState(false);\n  const [errorOpen, setErrorOpen] = useState(false);\n\n  const handlefullOpen = () => {\n    setFullOpen(true);\n  };\n\n  const handlefullClose = () => {\n    setFullOpen(false);\n  };\n\n  function handleErrorClose() {\n    setErrorOpen(false);\n  }\n\n  function handleErrorOpen() {\n    setErrorOpen(true);\n  }\n\n  const handleChange = name => event => {\n    setState({ ...state,\n      [name]: event.target.value\n    });\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    props.addPost(state);\n    props.fetchFilteredPosts();\n    handlefullOpen(); // props.onClose();\n  };\n\n  console.log(props.currentPost, \"currentPosty\");\n  useEffect(() => {// setCurrentPost(props.currentPost)\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: onSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    name: \"category\",\n    className: classes.textField,\n    value: state.category,\n    onChange: handleChange('category'),\n    inputProps: {\n      name: 'type',\n      id: 'outlined-type-native-simple'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Maintence\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Maintence\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Mods\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"Mods\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Repairs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"Repairs\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Tips\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"Tips\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Exotics\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, \"Exotics\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"German\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"German\")), /*#__PURE__*/React.createElement(TextField, {\n    id: \"outlined-multiline-static\",\n    multiline: true,\n    name: \"post_text\",\n    value: state.post_text,\n    onChange: handleChange('post_text') //   rows=\"4\"\n    ,\n    placeholder: \"Description\",\n    className: classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    className: classes.button,\n    onClick: onSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, \"Enter\")), /*#__PURE__*/React.createElement(PostImageFormModal, {\n    post: props.currentPost,\n    onclose: props.onClose,\n    open: fullopen,\n    handleClose: handlefullClose,\n    onClose: handlefullClose,\n    onOpen: handlefullOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }));\n}\n\n;\n\nconst mapStateToProps = state => ({\n  userImage: state.setting.userImage,\n  currentPost: state.post.currentPost\n});\n\nexport default connect(mapStateToProps, {\n  addPost,\n  fetchFilteredPosts,\n  fetchProfileImage\n})(withRouter(PostForm));","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/PostForm.js"],"names":["React","useEffect","useState","makeStyles","TextField","InputLabel","FormControl","Select","Button","connect","addPost","fetchFilteredPosts","fetchProfileImage","moment","PostImageFormModal","withRouter","useStyles","theme","formControl","margin","spacing","width","selectEmpty","marginTop","container","display","flexWrap","textField","marginLeft","marginRight","button","PostForm","props","time","format","userId","localStorage","getItem","username","classes","state","setState","displayName","user_id","category","post_text","post_date","fullopen","setFullOpen","errorOpen","setErrorOpen","handlefullOpen","handlefullClose","handleErrorClose","handleErrorOpen","handleChange","name","event","target","value","onSubmitHandler","e","preventDefault","console","log","currentPost","alignItems","justifyContent","id","onClose","mapStateToProps","userImage","setting","post"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { addPost } from \"../store/actions/postActions\";\nimport { fetchFilteredPosts } from \"../store/actions/postActions\";\nimport { fetchProfileImage } from \"../store/actions/settingsActions\";\nimport moment from 'moment'\nimport PostImageFormModal from './PostImageFormModal'\nimport { withRouter } from 'react-router-dom';\n\nimport '../styles/navbar.scss';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    width: 200,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction PostForm(props) {\n\n  const time = moment().format(\"MMMM Do YYYY, h:mma\")\n\n  const userId = localStorage.getItem('id');\n  const username = localStorage.getItem('username');\n\n\n  const classes = useStyles();\n  // const [currentPost,setCurrentPost] = useState()\n  const [state, setState] = React.useState({\n    displayName: username,\n    user_id: userId,\n    category: '',\n    post_text: '',\n    post_date: time,\n  });\n\n  const [fullopen, setFullOpen] = useState(false);\n  const [errorOpen, setErrorOpen] = useState(false);\n\n\n  const handlefullOpen = () => {\n    setFullOpen(true);\n  };\n  const handlefullClose = () => {\n    setFullOpen(false);\n  };\n\n  function handleErrorClose() {\n    setErrorOpen(false);\n  }\n\n  function handleErrorOpen() {\n    setErrorOpen(true);\n  }\n\n\n\n\n  const handleChange = name => event => {\n    setState({\n      ...state,\n      [name]: event.target.value,\n    });\n  };\n\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    props.addPost(state);\n    props.fetchFilteredPosts();\n    handlefullOpen()\n\n    // props.onClose();\n  };\n\n  console.log(props.currentPost, \"currentPosty\")\n\n  useEffect(() => {\n\n    // setCurrentPost(props.currentPost)\n  }, []);\n\n  return (\n    <>\n      <FormControl className={classes.formControl} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }} noValidate autoComplete=\"off\" onSubmit={onSubmitHandler}>\n\n        <InputLabel id=\"demo-simple-select-label\">Category</InputLabel>\n        <Select\n          native\n          name=\"category\"\n          className={classes.textField}\n          value={state.category}\n          onChange={handleChange('category')}\n          inputProps={{\n            name: 'type',\n            id: 'outlined-type-native-simple',\n          }}\n        >\n          <option value=\"\" />\n          <option value={\"Maintence\"}>Maintence</option>\n          <option value={\"Mods\"}>Mods</option>\n          <option value={\"Repairs\"}>Repairs</option>\n          <option value={\"Tips\"}>Tips</option>\n          <option value={\"Exotics\"}>Exotics</option>\n          <option value={\"German\"}>German</option>\n\n        </Select>\n\n        <TextField\n          id=\"outlined-multiline-static\"\n          multiline\n          name=\"post_text\"\n          value={state.post_text}\n          onChange={handleChange('post_text')}\n          //   rows=\"4\"\n          placeholder=\"Description\"\n          className={classes.textField}\n          margin=\"normal\"\n          variant=\"outlined\"\n        />\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          className={classes.button}\n          onClick={onSubmitHandler}\n        >\n          Enter\n        </Button>\n\n      </FormControl>\n\n      <PostImageFormModal\n        post={props.currentPost}\n        onclose={props.onClose}\n        open={fullopen}\n        handleClose={handlefullClose}\n        onClose={handlefullClose}\n        onOpen = {handlefullOpen}\n      />\n    </>\n  );\n};\n\n\nconst mapStateToProps = (state) => ({\n  userImage: state.setting.userImage,\n  currentPost: state.post.currentPost\n});\n\nexport default connect(\n  mapStateToProps,\n  { addPost, fetchFilteredPosts, fetchProfileImage }\n)(withRouter(PostForm));\n\n"]},"metadata":{},"sourceType":"module"}