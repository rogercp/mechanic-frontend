{"ast":null,"code":"import _slicedToArray from \"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/ProfileImageShow.js\";\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport { Image } from 'react-bootstrap';\nimport { fetchProfileImage } from \"../store/actions/settingsActions\";\nimport { connect } from 'react-redux';\nimport { axiosWithAuth } from '../helpers/index';\nimport Avatar from '@material-ui/core/Avatar';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\n\nfunction ProfileImageShow(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        thisImage = _useState2[0],\n        setThisimage = _useState2[1];\n\n  const userId = localStorage.getItem('id');\n  const fileRef = imagesRef.child(\"\".concat(userId, \"/\").concat(props.image.file_name));\n  useEffect(() => {\n    getImg();\n  }, []);\n\n  function getImg() {\n    fileRef.getMetadata().then(metadata => {\n      fileRef.getDownloadURL().then(url => {\n        setThisimage(url); // let img = document.getElementById('document-image');\n        // if (metadata.contentType === 'application/pdf') {\n        //     img.src = '';\n        //     // TODO handle PDFs\n        //   } else {\n        //     img.src = url;\n        //   }\n      }).catch(err => {\n        console.error(err);\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function deleteImage() {\n    fileRef.delete().then(() => {\n      console.log(\"hitting\");\n      console.log(props.image.id, \"422\");\n      axiosWithAuth().delete(\"/users/imagee/\".concat(props.image.id)).then(res => {\n        props.fetchProfileImage(userId);\n      }).catch(error => {\n        console.error(error);\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  if (props.isCirclePic) {\n    return;\n  } else {}\n\n  return React.createElement(React.Fragment, null, \"()\", React.createElement(Avatar, {\n    alt: \"Remy Sharp\",\n    src: \"/static/images/avatar/1.jpg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: deleteImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"del\"), React.createElement(Image, {\n    src: \"holder.js/171x180\",\n    rounded: true,\n    id: \"reg-image\",\n    style: {\n      maxWidth: \"100%\"\n    },\n    src: \"\".concat(thisImage),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }));\n}\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps, {\n  fetchProfileImage\n})(ProfileImageShow);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/ProfileImageShow.js"],"names":["React","useEffect","useState","imagesRef","Image","fetchProfileImage","connect","axiosWithAuth","Avatar","useStyles","makeStyles","theme","root","display","margin","spacing","ProfileImageShow","props","thisImage","setThisimage","userId","localStorage","getItem","fileRef","child","image","file_name","getImg","getMetadata","then","metadata","getDownloadURL","url","catch","err","console","error","deleteImage","delete","log","id","res","isCirclePic","maxWidth","mapStateToProps","state"],"mappings":"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","sourcesContent":["\n\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport { Image } from 'react-bootstrap';\nimport { fetchProfileImage } from \"../store/actions/settingsActions\";\nimport { connect } from 'react-redux';\nimport { axiosWithAuth } from '../helpers/index';\nimport Avatar from '@material-ui/core/Avatar';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nfunction ProfileImageShow(props) {\n\n    const [thisImage,setThisimage]= useState('')\n  \n    const userId = localStorage.getItem('id');\n\n    const fileRef = imagesRef.child(`${userId}/${props.image.file_name}`);\n\n    \n\n\n    useEffect(() => {\n      getImg()\n    }, []);\n       \n      function getImg() {\n        fileRef.getMetadata().then((metadata) => {\n          fileRef.getDownloadURL().then(url => {\n\n            setThisimage(url)\n\n            // let img = document.getElementById('document-image');\n            // if (metadata.contentType === 'application/pdf') {\n            //     img.src = '';\n            //     // TODO handle PDFs\n            //   } else {\n            //     img.src = url;\n            //   }\n          })\n          .catch(err => {\n            console.error(err);\n          })\n        }).catch((err) => {\n          console.error(err);\n        });\n}\n\n  function deleteImage(){\n\n    fileRef.delete().then(()=>{\n     console.log(\"hitting\")\n     console.log(props.image.id,\"422\")\n      axiosWithAuth().delete(`/users/imagee/${props.image.id}`)\n      .then(res => {\n        props.fetchProfileImage(userId)       \n       })\n      .catch(error => {\n          console.error(error);\n      })\n    })\n    .catch(err => {\n            console.error(err);\n    })\n}\n\n  if(props.isCirclePic){\n    return \n  }else{\n    \n  }\n\n    return(\n        <>\n            \n            {/* {(metadata.contentType === 'application/pdf')? <div id=\"div-pdf\" src={`${thisImage}`}></div> :  <img id=\"reg-image\" height=\"200px\" src={`${thisImage}`}></img>} */}\n            ()\n            <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n\n          <button onClick={deleteImage}>del</button>\n            <Image src=\"holder.js/171x180\" rounded id=\"reg-image\"  style={{maxWidth: \"100%\"}} src={`${thisImage}`}/>\n            {/* {props.image.file_name} */}\n\n        </>\n    )\n}\n\n\n\n\nconst mapStateToProps = state => ({\n});\nexport default connect(\n  mapStateToProps,\n  {fetchProfileImage}\n)(ProfileImageShow);"]},"metadata":{},"sourceType":"module"}