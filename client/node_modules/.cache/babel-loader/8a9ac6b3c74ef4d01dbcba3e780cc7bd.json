{"ast":null,"code":"import _slicedToArray from \"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/ImageCarousel.js\";\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { Carousel, Image } from 'react-bootstrap';\nimport CarImageFixShow from './CarImageFixShow';\nimport PostImageShow from './PostImageShow'; // const useStyles = makeStyles(theme => ({\n//   root: {\n//     maxWidth: 400,\n//     flexGrow: 1,\n//   },\n//   header: {\n//     display: 'flex',\n//     alignItems: 'center',\n//     height: 50,\n//     paddingLeft: theme.spacing(4),\n//     backgroundColor: theme.palette.background.default,\n//   },\n//   img: {\n//     display: 'block',\n//   },\n// }));\n\nfunction ImageCarousel(props) {\n  // const classes = useStyles();\n  const theme = useTheme();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        activeStep = _React$useState2[0],\n        setActiveStep = _React$useState2[1];\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  if (props.isImageDelShow) {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, props.postImages.map((image, index) => {\n      return React.createElement(\"div\", {\n        style: {\n          overflow: \"auto\",\n          width: \"75px\",\n          margin: \"1px\",\n          overflow: \"hidden\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(PostImageShow, {\n        style: {\n          backgroundColor: \"black\"\n        },\n        key: index,\n        post: props.post,\n        isDeleteableOnClick: true,\n        fetchPostImage: props.fetchPostImage,\n        image: image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    })));\n  } else if (props.isPostImage) {} else {\n    return React.createElement(Dialog, {\n      style: {\n        backgroundColor: \"black\"\n      },\n      open: props.open,\n      onClose: props.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Carousel, {\n      style: {\n        backgroundColor: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, props.postImages.map((image, index) => {\n      return React.createElement(Carousel.Item, {\n        style: {\n          overflow: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(PostImageShow, {\n        style: {\n          backgroundColor: \"black\"\n        },\n        key: index,\n        post: props.post,\n        image: image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Carousel.Caption, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }));\n    })));\n  }\n}\n\nexport default ImageCarousel;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/ImageCarousel.js"],"names":["React","makeStyles","useTheme","MobileStepper","Button","KeyboardArrowLeft","KeyboardArrowRight","Dialog","Carousel","Image","CarImageFixShow","PostImageShow","ImageCarousel","props","theme","useState","activeStep","setActiveStep","handleNext","prevActiveStep","handleBack","isImageDelShow","postImages","map","image","index","overflow","width","margin","backgroundColor","post","fetchPostImage","isPostImage","open","handleClose"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport MobileStepper from '@material-ui/core/MobileStepper';\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { Carousel, Image } from 'react-bootstrap';\nimport CarImageFixShow from './CarImageFixShow';\nimport PostImageShow from './PostImageShow';\n\n\n\n\n// const useStyles = makeStyles(theme => ({\n//   root: {\n//     maxWidth: 400,\n//     flexGrow: 1,\n//   },\n//   header: {\n//     display: 'flex',\n//     alignItems: 'center',\n//     height: 50,\n//     paddingLeft: theme.spacing(4),\n//     backgroundColor: theme.palette.background.default,\n//   },\n//   img: {\n//     display: 'block',\n//   },\n// }));\n\nfunction ImageCarousel(props) {\n  // const classes = useStyles();\n  const theme = useTheme();\n  const [activeStep, setActiveStep] = React.useState(0);\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n\nif(props.isImageDelShow){\n  return (\n    <>\n      <div>\n        {props.postImages.map((image, index) => {\n\n          return (\n       \n            <div style={{ overflow: \"auto\",width:\"75px\",margin:\"1px\",overflow:\"hidden\"}} >\n              <PostImageShow style={{ backgroundColor: \"black\" }} key={index} post={props.post} isDeleteableOnClick={true} fetchPostImage={props.fetchPostImage} image={image} />\n             \n            </div>\n         \n          )\n\n        })}\n      </div>\n</>\n\n  );\n}else if(props.isPostImage){\n\n}\n\n\n\nelse{\n  return (\n    <Dialog style={{ backgroundColor: \"black\" }} open={props.open} onClose={props.handleClose} >\n      <Carousel style={{ backgroundColor: \"black\" }}>\n        {props.postImages.map((image, index) => {\n          return (\n            <Carousel.Item style={{ overflow: \"auto\" }} >\n              <PostImageShow style={{ backgroundColor: \"black\" }} key={index} post={props.post} image={image} />\n              <Carousel.Caption>\n                {/* <h3>First slide label</h3> */}\n              </Carousel.Caption>\n            </Carousel.Item>\n          )\n\n        })}\n      </Carousel>\n\n    </Dialog>\n  );\n}\n  \n}\n\nexport default ImageCarousel;\n"]},"metadata":{},"sourceType":"module"}