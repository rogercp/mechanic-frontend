{"ast":null,"code":"var _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/ProfileImageUpload.js\";\nimport React, { useState, use } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport axiosWithAuth from '../helpers/axiosWithAuth';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { connect } from 'react-redux';\nimport { fetchProfileImage } from \"../store/actions/settingsActions\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction ProfileImageUpload(props) {\n  const classes = useStyles();\n  const [file, setFile] = useState({});\n  const userId = localStorage.getItem('id');\n  useEffect(() => {\n    props.fetchProfileImage(userId);\n  }, [file]); // async function fetchProfileImage() {\n  //     let userImages = await axiosWithAuth().get(`/users/image/${userId}`)\n  //     setUserImage(userImages.data);\n  //     return userImages;\n  // }\n\n  function handleInputChanges(e) {\n    e.preventDefault();\n    const file = e.target.files[0];\n\n    if (!file) {\n      return;\n    }\n\n    if (file && file.size > 1e8) {\n      alert(\"File is too large. Maximum limit is 100MB.\");\n      e.target.value = '';\n    } else {\n      setFile(file);\n    }\n  }\n\n  function handleSubmitUploaderProfilePicture(e) {\n    e.preventDefault(); // Create file ref (Example: /documents/:car_id/:file_name)\n\n    const fileRef = imagesRef.child(`${userId}/${file.name}`); // Upload file\n\n    fileRef.put(file).then(snapshot => {\n      axiosWithAuth().post(`/users/image/${userId}`, {\n        file_name: file.name\n      }).then(res => {\n        props.onClose();\n        props.fetchProfileImage(userId);\n      }).catch(error => {\n        console.error(error);\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"200px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, props.carFix ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 34\n    }\n  }, \"no image\") : null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmitUploaderProfilePicture,\n    style: {\n      display: 'flex',\n      flexDirection: \"column\",\n      maxWidth: \"200px\",\n      justifyContent: \"Center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    id: \"uploader\",\n    type: \"file\",\n    accept: \"image/*,.pdf,.doc\",\n    onChange: handleInputChanges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    name: \"car_type\",\n    color: \"default\",\n    className: classes.button,\n    startIcon: /*#__PURE__*/React.createElement(CloudUploadIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 40\n      }\n    }),\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, \"Upload\")))));\n}\n\nconst mapStateToProps = state => ({\n  userImage: state.setting.userImage\n});\n\nexport default connect(mapStateToProps, {\n  fetchProfileImage\n})(ProfileImageUpload);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/ProfileImageUpload.js"],"names":["React","useState","use","imagesRef","axiosWithAuth","Button","makeStyles","CloudUploadIcon","connect","fetchProfileImage","useStyles","theme","button","margin","spacing","ProfileImageUpload","props","classes","file","setFile","userId","localStorage","getItem","useEffect","handleInputChanges","e","preventDefault","target","files","size","alert","value","handleSubmitUploaderProfilePicture","fileRef","child","name","put","then","snapshot","post","file_name","res","onClose","catch","error","console","err","height","carFix","display","flexDirection","maxWidth","justifyContent","mapStateToProps","state","userImage","setting"],"mappings":"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","sourcesContent":["\nimport React, { useState,use } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport axiosWithAuth from '../helpers/axiosWithAuth';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { connect } from 'react-redux';\nimport { fetchProfileImage } from \"../store/actions/settingsActions\";\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        margin: theme.spacing(1),\n    },\n}));\n\nfunction ProfileImageUpload(props) {\n\n    const classes = useStyles();\n\n    const [file, setFile] = useState({});\n\n    const userId = localStorage.getItem('id');\n\n    useEffect(() => {\n\n        props.fetchProfileImage(userId);\n\n    }, [file]);\n\n\n    // async function fetchProfileImage() {\n    //     let userImages = await axiosWithAuth().get(`/users/image/${userId}`)\n    //     setUserImage(userImages.data);\n    //     return userImages;\n    // }\n\n    function handleInputChanges(e) {\n        e.preventDefault();\n        const file = e.target.files[0]\n        if (!file) {\n            return;\n        }\n        if (file && file.size > 1e8) {\n            alert(\"File is too large. Maximum limit is 100MB.\")\n            e.target.value = ''\n        } else {\n            setFile(file);\n        }\n    }\n\n\n    function handleSubmitUploaderProfilePicture(e) {\n        e.preventDefault()\n        // Create file ref (Example: /documents/:car_id/:file_name)\n        const fileRef = imagesRef.child(`${userId}/${file.name}`)\n        // Upload file\n        fileRef.put(file).then((snapshot) => {\n            axiosWithAuth().post(`/users/image/${userId}`, { file_name: file.name })\n                .then(res => {\n                    props.onClose()\n                    props.fetchProfileImage(userId);\n                    \n                })\n                .catch(error => {\n                    console.error(error);\n                })\n        }).catch(err => {\n            console.error(err)\n        });\n    }\n\n\n    return (\n        <>\n            <div style={{ height: \"200px\" }}>\n                {(props.carFix ? <p>no image</p> : null)}\n                <div style={{ display: 'flex', flexDirection: \"column\" }}>\n                    <form onSubmit={handleSubmitUploaderProfilePicture} style={{ display: 'flex', flexDirection: \"column\", maxWidth: \"200px\", justifyContent: \"Center\" }}>\n                        <input required id=\"uploader\" type=\"file\" accept=\"image/*,.pdf,.doc\" onChange={handleInputChanges}></input>\n                        <Button\n                            variant=\"contained\"\n                            name=\"car_type\"\n                            color=\"default\"\n                            className={classes.button}\n                            startIcon={<CloudUploadIcon />}\n                            type=\"submit\"\n                        >\n                            Upload\n                </Button>\n                    </form>\n                </div>\n            </div>\n        </>\n    )\n\n\n}\n\n\nconst mapStateToProps = state => ({\n    userImage: state.setting.userImage\n});\nexport default connect(\n    mapStateToProps,\n    { fetchProfileImage }\n)(ProfileImageUpload);\n\n"]},"metadata":{},"sourceType":"module"}