{"ast":null,"code":"import _slicedToArray from \"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/Question.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NavLink, Route, withRouter } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport EditIcon from '@material-ui/icons/Add';\nimport PostAddModal from './PostAddModal';\nimport { browserHistory } from 'react-router';\nimport Tooltip from '@material-ui/core/Tooltip';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n    position: 'relative',\n    minHeight: 200\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  },\n  margin: {\n    margin: theme.spacing(1),\n    boxShadow: \"0 16px 19px rgba(0,0,0,0.2), 0 15px 15px rgba(0,0,0,0.2)\",\n    '&:hover': {\n      boxShadow: \"0 2px 4px rgba(0,0,0,0.25), 0 2px 2px rgba(0,0,0,0.22)\"\n    }\n  }\n}));\n\nfunction Question(props) {\n  const classes = useStyles();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        cars = _useState2[0],\n        setCars = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        open = _useState4[0],\n        setOpen = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        errorOpen = _useState6[0],\n        setErrorOpen = _useState6[1];\n  /**\n   * Modal Methods\n   */\n\n\n  function handleOpen() {\n    if (localStorage.getItem(\"token\") === null) {\n      props.history.push('/login');\n    }\n\n    setOpen(true);\n  }\n\n  function handleErrorOpen() {\n    setErrorOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleErrorClose() {\n    setErrorOpen(false);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"nav\",\n    style: {\n      backgroundColor: \"rgb(210, 210, 211)\",\n      maxWidth: \"1300px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    id: \"link\",\n    style: {\n      width: '50px'\n    },\n    to: \"/login\",\n    activeClassName: \"active\",\n    \"data-testid\": \"signup-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Login\"))), React.createElement(Tooltip, {\n    title: \"Ask Question\",\n    placement: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Fab, {\n    color: \"none\",\n    \"aria-label\": \"add\",\n    style: {\n      color: \"darkcyan\",\n      outline: '0'\n    },\n    className: classes.margin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(EditIcon, {\n    onClick: handleOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }))), React.createElement(PostAddModal, {\n    open: open,\n    onClose: handleClose,\n    titleText: \"Post Form\",\n    bodyText: \"\",\n    redirect: \"/mycars\",\n    redirectText: \"cars\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }));\n}\n\n;\nexport default withRouter(Question);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/Question.js"],"names":["React","useState","useEffect","makeStyles","NavLink","Route","withRouter","TextField","Fab","EditIcon","PostAddModal","browserHistory","Tooltip","useStyles","theme","root","backgroundColor","palette","background","paper","width","position","minHeight","fab","bottom","spacing","right","margin","boxShadow","Question","props","classes","cars","setCars","open","setOpen","errorOpen","setErrorOpen","handleOpen","localStorage","getItem","history","push","handleErrorOpen","handleClose","handleErrorClose","maxWidth","color","outline"],"mappings":"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","sourcesContent":["\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NavLink,Route, withRouter } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport EditIcon from '@material-ui/icons/Add';\nimport PostAddModal from './PostAddModal';\nimport { browserHistory } from 'react-router';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n    position: 'relative',\n    minHeight: 200,\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  margin: {\n    margin: theme.spacing(1),\n    boxShadow: \"0 16px 19px rgba(0,0,0,0.2), 0 15px 15px rgba(0,0,0,0.2)\",\n    '&:hover': {\n      boxShadow: \"0 2px 4px rgba(0,0,0,0.25), 0 2px 2px rgba(0,0,0,0.22)\"\n    },\n  },\n\n}));\n\n\n\n\nfunction Question(props) {\n\n  const classes = useStyles();\n\n  const [cars, setCars] = useState([])\n  const [open, setOpen] = useState(false);\n  const [errorOpen, setErrorOpen] = useState(false);\n\n  /**\n   * Modal Methods\n   */\n\n\n\n  function handleOpen() {\n\n    if (localStorage.getItem(\"token\") === null) {\n      props.history.push('/login')\n    }\n    setOpen(true);\n\n  }\n\n\n  function handleErrorOpen() {\n    setErrorOpen(true);\n  }\n  function handleClose() {\n    setOpen(false);\n  }\n  function handleErrorClose() {\n    setErrorOpen(false);\n  }\n\n\n  return (\n    <>\n    <div className=\"nav\" style={{ backgroundColor: \"rgb(210, 210, 211)\", maxWidth: \"1300px\" }}>\n        <NavLink id=\"link\" style={{width:'50px'}}to=\"/login\" activeClassName=\"active\" data-testid=\"signup-link\">\n          <i>Login</i>\n        </NavLink >\n      </div>\n\n      <Tooltip title=\"Ask Question\" placement=\"right\">\n        <Fab color=\"none\" aria-label=\"add\" style={{ color: \"darkcyan\", outline: '0' }} className={classes.margin}>\n          <EditIcon\n            onClick={handleOpen}\n          />\n\n        </Fab>\n      </Tooltip>\n\n\n\n\n      <PostAddModal\n        open={open}\n        onClose={handleClose}\n        titleText={\"Post Form\"}\n        bodyText={\"\"}\n        redirect={\"/mycars\"}\n        redirectText={\"cars\"}\n      />\n\n\n    </>\n  );\n};\n\n\n\nexport default withRouter(Question);\n"]},"metadata":{},"sourceType":"module"}