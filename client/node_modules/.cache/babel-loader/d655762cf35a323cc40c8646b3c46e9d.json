{"ast":null,"code":"import _regeneratorRuntime from\"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{imagesRef}from'../helpers/firebase';import axiosWithAuth from'../helpers/axiosWithAuth';import Button from'@material-ui/core/Button';import{makeStyles}from'@material-ui/core/styles';import CloudUploadIcon from'@material-ui/icons/CloudUpload';import ProfileImageShow from'./ProfileImageShow';import DriveEtaIcon from'@material-ui/icons/DriveEta';var useStyles=makeStyles(function(theme){return{button:{margin:theme.spacing(1)}};});function ProfileImageUpload(props){var classes=useStyles();var userId=localStorage.getItem('id');var _useState=useState({}),_useState2=_slicedToArray(_useState,2),userImage=_useState2[0],setUserImage=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),file=_useState4[0],setFile=_useState4[1];useEffect(function(){fetchProfileImage();},[file]);function fetchProfileImage(){return _fetchProfileImage.apply(this,arguments);}function _fetchProfileImage(){_fetchProfileImage=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var userImages;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axiosWithAuth().get(\"/users/image/\".concat(userId));case 2:userImages=_context.sent;setUserImage(userImages.data);return _context.abrupt(\"return\",userImages);case 5:case\"end\":return _context.stop();}}},_callee);}));return _fetchProfileImage.apply(this,arguments);}function handleInputChanges(e){e.preventDefault();var file=e.target.files[0];if(!file){return;}if(file&&file.size>1e8){alert(\"File is too large. Maximum limit is 100MB.\");e.target.value='';}else{setFile(file);}}function handleSubmitUploaderProfilePicture(e){e.preventDefault();// Create file ref (Example: /documents/:car_id/:file_name)\nvar fileRef=imagesRef.child(\"\".concat(userId,\"/\").concat(file.name));// Upload file\nfileRef.put(file).then(function(snapshot){// console.log('Upload success!', snapshot.constructor, snapshot);\naxiosWithAuth().post(\"/users/image/\".concat(userId),{file_name:file.name}).then(function(res){fetchProfileImage();window.location.reload();}).catch(function(error){console.error(error);});}).catch(function(err){console.error(err);});}// if(userImage.length > 0){\n//     return (\n//     <>\n//      <ProfileImageShow  userId={userId} userImage={userImage}/>\n//     </>\n//     )   \n// } \nif(userImage.length>0){return React.createElement(React.Fragment,null,userImage.map(function(image,index){return React.createElement(ProfileImageShow,{key:index,userId:userId,image:image});}));}else{return React.createElement(React.Fragment,null,React.createElement(\"div\",{style:{height:\"200px\"}},props.carFix?React.createElement(\"p\",null,\"no image\"):null,React.createElement(\"div\",{style:{display:'flex',flexDirection:\"column\"}},React.createElement(\"form\",{onSubmit:handleSubmitUploaderProfilePicture},React.createElement(\"input\",{required:true,id:\"uploader\",type:\"file\",accept:\"image/*,.pdf,.doc\",onChange:handleInputChanges}),React.createElement(Button,{variant:\"contained\",name:\"car_type\",color:\"default\",className:classes.button,startIcon:React.createElement(CloudUploadIcon,null),type:\"submit\"},\"Upload\")))));}}export default ProfileImageUpload;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/ProfileImageUpload.js"],"names":["React","useEffect","useState","imagesRef","axiosWithAuth","Button","makeStyles","CloudUploadIcon","ProfileImageShow","DriveEtaIcon","useStyles","theme","button","margin","spacing","ProfileImageUpload","props","classes","userId","localStorage","getItem","userImage","setUserImage","file","setFile","fetchProfileImage","get","userImages","data","handleInputChanges","e","preventDefault","target","files","size","alert","value","handleSubmitUploaderProfilePicture","fileRef","child","name","put","then","snapshot","post","file_name","res","window","location","reload","catch","error","console","err","length","map","image","index","height","carFix","display","flexDirection"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport { imagesRef } from '../helpers/firebase';\nimport axiosWithAuth from '../helpers/axiosWithAuth';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport ProfileImageShow from './ProfileImageShow';\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n      margin: theme.spacing(1),\n    },\n  }));\n\nfunction ProfileImageUpload(props) {\n\n    const classes = useStyles();\n\n    const userId = localStorage.getItem('id');\n    \n    const [userImage, setUserImage] = useState({});\n    const [file, setFile] = useState({});\n\n    useEffect(() => {\n    \n        fetchProfileImage();\n        \n    }, [file]);\n\n    async function fetchProfileImage() {\n        let userImages = await axiosWithAuth().get(`/users/image/${userId}`)\n        setUserImage(userImages.data);\n        return userImages;\n    }\n\n    function handleInputChanges(e) {\n        e.preventDefault();\n        const file = e.target.files[0]\n        if (!file) {\n            return;\n        }\n        if (file && file.size > 1e8) {\n            alert(\"File is too large. Maximum limit is 100MB.\")\n            e.target.value = ''\n        } else {\n            setFile(file);\n        }\n    }\n\n\n    function handleSubmitUploaderProfilePicture(e) {\n        e.preventDefault()\n        // Create file ref (Example: /documents/:car_id/:file_name)\n        const fileRef = imagesRef.child(`${userId}/${file.name}`)\n        // Upload file\n        fileRef.put(file).then((snapshot) => {\n            // console.log('Upload success!', snapshot.constructor, snapshot);\n            axiosWithAuth().post(`/users/image/${userId}`, { file_name: file.name })\n                .then(res => {\n                    fetchProfileImage();\n                    window.location.reload();               \n                 })\n                .catch(error => {\n                    console.error(error);\n                })\n        }).catch(err => {\n            console.error(err)\n        });\n    }\n    \n\n    // if(userImage.length > 0){\n    //     return (\n    //     <>\n                   \n    //      <ProfileImageShow  userId={userId} userImage={userImage}/>\n                \n    //     </>\n    //     )   \n    // } \n\n    if(userImage.length >0 ){\n        return (\n        <>\n                    {userImage.map((image, index) => {\n                        return <ProfileImageShow key={index} userId={userId} image={image}/>\n                    })} \n        </>\n        )\n    }\n      \n    else{\n        return (\n            <>\n                <div style={{height:\"200px\"}}>\n                {(props.carFix ? <p>no image</p>: null)} \n                <div style={{display:'flex',flexDirection:\"column\"}}>\n                 <form onSubmit={handleSubmitUploaderProfilePicture}> \n                <input required id=\"uploader\" type=\"file\" accept=\"image/*,.pdf,.doc\" onChange={handleInputChanges}></input>\n                    <Button\n                    variant=\"contained\"\n                    name=\"car_type\"\n                    color=\"default\"\n                    className={classes.button}\n                    startIcon={<CloudUploadIcon />}\n                    type =\"submit\"\n                    >\n                    Upload\n                </Button>\n                </form>\n                </div>\n                </div>                \n            </>\n        )\n\n    }\n  \n        \n    \n   \n        \n    \n}\n\n\nexport default ProfileImageUpload;\n"]},"metadata":{},"sourceType":"module"}