{"ast":null,"code":"import _defineProperty from\"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{ADD_POST_START,ADD_POST_SUCCESS,ADD_POST_FAILURE,FETCH_POST_START,FETCH_POST_SUCCESS,FETCH_POST_FAILURE}from'../actions/postActions';var initialState={addingPost:false,posts:[]};var postReducer=function postReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case FETCH_POST_SUCCESS:return _objectSpread({},state,{posts:action.payload});default:return state;}};export default postReducer;","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/store/reducers/postReducer.js"],"names":["ADD_POST_START","ADD_POST_SUCCESS","ADD_POST_FAILURE","FETCH_POST_START","FETCH_POST_SUCCESS","FETCH_POST_FAILURE","initialState","addingPost","posts","postReducer","state","action","type","payload"],"mappings":"+4BAAA,OACAA,cADA,CAECC,gBAFD,CAGCC,gBAHD,CAICC,gBAJD,CAKCC,kBALD,CAMCC,kBAND,KAOM,wBAPN,CASA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,UAAU,CAAC,KADM,CAEjBC,KAAK,CAAE,EAFU,CAArB,CAOA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBJ,YAAyB,IAAXK,CAAAA,MAAW,2CAElD,OAAQA,MAAM,CAACC,IAAf,EAEI,IAAKR,CAAAA,kBAAL,CACA,wBACKM,KADL,EAEEF,KAAK,CAAEG,MAAM,CAACE,OAFhB,GAIA,QACA,MAAOH,CAAAA,KAAP,CARJ,CAWD,CAbH,CAeE,cAAeD,CAAAA,WAAf","sourcesContent":["import {\nADD_POST_START ,\n ADD_POST_SUCCESS,\n ADD_POST_FAILURE,\n FETCH_POST_START,\n FETCH_POST_SUCCESS,\n FETCH_POST_FAILURE,\n}from '../actions/postActions';\n\nconst initialState = {\n    addingPost:false,\n    posts: [],\n\n}\n\n\nconst postReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case FETCH_POST_SUCCESS:\n        return {\n          ...state,\n          posts: action.payload\n        };\n        default: \n        return state \n    }\n\n  };\n\n  export default postReducer;"]},"metadata":{},"sourceType":"module"}