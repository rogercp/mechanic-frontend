{"ast":null,"code":"import _slicedToArray from \"/Users/roger/Projects/mechanic-frontend/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/roger/Projects/mechanic-frontend/client/src/components/Question.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NavLink, Route, withRouter } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport EditIcon from '@material-ui/icons/Add';\nimport PostAddModal from './PostAddModal';\nimport { browserHistory } from 'react-router';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { confirmAlert } from 'react-confirm-alert';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n    position: 'relative',\n    minHeight: 200\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  },\n  margin: {\n    margin: theme.spacing(1),\n    boxShadow: \"0 16px 19px rgba(0,0,0,0.2), 0 15px 15px rgba(0,0,0,0.2)\",\n    '&:hover': {\n      boxShadow: \"0 2px 4px rgba(0,0,0,0.25), 0 2px 2px rgba(0,0,0,0.22)\"\n    }\n  }\n}));\n\nfunction Question(props) {\n  const classes = useStyles();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        cars = _useState2[0],\n        setCars = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        open = _useState4[0],\n        setOpen = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        errorOpen = _useState6[0],\n        setErrorOpen = _useState6[1];\n  /**\n   * Modal Methods\n   */\n\n\n  function handleOpen() {\n    if (localStorage.getItem(\"token\") === null) {\n      props.history.push('/login');\n    }\n\n    if (localStorage.getItem(\"username\") === null) {\n      confirmAlert({\n        customUI: ({\n          onClose\n        }) => {\n          return React.createElement(\"div\", {\n            className: \"custom-ui\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, \"Are you sure?\"), React.createElement(Button, {\n            className: classes.margin,\n            variant: \"secondary\",\n            onClick: onClose,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, \"No\"), React.createElement(Button, {\n            className: classes.margin,\n            variant: \"danger\",\n            onClick: () => {\n              const body = localStorage.getItem('id');\n              axiosWithAuth().put(\"/users/deactivate\", {\n                id: body\n              }).then(res => {\n                onClose();\n              }).catch(err => {\n                onClose();\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, \"Yes\"));\n        }\n      });\n      props.history.push('/settings');\n    }\n\n    setOpen(true);\n  }\n\n  function handleErrorOpen() {\n    setErrorOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleErrorClose() {\n    setErrorOpen(false);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Tooltip, {\n    title: \"Ask Question\",\n    placement: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(Fab, {\n    color: \"none\",\n    \"aria-label\": \"add\",\n    style: {\n      color: \"darkcyan\",\n      outline: '0'\n    },\n    className: classes.margin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(EditIcon, {\n    onClick: handleOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }))), React.createElement(PostAddModal, {\n    open: open,\n    onClose: handleClose,\n    titleText: \"Post Form\",\n    bodyText: \"\",\n    redirect: \"/mycars\",\n    redirectText: \"cars\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }));\n}\n\n;\nexport default withRouter(Question);","map":{"version":3,"sources":["/Users/roger/Projects/mechanic-frontend/client/src/components/Question.js"],"names":["React","useState","useEffect","makeStyles","NavLink","Route","withRouter","TextField","Fab","EditIcon","PostAddModal","browserHistory","Tooltip","confirmAlert","useStyles","theme","root","backgroundColor","palette","background","paper","width","position","minHeight","fab","bottom","spacing","right","margin","boxShadow","Question","props","classes","cars","setCars","open","setOpen","errorOpen","setErrorOpen","handleOpen","localStorage","getItem","history","push","customUI","onClose","body","axiosWithAuth","put","id","then","res","catch","err","handleErrorOpen","handleClose","handleErrorClose","color","outline"],"mappings":"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","sourcesContent":["\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NavLink,Route, withRouter } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport EditIcon from '@material-ui/icons/Add';\nimport PostAddModal from './PostAddModal';\nimport { browserHistory } from 'react-router';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { confirmAlert } from 'react-confirm-alert';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n    position: 'relative',\n    minHeight: 200,\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  margin: {\n    margin: theme.spacing(1),\n    boxShadow: \"0 16px 19px rgba(0,0,0,0.2), 0 15px 15px rgba(0,0,0,0.2)\",\n    '&:hover': {\n      boxShadow: \"0 2px 4px rgba(0,0,0,0.25), 0 2px 2px rgba(0,0,0,0.22)\"\n    },\n  },\n\n}));\n\n\n\n\nfunction Question(props) {\n\n  const classes = useStyles();\n\n  const [cars, setCars] = useState([])\n  const [open, setOpen] = useState(false);\n  const [errorOpen, setErrorOpen] = useState(false);\n\n  /**\n   * Modal Methods\n   */\n\n\n\n  function handleOpen() {\n\n    if (localStorage.getItem(\"token\") === null) {\n      props.history.push('/login')\n    }\n    if(localStorage.getItem(\"username\") === null){\n\n\n      confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <h1>Are you sure?</h1>\n                    <Button className={classes.margin} variant=\"secondary\" onClick={onClose}>No</Button>\n                    <Button\n                        className={classes.margin}\n                        variant=\"danger\"\n                        onClick={() => {\n                            const body = localStorage.getItem('id');\n                            axiosWithAuth()\n                                .put(`/users/deactivate`, { id: body })\n                                .then(res => {\n                                    onClose();\n                                })\n                                .catch(err => {\n                                    onClose();\n                                });\n                        }}\n                    >\n                        Yes\n                </Button>\n                </div>\n            );\n        }\n    });\n      props.history.push('/settings')\n    }\n    setOpen(true);\n\n  }\n\n\n  function handleErrorOpen() {\n    setErrorOpen(true);\n  }\n  function handleClose() {\n    setOpen(false);\n  }\n  function handleErrorClose() {\n    setErrorOpen(false);\n  }\n\n\n\n\n\n  return (\n    <>\n   \n      <Tooltip title=\"Ask Question\" placement=\"right\">\n        <Fab color=\"none\" aria-label=\"add\" style={{ color: \"darkcyan\", outline: '0' }} className={classes.margin}>\n          <EditIcon\n          onClick={handleOpen} \n          />\n\n        </Fab>\n      </Tooltip>\n\n\n\n\n      <PostAddModal\n        open={open}\n        onClose={handleClose}\n        titleText={\"Post Form\"}\n        bodyText={\"\"}\n        redirect={\"/mycars\"}\n        redirectText={\"cars\"}\n      />\n\n\n    </>\n  );\n};\n\n\n\nexport default withRouter(Question);\n"]},"metadata":{},"sourceType":"module"}